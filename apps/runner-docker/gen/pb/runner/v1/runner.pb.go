// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: runner/v1/runner.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthStatus int32

const (
	HealthStatus_HEALTH_STATUS_UNSPECIFIED HealthStatus = 0
	HealthStatus_HEALTH_STATUS_HEALTHY     HealthStatus = 1
	HealthStatus_HEALTH_STATUS_UNHEALTHY   HealthStatus = 2
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_STATUS_UNSPECIFIED",
		1: "HEALTH_STATUS_HEALTHY",
		2: "HEALTH_STATUS_UNHEALTHY",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_STATUS_UNSPECIFIED": 0,
		"HEALTH_STATUS_HEALTHY":     1,
		"HEALTH_STATUS_UNHEALTHY":   2,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_runner_v1_runner_proto_enumTypes[0].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_runner_v1_runner_proto_enumTypes[0]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{0}
}

type SandboxState int32

const (
	SandboxState_SANDBOX_STATE_UNSPECIFIED      SandboxState = 0
	SandboxState_SANDBOX_STATE_CREATING         SandboxState = 1
	SandboxState_SANDBOX_STATE_RESTORING        SandboxState = 2
	SandboxState_SANDBOX_STATE_DESTROYED        SandboxState = 3
	SandboxState_SANDBOX_STATE_DESTROYING       SandboxState = 4
	SandboxState_SANDBOX_STATE_STARTED          SandboxState = 5
	SandboxState_SANDBOX_STATE_STOPPED          SandboxState = 6
	SandboxState_SANDBOX_STATE_STARTING         SandboxState = 7
	SandboxState_SANDBOX_STATE_STOPPING         SandboxState = 8
	SandboxState_SANDBOX_STATE_RESIZING         SandboxState = 9
	SandboxState_SANDBOX_STATE_ERROR            SandboxState = 10
	SandboxState_SANDBOX_STATE_PULLING_SNAPSHOT SandboxState = 11
)

// Enum value maps for SandboxState.
var (
	SandboxState_name = map[int32]string{
		0:  "SANDBOX_STATE_UNSPECIFIED",
		1:  "SANDBOX_STATE_CREATING",
		2:  "SANDBOX_STATE_RESTORING",
		3:  "SANDBOX_STATE_DESTROYED",
		4:  "SANDBOX_STATE_DESTROYING",
		5:  "SANDBOX_STATE_STARTED",
		6:  "SANDBOX_STATE_STOPPED",
		7:  "SANDBOX_STATE_STARTING",
		8:  "SANDBOX_STATE_STOPPING",
		9:  "SANDBOX_STATE_RESIZING",
		10: "SANDBOX_STATE_ERROR",
		11: "SANDBOX_STATE_PULLING_SNAPSHOT",
	}
	SandboxState_value = map[string]int32{
		"SANDBOX_STATE_UNSPECIFIED":      0,
		"SANDBOX_STATE_CREATING":         1,
		"SANDBOX_STATE_RESTORING":        2,
		"SANDBOX_STATE_DESTROYED":        3,
		"SANDBOX_STATE_DESTROYING":       4,
		"SANDBOX_STATE_STARTED":          5,
		"SANDBOX_STATE_STOPPED":          6,
		"SANDBOX_STATE_STARTING":         7,
		"SANDBOX_STATE_STOPPING":         8,
		"SANDBOX_STATE_RESIZING":         9,
		"SANDBOX_STATE_ERROR":            10,
		"SANDBOX_STATE_PULLING_SNAPSHOT": 11,
	}
)

func (x SandboxState) Enum() *SandboxState {
	p := new(SandboxState)
	*p = x
	return p
}

func (x SandboxState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SandboxState) Descriptor() protoreflect.EnumDescriptor {
	return file_runner_v1_runner_proto_enumTypes[1].Descriptor()
}

func (SandboxState) Type() protoreflect.EnumType {
	return &file_runner_v1_runner_proto_enumTypes[1]
}

func (x SandboxState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SandboxState.Descriptor instead.
func (SandboxState) EnumDescriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{1}
}

type BackupState int32

const (
	BackupState_BACKUP_STATE_UNSPECIFIED BackupState = 0
	BackupState_BACKUP_STATE_PENDING     BackupState = 1
	BackupState_BACKUP_STATE_IN_PROGRESS BackupState = 2
	BackupState_BACKUP_STATE_COMPLETED   BackupState = 3
	BackupState_BACKUP_STATE_FAILED      BackupState = 4
)

// Enum value maps for BackupState.
var (
	BackupState_name = map[int32]string{
		0: "BACKUP_STATE_UNSPECIFIED",
		1: "BACKUP_STATE_PENDING",
		2: "BACKUP_STATE_IN_PROGRESS",
		3: "BACKUP_STATE_COMPLETED",
		4: "BACKUP_STATE_FAILED",
	}
	BackupState_value = map[string]int32{
		"BACKUP_STATE_UNSPECIFIED": 0,
		"BACKUP_STATE_PENDING":     1,
		"BACKUP_STATE_IN_PROGRESS": 2,
		"BACKUP_STATE_COMPLETED":   3,
		"BACKUP_STATE_FAILED":      4,
	}
)

func (x BackupState) Enum() *BackupState {
	p := new(BackupState)
	*p = x
	return p
}

func (x BackupState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupState) Descriptor() protoreflect.EnumDescriptor {
	return file_runner_v1_runner_proto_enumTypes[2].Descriptor()
}

func (BackupState) Type() protoreflect.EnumType {
	return &file_runner_v1_runner_proto_enumTypes[2]
}

func (x BackupState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupState.Descriptor instead.
func (BackupState) EnumDescriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{2}
}

// Health messages
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        HealthStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=runner.v1.HealthStatus" json:"status,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Runner messages
type RunnerInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerInfoRequest) Reset() {
	*x = RunnerInfoRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerInfoRequest) ProtoMessage() {}

func (x *RunnerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerInfoRequest.ProtoReflect.Descriptor instead.
func (*RunnerInfoRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{2}
}

type RunnerInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       *RunnerMetrics         `protobuf:"bytes,1,opt,name=metrics,proto3,oneof" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerInfoResponse) Reset() {
	*x = RunnerInfoResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerInfoResponse) ProtoMessage() {}

func (x *RunnerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerInfoResponse.ProtoReflect.Descriptor instead.
func (*RunnerInfoResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{3}
}

func (x *RunnerInfoResponse) GetMetrics() *RunnerMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Sandbox messages
type CreateSandboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FromVolumeId  *string                `protobuf:"bytes,2,opt,name=from_volume_id,json=fromVolumeId,proto3,oneof" json:"from_volume_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Snapshot      string                 `protobuf:"bytes,4,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	OsUser        string                 `protobuf:"bytes,5,opt,name=os_user,json=osUser,proto3" json:"os_user,omitempty"`
	CpuQuota      int64                  `protobuf:"varint,6,opt,name=cpu_quota,json=cpuQuota,proto3" json:"cpu_quota,omitempty"`
	GpuQuota      int64                  `protobuf:"varint,7,opt,name=gpu_quota,json=gpuQuota,proto3" json:"gpu_quota,omitempty"`
	MemoryQuota   int64                  `protobuf:"varint,8,opt,name=memory_quota,json=memoryQuota,proto3" json:"memory_quota,omitempty"`
	StorageQuota  int64                  `protobuf:"varint,9,opt,name=storage_quota,json=storageQuota,proto3" json:"storage_quota,omitempty"`
	Env           map[string]string      `protobuf:"bytes,10,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Registry      *Registry              `protobuf:"bytes,11,opt,name=registry,proto3,oneof" json:"registry,omitempty"`
	Entrypoint    []string               `protobuf:"bytes,12,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Volumes       []*Volume              `protobuf:"bytes,13,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSandboxRequest) Reset() {
	*x = CreateSandboxRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSandboxRequest) ProtoMessage() {}

func (x *CreateSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSandboxRequest.ProtoReflect.Descriptor instead.
func (*CreateSandboxRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSandboxRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSandboxRequest) GetFromVolumeId() string {
	if x != nil && x.FromVolumeId != nil {
		return *x.FromVolumeId
	}
	return ""
}

func (x *CreateSandboxRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateSandboxRequest) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

func (x *CreateSandboxRequest) GetOsUser() string {
	if x != nil {
		return x.OsUser
	}
	return ""
}

func (x *CreateSandboxRequest) GetCpuQuota() int64 {
	if x != nil {
		return x.CpuQuota
	}
	return 0
}

func (x *CreateSandboxRequest) GetGpuQuota() int64 {
	if x != nil {
		return x.GpuQuota
	}
	return 0
}

func (x *CreateSandboxRequest) GetMemoryQuota() int64 {
	if x != nil {
		return x.MemoryQuota
	}
	return 0
}

func (x *CreateSandboxRequest) GetStorageQuota() int64 {
	if x != nil {
		return x.StorageQuota
	}
	return 0
}

func (x *CreateSandboxRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CreateSandboxRequest) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *CreateSandboxRequest) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *CreateSandboxRequest) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type CreateSandboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSandboxResponse) Reset() {
	*x = CreateSandboxResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSandboxResponse) ProtoMessage() {}

func (x *CreateSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSandboxResponse.ProtoReflect.Descriptor instead.
func (*CreateSandboxResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSandboxResponse) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

type DestroySandboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroySandboxRequest) Reset() {
	*x = DestroySandboxRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroySandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroySandboxRequest) ProtoMessage() {}

func (x *DestroySandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroySandboxRequest.ProtoReflect.Descriptor instead.
func (*DestroySandboxRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{6}
}

func (x *DestroySandboxRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

type DestroySandboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroySandboxResponse) Reset() {
	*x = DestroySandboxResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroySandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroySandboxResponse) ProtoMessage() {}

func (x *DestroySandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroySandboxResponse.ProtoReflect.Descriptor instead.
func (*DestroySandboxResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{7}
}

func (x *DestroySandboxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateBackupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	Registry      *Registry              `protobuf:"bytes,2,opt,name=registry,proto3" json:"registry,omitempty"`
	Snapshot      string                 `protobuf:"bytes,3,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBackupRequest) Reset() {
	*x = CreateBackupRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackupRequest) ProtoMessage() {}

func (x *CreateBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackupRequest.ProtoReflect.Descriptor instead.
func (*CreateBackupRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{8}
}

func (x *CreateBackupRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *CreateBackupRequest) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *CreateBackupRequest) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

type CreateBackupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBackupResponse) Reset() {
	*x = CreateBackupResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackupResponse) ProtoMessage() {}

func (x *CreateBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackupResponse.ProtoReflect.Descriptor instead.
func (*CreateBackupResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{9}
}

func (x *CreateBackupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartSandboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSandboxRequest) Reset() {
	*x = StartSandboxRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSandboxRequest) ProtoMessage() {}

func (x *StartSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSandboxRequest.ProtoReflect.Descriptor instead.
func (*StartSandboxRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{10}
}

func (x *StartSandboxRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

type StartSandboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSandboxResponse) Reset() {
	*x = StartSandboxResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSandboxResponse) ProtoMessage() {}

func (x *StartSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSandboxResponse.ProtoReflect.Descriptor instead.
func (*StartSandboxResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{11}
}

func (x *StartSandboxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopSandboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSandboxRequest) Reset() {
	*x = StopSandboxRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSandboxRequest) ProtoMessage() {}

func (x *StopSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSandboxRequest.ProtoReflect.Descriptor instead.
func (*StopSandboxRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{12}
}

func (x *StopSandboxRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

type StopSandboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSandboxResponse) Reset() {
	*x = StopSandboxResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSandboxResponse) ProtoMessage() {}

func (x *StopSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSandboxResponse.ProtoReflect.Descriptor instead.
func (*StopSandboxResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{13}
}

func (x *StopSandboxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SandboxInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SandboxInfoRequest) Reset() {
	*x = SandboxInfoRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxInfoRequest) ProtoMessage() {}

func (x *SandboxInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxInfoRequest.ProtoReflect.Descriptor instead.
func (*SandboxInfoRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{14}
}

func (x *SandboxInfoRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

type SandboxInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         SandboxState           `protobuf:"varint,1,opt,name=state,proto3,enum=runner.v1.SandboxState" json:"state,omitempty"`
	BackupState   BackupState            `protobuf:"varint,2,opt,name=backup_state,json=backupState,proto3,enum=runner.v1.BackupState" json:"backup_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SandboxInfoResponse) Reset() {
	*x = SandboxInfoResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxInfoResponse) ProtoMessage() {}

func (x *SandboxInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxInfoResponse.ProtoReflect.Descriptor instead.
func (*SandboxInfoResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{15}
}

func (x *SandboxInfoResponse) GetState() SandboxState {
	if x != nil {
		return x.State
	}
	return SandboxState_SANDBOX_STATE_UNSPECIFIED
}

func (x *SandboxInfoResponse) GetBackupState() BackupState {
	if x != nil {
		return x.BackupState
	}
	return BackupState_BACKUP_STATE_UNSPECIFIED
}

type RemoveDestroyedSandboxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveDestroyedSandboxRequest) Reset() {
	*x = RemoveDestroyedSandboxRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDestroyedSandboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDestroyedSandboxRequest) ProtoMessage() {}

func (x *RemoveDestroyedSandboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDestroyedSandboxRequest.ProtoReflect.Descriptor instead.
func (*RemoveDestroyedSandboxRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveDestroyedSandboxRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

type RemoveDestroyedSandboxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveDestroyedSandboxResponse) Reset() {
	*x = RemoveDestroyedSandboxResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveDestroyedSandboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDestroyedSandboxResponse) ProtoMessage() {}

func (x *RemoveDestroyedSandboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDestroyedSandboxResponse.ProtoReflect.Descriptor instead.
func (*RemoveDestroyedSandboxResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveDestroyedSandboxResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SandboxDaemonVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SandboxId     string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SandboxDaemonVersionRequest) Reset() {
	*x = SandboxDaemonVersionRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxDaemonVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxDaemonVersionRequest) ProtoMessage() {}

func (x *SandboxDaemonVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxDaemonVersionRequest.ProtoReflect.Descriptor instead.
func (*SandboxDaemonVersionRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{18}
}

func (x *SandboxDaemonVersionRequest) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

type SandboxDaemonVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DaemonVersion string                 `protobuf:"bytes,1,opt,name=daemon_version,json=daemonVersion,proto3" json:"daemon_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SandboxDaemonVersionResponse) Reset() {
	*x = SandboxDaemonVersionResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SandboxDaemonVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxDaemonVersionResponse) ProtoMessage() {}

func (x *SandboxDaemonVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxDaemonVersionResponse.ProtoReflect.Descriptor instead.
func (*SandboxDaemonVersionResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{19}
}

func (x *SandboxDaemonVersionResponse) GetDaemonVersion() string {
	if x != nil {
		return x.DaemonVersion
	}
	return ""
}

// Snapshot messages
type Registry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Project       *string                `protobuf:"bytes,2,opt,name=project,proto3,oneof" json:"project,omitempty"`
	Username      *string                `protobuf:"bytes,3,opt,name=username,proto3,oneof" json:"username,omitempty"`
	Password      *string                `protobuf:"bytes,4,opt,name=password,proto3,oneof" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_runner_v1_runner_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{20}
}

func (x *Registry) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Registry) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Registry) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *Registry) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type PullSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshot      string                 `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Registry      *Registry              `protobuf:"bytes,2,opt,name=registry,proto3" json:"registry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSnapshotRequest) Reset() {
	*x = PullSnapshotRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSnapshotRequest) ProtoMessage() {}

func (x *PullSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSnapshotRequest.ProtoReflect.Descriptor instead.
func (*PullSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{21}
}

func (x *PullSnapshotRequest) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

func (x *PullSnapshotRequest) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

type PullSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullSnapshotResponse) Reset() {
	*x = PullSnapshotResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullSnapshotResponse) ProtoMessage() {}

func (x *PullSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullSnapshotResponse.ProtoReflect.Descriptor instead.
func (*PullSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{22}
}

func (x *PullSnapshotResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BuildSnapshotRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Snapshot               *string                `protobuf:"bytes,1,opt,name=snapshot,proto3,oneof" json:"snapshot,omitempty"`
	Registry               *Registry              `protobuf:"bytes,2,opt,name=registry,proto3,oneof" json:"registry,omitempty"`
	Dockerfile             string                 `protobuf:"bytes,3,opt,name=dockerfile,proto3" json:"dockerfile,omitempty"`
	OrganizationId         string                 `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Context                []string               `protobuf:"bytes,5,rep,name=context,proto3" json:"context,omitempty"`
	PushToInternalRegistry *bool                  `protobuf:"varint,6,opt,name=push_to_internal_registry,json=pushToInternalRegistry,proto3,oneof" json:"push_to_internal_registry,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BuildSnapshotRequest) Reset() {
	*x = BuildSnapshotRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSnapshotRequest) ProtoMessage() {}

func (x *BuildSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSnapshotRequest.ProtoReflect.Descriptor instead.
func (*BuildSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{23}
}

func (x *BuildSnapshotRequest) GetSnapshot() string {
	if x != nil && x.Snapshot != nil {
		return *x.Snapshot
	}
	return ""
}

func (x *BuildSnapshotRequest) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *BuildSnapshotRequest) GetDockerfile() string {
	if x != nil {
		return x.Dockerfile
	}
	return ""
}

func (x *BuildSnapshotRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *BuildSnapshotRequest) GetContext() []string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *BuildSnapshotRequest) GetPushToInternalRegistry() bool {
	if x != nil && x.PushToInternalRegistry != nil {
		return *x.PushToInternalRegistry
	}
	return false
}

type BuildSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildSnapshotResponse) Reset() {
	*x = BuildSnapshotResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSnapshotResponse) ProtoMessage() {}

func (x *BuildSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSnapshotResponse.ProtoReflect.Descriptor instead.
func (*BuildSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{24}
}

func (x *BuildSnapshotResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SnapshotExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshot      string                 `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	IncludeLatest bool                   `protobuf:"varint,2,opt,name=include_latest,json=includeLatest,proto3" json:"include_latest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotExistsRequest) Reset() {
	*x = SnapshotExistsRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotExistsRequest) ProtoMessage() {}

func (x *SnapshotExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotExistsRequest.ProtoReflect.Descriptor instead.
func (*SnapshotExistsRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{25}
}

func (x *SnapshotExistsRequest) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

func (x *SnapshotExistsRequest) GetIncludeLatest() bool {
	if x != nil {
		return x.IncludeLatest
	}
	return false
}

type SnapshotExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotExistsResponse) Reset() {
	*x = SnapshotExistsResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotExistsResponse) ProtoMessage() {}

func (x *SnapshotExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotExistsResponse.ProtoReflect.Descriptor instead.
func (*SnapshotExistsResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{26}
}

func (x *SnapshotExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type RemoveSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshot      string                 `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSnapshotRequest) Reset() {
	*x = RemoveSnapshotRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSnapshotRequest) ProtoMessage() {}

func (x *RemoveSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSnapshotRequest.ProtoReflect.Descriptor instead.
func (*RemoveSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveSnapshotRequest) GetSnapshot() string {
	if x != nil {
		return x.Snapshot
	}
	return ""
}

func (x *RemoveSnapshotRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RemoveSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSnapshotResponse) Reset() {
	*x = RemoveSnapshotResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSnapshotResponse) ProtoMessage() {}

func (x *RemoveSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSnapshotResponse.ProtoReflect.Descriptor instead.
func (*RemoveSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveSnapshotResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetSnapshotLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SnapshotRef   string                 `protobuf:"bytes,1,opt,name=snapshot_ref,json=snapshotRef,proto3" json:"snapshot_ref,omitempty"`
	Follow        bool                   `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSnapshotLogsRequest) Reset() {
	*x = GetSnapshotLogsRequest{}
	mi := &file_runner_v1_runner_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSnapshotLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapshotLogsRequest) ProtoMessage() {}

func (x *GetSnapshotLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapshotLogsRequest.ProtoReflect.Descriptor instead.
func (*GetSnapshotLogsRequest) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{29}
}

func (x *GetSnapshotLogsRequest) GetSnapshotRef() string {
	if x != nil {
		return x.SnapshotRef
	}
	return ""
}

func (x *GetSnapshotLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type GetSnapshotLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSnapshotLogsResponse) Reset() {
	*x = GetSnapshotLogsResponse{}
	mi := &file_runner_v1_runner_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSnapshotLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapshotLogsResponse) ProtoMessage() {}

func (x *GetSnapshotLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapshotLogsResponse.ProtoReflect.Descriptor instead.
func (*GetSnapshotLogsResponse) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{30}
}

func (x *GetSnapshotLogsResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Add Volume message for CreateSandboxRequest
type Volume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeId      string                 `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	MountPath     string                 `protobuf:"bytes,2,opt,name=mount_path,json=mountPath,proto3" json:"mount_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volume) Reset() {
	*x = Volume{}
	mi := &file_runner_v1_runner_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{31}
}

func (x *Volume) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *Volume) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

// Add RunnerMetrics message for RunnerInfoResponse
type RunnerMetrics struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	CurrentAllocatedCpu          int64                  `protobuf:"varint,1,opt,name=current_allocated_cpu,json=currentAllocatedCpu,proto3" json:"current_allocated_cpu,omitempty"`
	CurrentAllocatedDiskGiB      int64                  `protobuf:"varint,2,opt,name=current_allocated_disk_gi_b,json=currentAllocatedDiskGiB,proto3" json:"current_allocated_disk_gi_b,omitempty"`
	CurrentAllocatedMemoryGiB    int64                  `protobuf:"varint,3,opt,name=current_allocated_memory_gi_b,json=currentAllocatedMemoryGiB,proto3" json:"current_allocated_memory_gi_b,omitempty"`
	CurrentCpuUsagePercentage    float64                `protobuf:"fixed64,4,opt,name=current_cpu_usage_percentage,json=currentCpuUsagePercentage,proto3" json:"current_cpu_usage_percentage,omitempty"`
	CurrentDiskUsagePercentage   float64                `protobuf:"fixed64,5,opt,name=current_disk_usage_percentage,json=currentDiskUsagePercentage,proto3" json:"current_disk_usage_percentage,omitempty"`
	CurrentMemoryUsagePercentage float64                `protobuf:"fixed64,6,opt,name=current_memory_usage_percentage,json=currentMemoryUsagePercentage,proto3" json:"current_memory_usage_percentage,omitempty"`
	CurrentSnapshotCount         int64                  `protobuf:"varint,7,opt,name=current_snapshot_count,json=currentSnapshotCount,proto3" json:"current_snapshot_count,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *RunnerMetrics) Reset() {
	*x = RunnerMetrics{}
	mi := &file_runner_v1_runner_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerMetrics) ProtoMessage() {}

func (x *RunnerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_runner_v1_runner_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerMetrics.ProtoReflect.Descriptor instead.
func (*RunnerMetrics) Descriptor() ([]byte, []int) {
	return file_runner_v1_runner_proto_rawDescGZIP(), []int{32}
}

func (x *RunnerMetrics) GetCurrentAllocatedCpu() int64 {
	if x != nil {
		return x.CurrentAllocatedCpu
	}
	return 0
}

func (x *RunnerMetrics) GetCurrentAllocatedDiskGiB() int64 {
	if x != nil {
		return x.CurrentAllocatedDiskGiB
	}
	return 0
}

func (x *RunnerMetrics) GetCurrentAllocatedMemoryGiB() int64 {
	if x != nil {
		return x.CurrentAllocatedMemoryGiB
	}
	return 0
}

func (x *RunnerMetrics) GetCurrentCpuUsagePercentage() float64 {
	if x != nil {
		return x.CurrentCpuUsagePercentage
	}
	return 0
}

func (x *RunnerMetrics) GetCurrentDiskUsagePercentage() float64 {
	if x != nil {
		return x.CurrentDiskUsagePercentage
	}
	return 0
}

func (x *RunnerMetrics) GetCurrentMemoryUsagePercentage() float64 {
	if x != nil {
		return x.CurrentMemoryUsagePercentage
	}
	return 0
}

func (x *RunnerMetrics) GetCurrentSnapshotCount() int64 {
	if x != nil {
		return x.CurrentSnapshotCount
	}
	return 0
}

var File_runner_v1_runner_proto protoreflect.FileDescriptor

const file_runner_v1_runner_proto_rawDesc = "" +
	"\n" +
	"\x16runner/v1/runner.proto\x12\trunner.v1\"\x14\n" +
	"\x12HealthCheckRequest\"`\n" +
	"\x13HealthCheckResponse\x12/\n" +
	"\x06status\x18\x01 \x01(\x0e2\x17.runner.v1.HealthStatusR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\x13\n" +
	"\x11RunnerInfoRequest\"Y\n" +
	"\x12RunnerInfoResponse\x127\n" +
	"\ametrics\x18\x01 \x01(\v2\x18.runner.v1.RunnerMetricsH\x00R\ametrics\x88\x01\x01B\n" +
	"\n" +
	"\b_metrics\"\xb8\x04\n" +
	"\x14CreateSandboxRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12)\n" +
	"\x0efrom_volume_id\x18\x02 \x01(\tH\x00R\ffromVolumeId\x88\x01\x01\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1a\n" +
	"\bsnapshot\x18\x04 \x01(\tR\bsnapshot\x12\x17\n" +
	"\aos_user\x18\x05 \x01(\tR\x06osUser\x12\x1b\n" +
	"\tcpu_quota\x18\x06 \x01(\x03R\bcpuQuota\x12\x1b\n" +
	"\tgpu_quota\x18\a \x01(\x03R\bgpuQuota\x12!\n" +
	"\fmemory_quota\x18\b \x01(\x03R\vmemoryQuota\x12#\n" +
	"\rstorage_quota\x18\t \x01(\x03R\fstorageQuota\x12:\n" +
	"\x03env\x18\n" +
	" \x03(\v2(.runner.v1.CreateSandboxRequest.EnvEntryR\x03env\x124\n" +
	"\bregistry\x18\v \x01(\v2\x13.runner.v1.RegistryH\x01R\bregistry\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\f \x03(\tR\n" +
	"entrypoint\x12+\n" +
	"\avolumes\x18\r \x03(\v2\x11.runner.v1.VolumeR\avolumes\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x11\n" +
	"\x0f_from_volume_idB\v\n" +
	"\t_registry\"6\n" +
	"\x15CreateSandboxResponse\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\"6\n" +
	"\x15DestroySandboxRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\"2\n" +
	"\x16DestroySandboxResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x81\x01\n" +
	"\x13CreateBackupRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\x12/\n" +
	"\bregistry\x18\x02 \x01(\v2\x13.runner.v1.RegistryR\bregistry\x12\x1a\n" +
	"\bsnapshot\x18\x03 \x01(\tR\bsnapshot\"0\n" +
	"\x14CreateBackupResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"4\n" +
	"\x13StartSandboxRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\"0\n" +
	"\x14StartSandboxResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"3\n" +
	"\x12StopSandboxRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\"/\n" +
	"\x13StopSandboxResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"3\n" +
	"\x12SandboxInfoRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\"\x7f\n" +
	"\x13SandboxInfoResponse\x12-\n" +
	"\x05state\x18\x01 \x01(\x0e2\x17.runner.v1.SandboxStateR\x05state\x129\n" +
	"\fbackup_state\x18\x02 \x01(\x0e2\x16.runner.v1.BackupStateR\vbackupState\">\n" +
	"\x1dRemoveDestroyedSandboxRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\":\n" +
	"\x1eRemoveDestroyedSandboxResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"<\n" +
	"\x1bSandboxDaemonVersionRequest\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\"E\n" +
	"\x1cSandboxDaemonVersionResponse\x12%\n" +
	"\x0edaemon_version\x18\x01 \x01(\tR\rdaemonVersion\"\xa3\x01\n" +
	"\bRegistry\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1d\n" +
	"\aproject\x18\x02 \x01(\tH\x00R\aproject\x88\x01\x01\x12\x1f\n" +
	"\busername\x18\x03 \x01(\tH\x01R\busername\x88\x01\x01\x12\x1f\n" +
	"\bpassword\x18\x04 \x01(\tH\x02R\bpassword\x88\x01\x01B\n" +
	"\n" +
	"\b_projectB\v\n" +
	"\t_usernameB\v\n" +
	"\t_password\"b\n" +
	"\x13PullSnapshotRequest\x12\x1a\n" +
	"\bsnapshot\x18\x01 \x01(\tR\bsnapshot\x12/\n" +
	"\bregistry\x18\x02 \x01(\v2\x13.runner.v1.RegistryR\bregistry\"0\n" +
	"\x14PullSnapshotResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xc8\x02\n" +
	"\x14BuildSnapshotRequest\x12\x1f\n" +
	"\bsnapshot\x18\x01 \x01(\tH\x00R\bsnapshot\x88\x01\x01\x124\n" +
	"\bregistry\x18\x02 \x01(\v2\x13.runner.v1.RegistryH\x01R\bregistry\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"dockerfile\x18\x03 \x01(\tR\n" +
	"dockerfile\x12'\n" +
	"\x0forganization_id\x18\x04 \x01(\tR\x0eorganizationId\x12\x18\n" +
	"\acontext\x18\x05 \x03(\tR\acontext\x12>\n" +
	"\x19push_to_internal_registry\x18\x06 \x01(\bH\x02R\x16pushToInternalRegistry\x88\x01\x01B\v\n" +
	"\t_snapshotB\v\n" +
	"\t_registryB\x1c\n" +
	"\x1a_push_to_internal_registry\"1\n" +
	"\x15BuildSnapshotResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"Z\n" +
	"\x15SnapshotExistsRequest\x12\x1a\n" +
	"\bsnapshot\x18\x01 \x01(\tR\bsnapshot\x12%\n" +
	"\x0einclude_latest\x18\x02 \x01(\bR\rincludeLatest\"0\n" +
	"\x16SnapshotExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\"I\n" +
	"\x15RemoveSnapshotRequest\x12\x1a\n" +
	"\bsnapshot\x18\x01 \x01(\tR\bsnapshot\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"2\n" +
	"\x16RemoveSnapshotResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"S\n" +
	"\x16GetSnapshotLogsRequest\x12!\n" +
	"\fsnapshot_ref\x18\x01 \x01(\tR\vsnapshotRef\x12\x16\n" +
	"\x06follow\x18\x02 \x01(\bR\x06follow\"3\n" +
	"\x17GetSnapshotLogsResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"D\n" +
	"\x06Volume\x12\x1b\n" +
	"\tvolume_id\x18\x01 \x01(\tR\bvolumeId\x12\x1d\n" +
	"\n" +
	"mount_path\x18\x02 \x01(\tR\tmountPath\"\xc4\x03\n" +
	"\rRunnerMetrics\x122\n" +
	"\x15current_allocated_cpu\x18\x01 \x01(\x03R\x13currentAllocatedCpu\x12<\n" +
	"\x1bcurrent_allocated_disk_gi_b\x18\x02 \x01(\x03R\x17currentAllocatedDiskGiB\x12@\n" +
	"\x1dcurrent_allocated_memory_gi_b\x18\x03 \x01(\x03R\x19currentAllocatedMemoryGiB\x12?\n" +
	"\x1ccurrent_cpu_usage_percentage\x18\x04 \x01(\x01R\x19currentCpuUsagePercentage\x12A\n" +
	"\x1dcurrent_disk_usage_percentage\x18\x05 \x01(\x01R\x1acurrentDiskUsagePercentage\x12E\n" +
	"\x1fcurrent_memory_usage_percentage\x18\x06 \x01(\x01R\x1ccurrentMemoryUsagePercentage\x124\n" +
	"\x16current_snapshot_count\x18\a \x01(\x03R\x14currentSnapshotCount*e\n" +
	"\fHealthStatus\x12\x1d\n" +
	"\x19HEALTH_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15HEALTH_STATUS_HEALTHY\x10\x01\x12\x1b\n" +
	"\x17HEALTH_STATUS_UNHEALTHY\x10\x02*\xe8\x02\n" +
	"\fSandboxState\x12\x1d\n" +
	"\x19SANDBOX_STATE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16SANDBOX_STATE_CREATING\x10\x01\x12\x1b\n" +
	"\x17SANDBOX_STATE_RESTORING\x10\x02\x12\x1b\n" +
	"\x17SANDBOX_STATE_DESTROYED\x10\x03\x12\x1c\n" +
	"\x18SANDBOX_STATE_DESTROYING\x10\x04\x12\x19\n" +
	"\x15SANDBOX_STATE_STARTED\x10\x05\x12\x19\n" +
	"\x15SANDBOX_STATE_STOPPED\x10\x06\x12\x1a\n" +
	"\x16SANDBOX_STATE_STARTING\x10\a\x12\x1a\n" +
	"\x16SANDBOX_STATE_STOPPING\x10\b\x12\x1a\n" +
	"\x16SANDBOX_STATE_RESIZING\x10\t\x12\x17\n" +
	"\x13SANDBOX_STATE_ERROR\x10\n" +
	"\x12\"\n" +
	"\x1eSANDBOX_STATE_PULLING_SNAPSHOT\x10\v*\x98\x01\n" +
	"\vBackupState\x12\x1c\n" +
	"\x18BACKUP_STATE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14BACKUP_STATE_PENDING\x10\x01\x12\x1c\n" +
	"\x18BACKUP_STATE_IN_PROGRESS\x10\x02\x12\x1a\n" +
	"\x16BACKUP_STATE_COMPLETED\x10\x03\x12\x17\n" +
	"\x13BACKUP_STATE_FAILED\x10\x042_\n" +
	"\rHealthService\x12N\n" +
	"\vHealthCheck\x12\x1d.runner.v1.HealthCheckRequest\x1a\x1e.runner.v1.HealthCheckResponse\"\x002\\\n" +
	"\rRunnerService\x12K\n" +
	"\n" +
	"RunnerInfo\x12\x1c.runner.v1.RunnerInfoRequest\x1a\x1d.runner.v1.RunnerInfoResponse\"\x002\xe1\x05\n" +
	"\x0eSandboxService\x12T\n" +
	"\rCreateSandbox\x12\x1f.runner.v1.CreateSandboxRequest\x1a .runner.v1.CreateSandboxResponse\"\x00\x12W\n" +
	"\x0eDestroySandbox\x12 .runner.v1.DestroySandboxRequest\x1a!.runner.v1.DestroySandboxResponse\"\x00\x12Q\n" +
	"\fCreateBackup\x12\x1e.runner.v1.CreateBackupRequest\x1a\x1f.runner.v1.CreateBackupResponse\"\x00\x12Q\n" +
	"\fStartSandbox\x12\x1e.runner.v1.StartSandboxRequest\x1a\x1f.runner.v1.StartSandboxResponse\"\x00\x12N\n" +
	"\vStopSandbox\x12\x1d.runner.v1.StopSandboxRequest\x1a\x1e.runner.v1.StopSandboxResponse\"\x00\x12N\n" +
	"\vSandboxInfo\x12\x1d.runner.v1.SandboxInfoRequest\x1a\x1e.runner.v1.SandboxInfoResponse\"\x00\x12o\n" +
	"\x16RemoveDestroyedSandbox\x12(.runner.v1.RemoveDestroyedSandboxRequest\x1a).runner.v1.RemoveDestroyedSandboxResponse\"\x00\x12i\n" +
	"\x14SandboxDaemonVersion\x12&.runner.v1.SandboxDaemonVersionRequest\x1a'.runner.v1.SandboxDaemonVersionResponse\"\x002\xca\x03\n" +
	"\x0fSnapshotService\x12Q\n" +
	"\fPullSnapshot\x12\x1e.runner.v1.PullSnapshotRequest\x1a\x1f.runner.v1.PullSnapshotResponse\"\x00\x12T\n" +
	"\rBuildSnapshot\x12\x1f.runner.v1.BuildSnapshotRequest\x1a .runner.v1.BuildSnapshotResponse\"\x00\x12W\n" +
	"\x0eSnapshotExists\x12 .runner.v1.SnapshotExistsRequest\x1a!.runner.v1.SnapshotExistsResponse\"\x00\x12W\n" +
	"\x0eRemoveSnapshot\x12 .runner.v1.RemoveSnapshotRequest\x1a!.runner.v1.RemoveSnapshotResponse\"\x00\x12\\\n" +
	"\x0fGetSnapshotLogs\x12!.runner.v1.GetSnapshotLogsRequest\x1a\".runner.v1.GetSnapshotLogsResponse\"\x000\x01B\x96\x01\n" +
	"\rcom.runner.v1B\vRunnerProtoP\x01Z3github.com/daytonaio/runner-docker/gen/pb/runner/v1\xa2\x02\x03RXX\xaa\x02\tRunner.V1\xca\x02\tRunner\\V1\xe2\x02\x15Runner\\V1\\GPBMetadata\xea\x02\n" +
	"Runner::V1b\x06proto3"

var (
	file_runner_v1_runner_proto_rawDescOnce sync.Once
	file_runner_v1_runner_proto_rawDescData []byte
)

func file_runner_v1_runner_proto_rawDescGZIP() []byte {
	file_runner_v1_runner_proto_rawDescOnce.Do(func() {
		file_runner_v1_runner_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runner_v1_runner_proto_rawDesc), len(file_runner_v1_runner_proto_rawDesc)))
	})
	return file_runner_v1_runner_proto_rawDescData
}

var file_runner_v1_runner_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_runner_v1_runner_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_runner_v1_runner_proto_goTypes = []any{
	(HealthStatus)(0),                      // 0: runner.v1.HealthStatus
	(SandboxState)(0),                      // 1: runner.v1.SandboxState
	(BackupState)(0),                       // 2: runner.v1.BackupState
	(*HealthCheckRequest)(nil),             // 3: runner.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 4: runner.v1.HealthCheckResponse
	(*RunnerInfoRequest)(nil),              // 5: runner.v1.RunnerInfoRequest
	(*RunnerInfoResponse)(nil),             // 6: runner.v1.RunnerInfoResponse
	(*CreateSandboxRequest)(nil),           // 7: runner.v1.CreateSandboxRequest
	(*CreateSandboxResponse)(nil),          // 8: runner.v1.CreateSandboxResponse
	(*DestroySandboxRequest)(nil),          // 9: runner.v1.DestroySandboxRequest
	(*DestroySandboxResponse)(nil),         // 10: runner.v1.DestroySandboxResponse
	(*CreateBackupRequest)(nil),            // 11: runner.v1.CreateBackupRequest
	(*CreateBackupResponse)(nil),           // 12: runner.v1.CreateBackupResponse
	(*StartSandboxRequest)(nil),            // 13: runner.v1.StartSandboxRequest
	(*StartSandboxResponse)(nil),           // 14: runner.v1.StartSandboxResponse
	(*StopSandboxRequest)(nil),             // 15: runner.v1.StopSandboxRequest
	(*StopSandboxResponse)(nil),            // 16: runner.v1.StopSandboxResponse
	(*SandboxInfoRequest)(nil),             // 17: runner.v1.SandboxInfoRequest
	(*SandboxInfoResponse)(nil),            // 18: runner.v1.SandboxInfoResponse
	(*RemoveDestroyedSandboxRequest)(nil),  // 19: runner.v1.RemoveDestroyedSandboxRequest
	(*RemoveDestroyedSandboxResponse)(nil), // 20: runner.v1.RemoveDestroyedSandboxResponse
	(*SandboxDaemonVersionRequest)(nil),    // 21: runner.v1.SandboxDaemonVersionRequest
	(*SandboxDaemonVersionResponse)(nil),   // 22: runner.v1.SandboxDaemonVersionResponse
	(*Registry)(nil),                       // 23: runner.v1.Registry
	(*PullSnapshotRequest)(nil),            // 24: runner.v1.PullSnapshotRequest
	(*PullSnapshotResponse)(nil),           // 25: runner.v1.PullSnapshotResponse
	(*BuildSnapshotRequest)(nil),           // 26: runner.v1.BuildSnapshotRequest
	(*BuildSnapshotResponse)(nil),          // 27: runner.v1.BuildSnapshotResponse
	(*SnapshotExistsRequest)(nil),          // 28: runner.v1.SnapshotExistsRequest
	(*SnapshotExistsResponse)(nil),         // 29: runner.v1.SnapshotExistsResponse
	(*RemoveSnapshotRequest)(nil),          // 30: runner.v1.RemoveSnapshotRequest
	(*RemoveSnapshotResponse)(nil),         // 31: runner.v1.RemoveSnapshotResponse
	(*GetSnapshotLogsRequest)(nil),         // 32: runner.v1.GetSnapshotLogsRequest
	(*GetSnapshotLogsResponse)(nil),        // 33: runner.v1.GetSnapshotLogsResponse
	(*Volume)(nil),                         // 34: runner.v1.Volume
	(*RunnerMetrics)(nil),                  // 35: runner.v1.RunnerMetrics
	nil,                                    // 36: runner.v1.CreateSandboxRequest.EnvEntry
}
var file_runner_v1_runner_proto_depIdxs = []int32{
	0,  // 0: runner.v1.HealthCheckResponse.status:type_name -> runner.v1.HealthStatus
	35, // 1: runner.v1.RunnerInfoResponse.metrics:type_name -> runner.v1.RunnerMetrics
	36, // 2: runner.v1.CreateSandboxRequest.env:type_name -> runner.v1.CreateSandboxRequest.EnvEntry
	23, // 3: runner.v1.CreateSandboxRequest.registry:type_name -> runner.v1.Registry
	34, // 4: runner.v1.CreateSandboxRequest.volumes:type_name -> runner.v1.Volume
	23, // 5: runner.v1.CreateBackupRequest.registry:type_name -> runner.v1.Registry
	1,  // 6: runner.v1.SandboxInfoResponse.state:type_name -> runner.v1.SandboxState
	2,  // 7: runner.v1.SandboxInfoResponse.backup_state:type_name -> runner.v1.BackupState
	23, // 8: runner.v1.PullSnapshotRequest.registry:type_name -> runner.v1.Registry
	23, // 9: runner.v1.BuildSnapshotRequest.registry:type_name -> runner.v1.Registry
	3,  // 10: runner.v1.HealthService.HealthCheck:input_type -> runner.v1.HealthCheckRequest
	5,  // 11: runner.v1.RunnerService.RunnerInfo:input_type -> runner.v1.RunnerInfoRequest
	7,  // 12: runner.v1.SandboxService.CreateSandbox:input_type -> runner.v1.CreateSandboxRequest
	9,  // 13: runner.v1.SandboxService.DestroySandbox:input_type -> runner.v1.DestroySandboxRequest
	11, // 14: runner.v1.SandboxService.CreateBackup:input_type -> runner.v1.CreateBackupRequest
	13, // 15: runner.v1.SandboxService.StartSandbox:input_type -> runner.v1.StartSandboxRequest
	15, // 16: runner.v1.SandboxService.StopSandbox:input_type -> runner.v1.StopSandboxRequest
	17, // 17: runner.v1.SandboxService.SandboxInfo:input_type -> runner.v1.SandboxInfoRequest
	19, // 18: runner.v1.SandboxService.RemoveDestroyedSandbox:input_type -> runner.v1.RemoveDestroyedSandboxRequest
	21, // 19: runner.v1.SandboxService.SandboxDaemonVersion:input_type -> runner.v1.SandboxDaemonVersionRequest
	24, // 20: runner.v1.SnapshotService.PullSnapshot:input_type -> runner.v1.PullSnapshotRequest
	26, // 21: runner.v1.SnapshotService.BuildSnapshot:input_type -> runner.v1.BuildSnapshotRequest
	28, // 22: runner.v1.SnapshotService.SnapshotExists:input_type -> runner.v1.SnapshotExistsRequest
	30, // 23: runner.v1.SnapshotService.RemoveSnapshot:input_type -> runner.v1.RemoveSnapshotRequest
	32, // 24: runner.v1.SnapshotService.GetSnapshotLogs:input_type -> runner.v1.GetSnapshotLogsRequest
	4,  // 25: runner.v1.HealthService.HealthCheck:output_type -> runner.v1.HealthCheckResponse
	6,  // 26: runner.v1.RunnerService.RunnerInfo:output_type -> runner.v1.RunnerInfoResponse
	8,  // 27: runner.v1.SandboxService.CreateSandbox:output_type -> runner.v1.CreateSandboxResponse
	10, // 28: runner.v1.SandboxService.DestroySandbox:output_type -> runner.v1.DestroySandboxResponse
	12, // 29: runner.v1.SandboxService.CreateBackup:output_type -> runner.v1.CreateBackupResponse
	14, // 30: runner.v1.SandboxService.StartSandbox:output_type -> runner.v1.StartSandboxResponse
	16, // 31: runner.v1.SandboxService.StopSandbox:output_type -> runner.v1.StopSandboxResponse
	18, // 32: runner.v1.SandboxService.SandboxInfo:output_type -> runner.v1.SandboxInfoResponse
	20, // 33: runner.v1.SandboxService.RemoveDestroyedSandbox:output_type -> runner.v1.RemoveDestroyedSandboxResponse
	22, // 34: runner.v1.SandboxService.SandboxDaemonVersion:output_type -> runner.v1.SandboxDaemonVersionResponse
	25, // 35: runner.v1.SnapshotService.PullSnapshot:output_type -> runner.v1.PullSnapshotResponse
	27, // 36: runner.v1.SnapshotService.BuildSnapshot:output_type -> runner.v1.BuildSnapshotResponse
	29, // 37: runner.v1.SnapshotService.SnapshotExists:output_type -> runner.v1.SnapshotExistsResponse
	31, // 38: runner.v1.SnapshotService.RemoveSnapshot:output_type -> runner.v1.RemoveSnapshotResponse
	33, // 39: runner.v1.SnapshotService.GetSnapshotLogs:output_type -> runner.v1.GetSnapshotLogsResponse
	25, // [25:40] is the sub-list for method output_type
	10, // [10:25] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_runner_v1_runner_proto_init() }
func file_runner_v1_runner_proto_init() {
	if File_runner_v1_runner_proto != nil {
		return
	}
	file_runner_v1_runner_proto_msgTypes[3].OneofWrappers = []any{}
	file_runner_v1_runner_proto_msgTypes[4].OneofWrappers = []any{}
	file_runner_v1_runner_proto_msgTypes[20].OneofWrappers = []any{}
	file_runner_v1_runner_proto_msgTypes[23].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runner_v1_runner_proto_rawDesc), len(file_runner_v1_runner_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_runner_v1_runner_proto_goTypes,
		DependencyIndexes: file_runner_v1_runner_proto_depIdxs,
		EnumInfos:         file_runner_v1_runner_proto_enumTypes,
		MessageInfos:      file_runner_v1_runner_proto_msgTypes,
	}.Build()
	File_runner_v1_runner_proto = out.File
	file_runner_v1_runner_proto_goTypes = nil
	file_runner_v1_runner_proto_depIdxs = nil
}
