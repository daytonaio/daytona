{
  "swagger": "2.0",
  "info": {
    "description": "Daytona Runner API",
    "title": "Daytona Runner API",
    "contact": {},
    "version": "v0.0.0-dev"
  },
  "paths": {
    "/": {
      "get": {
        "description": "Health check",
        "produces": ["application/json"],
        "summary": "Health check",
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/images/build": {
      "post": {
        "description": "Build a Docker image from a Dockerfile and context hashes",
        "tags": ["images"],
        "summary": "Build a Docker image",
        "operationId": "BuildImage",
        "parameters": [
          {
            "description": "Build image request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildImageRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image successfully built",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/images/exists": {
      "get": {
        "description": "Check if a specified Docker image exists locally",
        "produces": ["application/json"],
        "tags": ["images"],
        "summary": "Check if a Docker image exists",
        "operationId": "ImageExists",
        "parameters": [
          {
            "type": "string",
            "description": "Image name and tag",
            "name": "image",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImageExistsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/images/logs": {
      "get": {
        "description": "Stream build logs",
        "tags": ["images"],
        "summary": "Get build logs",
        "operationId": "GetBuildLogs",
        "parameters": [
          {
            "type": "string",
            "description": "Image ID or image ref without the tag",
            "name": "imageRef",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Whether to follow the log output",
            "name": "follow",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Build logs stream",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/images/pull": {
      "post": {
        "description": "Pull a Docker image from a registry",
        "tags": ["images"],
        "summary": "Pull a Docker image",
        "operationId": "PullImage",
        "parameters": [
          {
            "description": "Pull image",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PullImageRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image successfully pulled",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/images/remove": {
      "post": {
        "description": "Remove a specified Docker image from the local system",
        "produces": ["application/json"],
        "tags": ["images"],
        "summary": "Remove a Docker image",
        "operationId": "RemoveImage",
        "parameters": [
          {
            "type": "string",
            "description": "Image name and tag",
            "name": "image",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Image successfully removed",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces": {
      "post": {
        "description": "Create a sandbox",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Create a sandbox",
        "operationId": "Create",
        "parameters": [
          {
            "description": "Create sandbox",
            "name": "sandbox",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSandboxDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}": {
      "get": {
        "description": "Get sandbox info",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Get sandbox info",
        "operationId": "Info",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sandbox info",
            "schema": {
              "$ref": "#/definitions/SandboxInfoResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Remove a sandbox that has been previously destroyed",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Remove a destroyed sandbox",
        "operationId": "RemoveDestroyed",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sandbox removed",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/destroy": {
      "post": {
        "description": "Destroy sandbox",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Destroy sandbox",
        "operationId": "Destroy",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sandbox destroyed",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/resize": {
      "post": {
        "description": "Resize sandbox",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Resize sandbox",
        "operationId": "Resize",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          },
          {
            "description": "Resize sandbox",
            "name": "sandbox",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResizeSandboxDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sandbox resized",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/snapshot": {
      "post": {
        "description": "Create sandbox snapshot",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Create sandbox snapshot",
        "operationId": "CreateSnapshot",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          },
          {
            "description": "Create snapshot",
            "name": "sandbox",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSnapshotDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Snapshot created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/start": {
      "post": {
        "description": "Start sandbox",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Start sandbox",
        "operationId": "Start",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sandbox started",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/stop": {
      "post": {
        "description": "Stop sandbox",
        "produces": ["application/json"],
        "tags": ["sandbox"],
        "summary": "Stop sandbox",
        "operationId": "Stop",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sandbox stopped",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/workspaces/{workspaceId}/{projectId}/toolbox/{path}": {
      "get": {
        "description": "Forwards the request to the specified sandbox's container",
        "tags": ["toolbox"],
        "summary": "Proxy requests to the sandbox toolbox",
        "parameters": [
          {
            "type": "string",
            "description": "Sandbox ID",
            "name": "workspaceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Project ID",
            "name": "projectId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Path to forward",
            "name": "path",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Proxied response",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Sandbox container not found",
            "schema": {
              "type": "string"
            }
          },
          "409": {
            "description": "Sandbox container conflict",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BuildImageRequestDTO": {
      "type": "object",
      "required": ["dockerfile", "organizationId"],
      "properties": {
        "context": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dockerfile": {
          "type": "string"
        },
        "image": {
          "description": "Image ID and tag or the build's hash",
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "pushToInternalRegistry": {
          "type": "boolean"
        },
        "registry": {
          "$ref": "#/definitions/RegistryDTO"
        }
      }
    },
    "CreateSandboxDTO": {
      "type": "object",
      "required": ["id", "image", "osUser", "userId"],
      "properties": {
        "cpuQuota": {
          "type": "integer",
          "minimum": 1
        },
        "entrypoint": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fromVolumeId": {
          "type": "string"
        },
        "gpuQuota": {
          "type": "integer",
          "minimum": 0
        },
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "memoryQuota": {
          "type": "integer",
          "minimum": 1
        },
        "osUser": {
          "type": "string"
        },
        "registry": {
          "$ref": "#/definitions/RegistryDTO"
        },
        "storageQuota": {
          "type": "integer",
          "minimum": 1
        },
        "userId": {
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.VolumeDTO"
          }
        }
      }
    },
    "CreateSnapshotDTO": {
      "type": "object",
      "required": ["image", "registry"],
      "properties": {
        "image": {
          "type": "string"
        },
        "registry": {
          "$ref": "#/definitions/RegistryDTO"
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response",
      "type": "object",
      "required": ["code", "message", "method", "path", "statusCode", "timestamp"],
      "properties": {
        "code": {
          "type": "string",
          "example": "BAD_REQUEST"
        },
        "message": {
          "type": "string",
          "example": "Bad request"
        },
        "method": {
          "type": "string",
          "example": "GET"
        },
        "path": {
          "type": "string",
          "example": "/api/resource"
        },
        "statusCode": {
          "type": "integer",
          "example": 400
        },
        "timestamp": {
          "type": "string",
          "example": "2023-01-01T12:00:00Z"
        }
      }
    },
    "ImageExistsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PullImageRequestDTO": {
      "type": "object",
      "required": ["image"],
      "properties": {
        "image": {
          "type": "string"
        },
        "registry": {
          "$ref": "#/definitions/RegistryDTO"
        }
      }
    },
    "RegistryDTO": {
      "type": "object",
      "required": ["password", "url", "username"],
      "properties": {
        "password": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "ResizeSandboxDTO": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "integer",
          "minimum": 1
        },
        "gpu": {
          "type": "integer",
          "minimum": 0
        },
        "memory": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "SandboxInfoResponse": {
      "type": "object",
      "properties": {
        "snapshotState": {
          "$ref": "#/definitions/enums.SnapshotState"
        },
        "state": {
          "$ref": "#/definitions/enums.SandboxState"
        }
      }
    },
    "dto.VolumeDTO": {
      "type": "object",
      "properties": {
        "mountPath": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        }
      }
    },
    "enums.SandboxState": {
      "type": "string",
      "enum": [
        "creating",
        "restoring",
        "destroyed",
        "destroying",
        "started",
        "stopped",
        "starting",
        "stopping",
        "resizing",
        "error",
        "unknown",
        "pulling_image"
      ],
      "x-enum-varnames": [
        "SandboxStateCreating",
        "SandboxStateRestoring",
        "SandboxStateDestroyed",
        "SandboxStateDestroying",
        "SandboxStateStarted",
        "SandboxStateStopped",
        "SandboxStateStarting",
        "SandboxStateStopping",
        "SandboxStateResizing",
        "SandboxStateError",
        "SandboxStateUnknown",
        "SandboxStatePullingImage"
      ]
    },
    "enums.SnapshotState": {
      "type": "string",
      "enum": ["NONE", "PENDING", "IN_PROGRESS", "COMPLETED", "FAILED"],
      "x-enum-varnames": [
        "SnapshotStateNone",
        "SnapshotStatePending",
        "SnapshotStateInProgress",
        "SnapshotStateCompleted",
        "SnapshotStateFailed"
      ]
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "Type \"Bearer\" followed by a space and an API token.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
