definitions:
  BuildSnapshotRequestDTO:
    properties:
      context:
        items:
          type: string
        type: array
      dockerfile:
        type: string
      organizationId:
        type: string
      pushToInternalRegistry:
        type: boolean
      registry:
        $ref: '#/definitions/RegistryDTO'
      snapshot:
        description: Snapshot ID and tag or the build's hash
        type: string
    required:
      - dockerfile
      - organizationId
    type: object
  CreateBackupDTO:
    properties:
      registry:
        $ref: '#/definitions/RegistryDTO'
      snapshot:
        type: string
    required:
      - registry
      - snapshot
    type: object
  CreateSandboxDTO:
    properties:
      cpuQuota:
        minimum: 1
        type: integer
      entrypoint:
        items:
          type: string
        type: array
      env:
        additionalProperties:
          type: string
        type: object
      fromVolumeId:
        type: string
      gpuQuota:
        minimum: 0
        type: integer
      id:
        type: string
      memoryQuota:
        minimum: 1
        type: integer
      osUser:
        type: string
      registry:
        $ref: '#/definitions/RegistryDTO'
      snapshot:
        type: string
      storageQuota:
        minimum: 1
        type: integer
      userId:
        type: string
      volumes:
        items:
          $ref: '#/definitions/dto.VolumeDTO'
        type: array
    required:
      - id
      - osUser
      - snapshot
      - userId
    type: object
  ErrorResponse:
    description: Error response
    properties:
      code:
        example: BAD_REQUEST
        type: string
      message:
        example: Bad request
        type: string
      method:
        example: GET
        type: string
      path:
        example: /api/resource
        type: string
      statusCode:
        example: 400
        type: integer
      timestamp:
        example: '2023-01-01T12:00:00Z'
        type: string
    required:
      - code
      - message
      - method
      - path
      - statusCode
      - timestamp
    type: object
  PullSnapshotRequestDTO:
    properties:
      registry:
        $ref: '#/definitions/RegistryDTO'
      snapshot:
        type: string
    required:
      - snapshot
    type: object
  RegistryDTO:
    properties:
      password:
        type: string
      project:
        type: string
      url:
        type: string
      username:
        type: string
    required:
      - password
      - url
      - username
    type: object
  ResizeSandboxDTO:
    properties:
      cpu:
        minimum: 1
        type: integer
      gpu:
        minimum: 0
        type: integer
      memory:
        minimum: 1
        type: integer
    type: object
  RunnerInfoResponseDTO:
    properties:
      metrics:
        $ref: '#/definitions/RunnerMetrics'
    type: object
  RunnerMetrics:
    properties:
      currentAllocatedCpu:
        type: integer
      currentAllocatedDiskGiB:
        type: integer
      currentAllocatedMemoryGiB:
        type: integer
      currentCpuUsagePercentage:
        type: number
      currentDiskUsagePercentage:
        type: number
      currentMemoryUsagePercentage:
        type: number
      currentSnapshotCount:
        type: integer
    type: object
  SandboxInfoResponse:
    properties:
      backupState:
        $ref: '#/definitions/enums.BackupState'
      state:
        $ref: '#/definitions/enums.SandboxState'
    type: object
  SnapshotExistsResponse:
    properties:
      exists:
        example: true
        type: boolean
    type: object
  dto.VolumeDTO:
    properties:
      mountPath:
        type: string
      volumeId:
        type: string
    type: object
  enums.BackupState:
    enum:
      - NONE
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
    type: string
    x-enum-varnames:
      - BackupStateNone
      - BackupStatePending
      - BackupStateInProgress
      - BackupStateCompleted
      - BackupStateFailed
  enums.SandboxState:
    enum:
      - creating
      - restoring
      - destroyed
      - destroying
      - started
      - stopped
      - starting
      - stopping
      - resizing
      - error
      - unknown
      - pulling_snapshot
    type: string
    x-enum-varnames:
      - SandboxStateCreating
      - SandboxStateRestoring
      - SandboxStateDestroyed
      - SandboxStateDestroying
      - SandboxStateStarted
      - SandboxStateStopped
      - SandboxStateStarting
      - SandboxStateStopping
      - SandboxStateResizing
      - SandboxStateError
      - SandboxStateUnknown
      - SandboxStatePullingSnapshot
info:
  contact: {}
  description: Daytona Runner API
  title: Daytona Runner API
  version: v0.0.0-dev
paths:
  /:
    get:
      description: Health check
      operationId: HealthCheck
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
  /info:
    get:
      description: Runner info with system metrics
      operationId: RunnerInfo
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RunnerInfoResponseDTO'
      summary: Runner info
  /sandboxes:
    post:
      description: Create a sandbox
      operationId: Create
      parameters:
        - description: Create sandbox
          in: body
          name: sandbox
          required: true
          schema:
            $ref: '#/definitions/CreateSandboxDTO'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a sandbox
      tags:
        - sandbox
  /sandboxes/{sandboxId}:
    delete:
      description: Remove a sandbox that has been previously destroyed
      operationId: RemoveDestroyed
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Sandbox removed
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove a destroyed sandbox
      tags:
        - sandbox
    get:
      description: Get sandbox info
      operationId: Info
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Sandbox info
          schema:
            $ref: '#/definitions/SandboxInfoResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get sandbox info
      tags:
        - sandbox
  /sandboxes/{sandboxId}/backup:
    post:
      description: Create sandbox backup
      operationId: CreateBackup
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
        - description: Create backup
          in: body
          name: sandbox
          required: true
          schema:
            $ref: '#/definitions/CreateBackupDTO'
      produces:
        - application/json
      responses:
        '201':
          description: Backup created
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create sandbox backup
      tags:
        - sandbox
  /sandboxes/{sandboxId}/destroy:
    post:
      description: Destroy sandbox
      operationId: Destroy
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Sandbox destroyed
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Destroy sandbox
      tags:
        - sandbox
  /sandboxes/{sandboxId}/resize:
    post:
      description: Resize sandbox
      operationId: Resize
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
        - description: Resize sandbox
          in: body
          name: sandbox
          required: true
          schema:
            $ref: '#/definitions/ResizeSandboxDTO'
      produces:
        - application/json
      responses:
        '200':
          description: Sandbox resized
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Resize sandbox
      tags:
        - sandbox
  /sandboxes/{sandboxId}/start:
    post:
      description: Start sandbox
      operationId: Start
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Sandbox started
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Start sandbox
      tags:
        - sandbox
  /sandboxes/{sandboxId}/stop:
    post:
      description: Stop sandbox
      operationId: Stop
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Sandbox stopped
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Stop sandbox
      tags:
        - sandbox
  /sandboxes/{sandboxId}/toolbox/{path}:
    delete:
      description: Forwards the request to the specified sandbox's container
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
        - description: Path to forward
          in: path
          name: path
          required: true
          type: string
      responses:
        '200':
          description: Proxied response
          schema: {}
        '400':
          description: Bad request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: Sandbox container not found
          schema:
            type: string
        '409':
          description: Sandbox container conflict
          schema:
            type: string
        '500':
          description: Internal server error
          schema:
            type: string
      summary: Proxy requests to the sandbox toolbox
      tags:
        - toolbox
    get:
      description: Forwards the request to the specified sandbox's container
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
        - description: Path to forward
          in: path
          name: path
          required: true
          type: string
      responses:
        '200':
          description: Proxied response
          schema: {}
        '400':
          description: Bad request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: Sandbox container not found
          schema:
            type: string
        '409':
          description: Sandbox container conflict
          schema:
            type: string
        '500':
          description: Internal server error
          schema:
            type: string
      summary: Proxy requests to the sandbox toolbox
      tags:
        - toolbox
    post:
      description: Forwards the request to the specified sandbox's container
      parameters:
        - description: Sandbox ID
          in: path
          name: sandboxId
          required: true
          type: string
        - description: Path to forward
          in: path
          name: path
          required: true
          type: string
      responses:
        '200':
          description: Proxied response
          schema: {}
        '400':
          description: Bad request
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            type: string
        '404':
          description: Sandbox container not found
          schema:
            type: string
        '409':
          description: Sandbox container conflict
          schema:
            type: string
        '500':
          description: Internal server error
          schema:
            type: string
      summary: Proxy requests to the sandbox toolbox
      tags:
        - toolbox
  /snapshots/build:
    post:
      description: Build a snapshot from a Dockerfile and context hashes
      operationId: BuildSnapshot
      parameters:
        - description: Build snapshot request
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/BuildSnapshotRequestDTO'
      responses:
        '200':
          description: Snapshot successfully built
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Build a snapshot
      tags:
        - snapshots
  /snapshots/exists:
    get:
      description: Check if a specified snapshot exists locally
      operationId: SnapshotExists
      parameters:
        - description: Snapshot name and tag
          in: query
          name: snapshot
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SnapshotExistsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Check if a snapshot exists
      tags:
        - snapshots
  /snapshots/logs:
    get:
      description: Stream build logs
      operationId: GetBuildLogs
      parameters:
        - description: Snapshot ID or snapshot ref without the tag
          in: query
          name: snapshotRef
          required: true
          type: string
        - description: Whether to follow the log output
          in: query
          name: follow
          type: boolean
      responses:
        '200':
          description: Build logs stream
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get build logs
      tags:
        - snapshots
  /snapshots/pull:
    post:
      description: Pull a snapshot from a registry
      operationId: PullSnapshot
      parameters:
        - description: Pull snapshot
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/PullSnapshotRequestDTO'
      responses:
        '200':
          description: Snapshot successfully pulled
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Pull a snapshot
      tags:
        - snapshots
  /snapshots/remove:
    post:
      description: Remove a specified snapshot from the local system
      operationId: RemoveSnapshot
      parameters:
        - description: Snapshot name and tag
          in: query
          name: snapshot
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Snapshot successfully removed
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove a snapshot
      tags:
        - snapshots
security:
  - Bearer: []
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and an API token.
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
