openapi: 3.0.1
info:
  contact: {}
  description: Daytona Server API
  title: Daytona Server API
  version: 0.1.0
servers:
- url: http://localhost:3000/
paths:
  /plugin/agent-service:
    get:
      description: List agent service plugins
      operationId: ListAgentServicePlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentServicePlugin'
                type: array
          description: OK
      summary: List agent service plugins
      tags:
      - plugin
  /plugin/agent-service/install:
    post:
      description: Install an agent service plugin
      operationId: InstallAgentServicePlugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallPluginRequest'
        description: Plugin to install
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Install an agent service plugin
      tags:
      - plugin
      x-codegen-request-body-name: plugin
  /plugin/agent-service/uninstall:
    post:
      description: Uninstall an agent service plugin
      operationId: UninstallAgentServicePlugin
      parameters:
      - description: Agent Service to uninstall
        in: path
        name: agent-service
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Uninstall an agent service plugin
      tags:
      - plugin
  /plugin/provisioner:
    get:
      description: List provisioner plugins
      operationId: ListProvisionerPlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisionerPlugin'
                type: array
          description: OK
      summary: List provisioner plugins
      tags:
      - plugin
  /plugin/provisioner/install:
    post:
      description: Install a provisioner plugin
      operationId: InstallProvisionerPlugin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallPluginRequest'
        description: Plugin to install
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Install a provisioner plugin
      tags:
      - plugin
      x-codegen-request-body-name: plugin
  /plugin/provisioner/{provisioner}/uninstall:
    post:
      description: Uninstall a provisioner plugin
      operationId: UninstallProvisionerPlugin
      parameters:
      - description: Provisioner to uninstall
        in: path
        name: provisioner
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Uninstall a provisioner plugin
      tags:
      - plugin
  /server/config:
    get:
      description: Get the server configuration
      operationId: GetConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          description: OK
      summary: Get the server configuration
      tags:
      - server
    post:
      description: Set the server configuration
      operationId: SetConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfig'
        description: Server configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          description: OK
      summary: Set the server configuration
      tags:
      - server
      x-codegen-request-body-name: config
  /server/network-key:
    post:
      description: Generate a new authentication key
      operationId: GenerateNetworkKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkKey'
          description: OK
      summary: Generate a new authentication key
      tags:
      - server
components:
  schemas:
    AgentServicePlugin:
      example:
        name: name
        version: version
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    InstallPluginRequest:
      example:
        downloadUrls:
          key: downloadUrls
        name: name
      properties:
        downloadUrls:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
      type: object
    NetworkKey:
      example:
        key: key
      properties:
        key:
          type: string
      type: object
    ProvisionerPlugin:
      example:
        name: name
        version: version
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    ServerConfig:
      example:
        pluginRegistryUrl: pluginRegistryUrl
        apiPort: 0
        headscalePort: 1
        serverDownloadUrl: serverDownloadUrl
        pluginsDir: pluginsDir
        id: id
        frps:
          protocol: protocol
          port: 6
          domain: domain
      properties:
        apiPort:
          type: integer
        frps:
          $ref: '#/components/schemas/types.FRPSConfig'
        headscalePort:
          type: integer
        id:
          type: string
        pluginRegistryUrl:
          type: string
        pluginsDir:
          type: string
        serverDownloadUrl:
          type: string
      type: object
    types.FRPSConfig:
      example:
        protocol: protocol
        port: 6
        domain: domain
      properties:
        domain:
          type: string
        port:
          type: integer
        protocol:
          type: string
      type: object
x-original-swagger-version: "2.0"
