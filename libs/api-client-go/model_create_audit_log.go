/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateAuditLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAuditLog{}

// CreateAuditLog struct for CreateAuditLog
type CreateAuditLog struct {
	ActorId        string  `json:"actorId"`
	ActorEmail     string  `json:"actorEmail"`
	OrganizationId *string `json:"organizationId,omitempty"`
	Action         string  `json:"action"`
	TargetType     *string `json:"targetType,omitempty"`
	TargetId       *string `json:"targetId,omitempty"`
}

type _CreateAuditLog CreateAuditLog

// NewCreateAuditLog instantiates a new CreateAuditLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAuditLog(actorId string, actorEmail string, action string) *CreateAuditLog {
	this := CreateAuditLog{}
	this.ActorId = actorId
	this.ActorEmail = actorEmail
	this.Action = action
	return &this
}

// NewCreateAuditLogWithDefaults instantiates a new CreateAuditLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAuditLogWithDefaults() *CreateAuditLog {
	this := CreateAuditLog{}
	return &this
}

// GetActorId returns the ActorId field value
func (o *CreateAuditLog) GetActorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value
// and a boolean to check if the value has been set.
func (o *CreateAuditLog) GetActorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorId, true
}

// SetActorId sets field value
func (o *CreateAuditLog) SetActorId(v string) {
	o.ActorId = v
}

// GetActorEmail returns the ActorEmail field value
func (o *CreateAuditLog) GetActorEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActorEmail
}

// GetActorEmailOk returns a tuple with the ActorEmail field value
// and a boolean to check if the value has been set.
func (o *CreateAuditLog) GetActorEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActorEmail, true
}

// SetActorEmail sets field value
func (o *CreateAuditLog) SetActorEmail(v string) {
	o.ActorEmail = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CreateAuditLog) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuditLog) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateAuditLog) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CreateAuditLog) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetAction returns the Action field value
func (o *CreateAuditLog) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CreateAuditLog) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CreateAuditLog) SetAction(v string) {
	o.Action = v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *CreateAuditLog) GetTargetType() string {
	if o == nil || IsNil(o.TargetType) {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuditLog) GetTargetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetType) {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *CreateAuditLog) HasTargetType() bool {
	if o != nil && !IsNil(o.TargetType) {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *CreateAuditLog) SetTargetType(v string) {
	o.TargetType = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *CreateAuditLog) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAuditLog) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *CreateAuditLog) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *CreateAuditLog) SetTargetId(v string) {
	o.TargetId = &v
}

func (o CreateAuditLog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAuditLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["actorId"] = o.ActorId
	toSerialize["actorEmail"] = o.ActorEmail
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	toSerialize["action"] = o.Action
	if !IsNil(o.TargetType) {
		toSerialize["targetType"] = o.TargetType
	}
	if !IsNil(o.TargetId) {
		toSerialize["targetId"] = o.TargetId
	}
	return toSerialize, nil
}

func (o *CreateAuditLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"actorId",
		"actorEmail",
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAuditLog := _CreateAuditLog{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAuditLog)

	if err != nil {
		return err
	}

	*o = CreateAuditLog(varCreateAuditLog)

	return err
}

type NullableCreateAuditLog struct {
	value *CreateAuditLog
	isSet bool
}

func (v NullableCreateAuditLog) Get() *CreateAuditLog {
	return v.value
}

func (v *NullableCreateAuditLog) Set(val *CreateAuditLog) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAuditLog) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAuditLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAuditLog(val *CreateAuditLog) *NullableCreateAuditLog {
	return &NullableCreateAuditLog{value: val, isSet: true}
}

func (v NullableCreateAuditLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAuditLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
