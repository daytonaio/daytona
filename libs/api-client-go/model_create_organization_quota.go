/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package daytonaapiclient

import (
	"encoding/json"
)

// checks if the CreateOrganizationQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationQuota{}

// CreateOrganizationQuota struct for CreateOrganizationQuota
type CreateOrganizationQuota struct {
	TotalCpuQuota           *float32 `json:"totalCpuQuota,omitempty"`
	TotalMemoryQuota        *float32 `json:"totalMemoryQuota,omitempty"`
	TotalDiskQuota          *float32 `json:"totalDiskQuota,omitempty"`
	MaxCpuPerWorkspace      *float32 `json:"maxCpuPerWorkspace,omitempty"`
	MaxMemoryPerWorkspace   *float32 `json:"maxMemoryPerWorkspace,omitempty"`
	MaxDiskPerWorkspace     *float32 `json:"maxDiskPerWorkspace,omitempty"`
	MaxConcurrentWorkspaces *float32 `json:"maxConcurrentWorkspaces,omitempty"`
	WorkspaceQuota          *float32 `json:"workspaceQuota,omitempty"`
	ImageQuota              *float32 `json:"imageQuota,omitempty"`
	MaxImageSize            *float32 `json:"maxImageSize,omitempty"`
	TotalImageSize          *float32 `json:"totalImageSize,omitempty"`
	VolumeQuota             *float32 `json:"volumeQuota,omitempty"`
}

// NewCreateOrganizationQuota instantiates a new CreateOrganizationQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationQuota() *CreateOrganizationQuota {
	this := CreateOrganizationQuota{}
	return &this
}

// NewCreateOrganizationQuotaWithDefaults instantiates a new CreateOrganizationQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationQuotaWithDefaults() *CreateOrganizationQuota {
	this := CreateOrganizationQuota{}
	return &this
}

// GetTotalCpuQuota returns the TotalCpuQuota field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetTotalCpuQuota() float32 {
	if o == nil || IsNil(o.TotalCpuQuota) {
		var ret float32
		return ret
	}
	return *o.TotalCpuQuota
}

// GetTotalCpuQuotaOk returns a tuple with the TotalCpuQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetTotalCpuQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCpuQuota) {
		return nil, false
	}
	return o.TotalCpuQuota, true
}

// HasTotalCpuQuota returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasTotalCpuQuota() bool {
	if o != nil && !IsNil(o.TotalCpuQuota) {
		return true
	}

	return false
}

// SetTotalCpuQuota gets a reference to the given float32 and assigns it to the TotalCpuQuota field.
func (o *CreateOrganizationQuota) SetTotalCpuQuota(v float32) {
	o.TotalCpuQuota = &v
}

// GetTotalMemoryQuota returns the TotalMemoryQuota field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetTotalMemoryQuota() float32 {
	if o == nil || IsNil(o.TotalMemoryQuota) {
		var ret float32
		return ret
	}
	return *o.TotalMemoryQuota
}

// GetTotalMemoryQuotaOk returns a tuple with the TotalMemoryQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetTotalMemoryQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalMemoryQuota) {
		return nil, false
	}
	return o.TotalMemoryQuota, true
}

// HasTotalMemoryQuota returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasTotalMemoryQuota() bool {
	if o != nil && !IsNil(o.TotalMemoryQuota) {
		return true
	}

	return false
}

// SetTotalMemoryQuota gets a reference to the given float32 and assigns it to the TotalMemoryQuota field.
func (o *CreateOrganizationQuota) SetTotalMemoryQuota(v float32) {
	o.TotalMemoryQuota = &v
}

// GetTotalDiskQuota returns the TotalDiskQuota field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetTotalDiskQuota() float32 {
	if o == nil || IsNil(o.TotalDiskQuota) {
		var ret float32
		return ret
	}
	return *o.TotalDiskQuota
}

// GetTotalDiskQuotaOk returns a tuple with the TotalDiskQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetTotalDiskQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalDiskQuota) {
		return nil, false
	}
	return o.TotalDiskQuota, true
}

// HasTotalDiskQuota returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasTotalDiskQuota() bool {
	if o != nil && !IsNil(o.TotalDiskQuota) {
		return true
	}

	return false
}

// SetTotalDiskQuota gets a reference to the given float32 and assigns it to the TotalDiskQuota field.
func (o *CreateOrganizationQuota) SetTotalDiskQuota(v float32) {
	o.TotalDiskQuota = &v
}

// GetMaxCpuPerWorkspace returns the MaxCpuPerWorkspace field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetMaxCpuPerWorkspace() float32 {
	if o == nil || IsNil(o.MaxCpuPerWorkspace) {
		var ret float32
		return ret
	}
	return *o.MaxCpuPerWorkspace
}

// GetMaxCpuPerWorkspaceOk returns a tuple with the MaxCpuPerWorkspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetMaxCpuPerWorkspaceOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxCpuPerWorkspace) {
		return nil, false
	}
	return o.MaxCpuPerWorkspace, true
}

// HasMaxCpuPerWorkspace returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasMaxCpuPerWorkspace() bool {
	if o != nil && !IsNil(o.MaxCpuPerWorkspace) {
		return true
	}

	return false
}

// SetMaxCpuPerWorkspace gets a reference to the given float32 and assigns it to the MaxCpuPerWorkspace field.
func (o *CreateOrganizationQuota) SetMaxCpuPerWorkspace(v float32) {
	o.MaxCpuPerWorkspace = &v
}

// GetMaxMemoryPerWorkspace returns the MaxMemoryPerWorkspace field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetMaxMemoryPerWorkspace() float32 {
	if o == nil || IsNil(o.MaxMemoryPerWorkspace) {
		var ret float32
		return ret
	}
	return *o.MaxMemoryPerWorkspace
}

// GetMaxMemoryPerWorkspaceOk returns a tuple with the MaxMemoryPerWorkspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetMaxMemoryPerWorkspaceOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxMemoryPerWorkspace) {
		return nil, false
	}
	return o.MaxMemoryPerWorkspace, true
}

// HasMaxMemoryPerWorkspace returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasMaxMemoryPerWorkspace() bool {
	if o != nil && !IsNil(o.MaxMemoryPerWorkspace) {
		return true
	}

	return false
}

// SetMaxMemoryPerWorkspace gets a reference to the given float32 and assigns it to the MaxMemoryPerWorkspace field.
func (o *CreateOrganizationQuota) SetMaxMemoryPerWorkspace(v float32) {
	o.MaxMemoryPerWorkspace = &v
}

// GetMaxDiskPerWorkspace returns the MaxDiskPerWorkspace field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetMaxDiskPerWorkspace() float32 {
	if o == nil || IsNil(o.MaxDiskPerWorkspace) {
		var ret float32
		return ret
	}
	return *o.MaxDiskPerWorkspace
}

// GetMaxDiskPerWorkspaceOk returns a tuple with the MaxDiskPerWorkspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetMaxDiskPerWorkspaceOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDiskPerWorkspace) {
		return nil, false
	}
	return o.MaxDiskPerWorkspace, true
}

// HasMaxDiskPerWorkspace returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasMaxDiskPerWorkspace() bool {
	if o != nil && !IsNil(o.MaxDiskPerWorkspace) {
		return true
	}

	return false
}

// SetMaxDiskPerWorkspace gets a reference to the given float32 and assigns it to the MaxDiskPerWorkspace field.
func (o *CreateOrganizationQuota) SetMaxDiskPerWorkspace(v float32) {
	o.MaxDiskPerWorkspace = &v
}

// GetMaxConcurrentWorkspaces returns the MaxConcurrentWorkspaces field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetMaxConcurrentWorkspaces() float32 {
	if o == nil || IsNil(o.MaxConcurrentWorkspaces) {
		var ret float32
		return ret
	}
	return *o.MaxConcurrentWorkspaces
}

// GetMaxConcurrentWorkspacesOk returns a tuple with the MaxConcurrentWorkspaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetMaxConcurrentWorkspacesOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxConcurrentWorkspaces) {
		return nil, false
	}
	return o.MaxConcurrentWorkspaces, true
}

// HasMaxConcurrentWorkspaces returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasMaxConcurrentWorkspaces() bool {
	if o != nil && !IsNil(o.MaxConcurrentWorkspaces) {
		return true
	}

	return false
}

// SetMaxConcurrentWorkspaces gets a reference to the given float32 and assigns it to the MaxConcurrentWorkspaces field.
func (o *CreateOrganizationQuota) SetMaxConcurrentWorkspaces(v float32) {
	o.MaxConcurrentWorkspaces = &v
}

// GetWorkspaceQuota returns the WorkspaceQuota field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetWorkspaceQuota() float32 {
	if o == nil || IsNil(o.WorkspaceQuota) {
		var ret float32
		return ret
	}
	return *o.WorkspaceQuota
}

// GetWorkspaceQuotaOk returns a tuple with the WorkspaceQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetWorkspaceQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.WorkspaceQuota) {
		return nil, false
	}
	return o.WorkspaceQuota, true
}

// HasWorkspaceQuota returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasWorkspaceQuota() bool {
	if o != nil && !IsNil(o.WorkspaceQuota) {
		return true
	}

	return false
}

// SetWorkspaceQuota gets a reference to the given float32 and assigns it to the WorkspaceQuota field.
func (o *CreateOrganizationQuota) SetWorkspaceQuota(v float32) {
	o.WorkspaceQuota = &v
}

// GetImageQuota returns the ImageQuota field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetImageQuota() float32 {
	if o == nil || IsNil(o.ImageQuota) {
		var ret float32
		return ret
	}
	return *o.ImageQuota
}

// GetImageQuotaOk returns a tuple with the ImageQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetImageQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.ImageQuota) {
		return nil, false
	}
	return o.ImageQuota, true
}

// HasImageQuota returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasImageQuota() bool {
	if o != nil && !IsNil(o.ImageQuota) {
		return true
	}

	return false
}

// SetImageQuota gets a reference to the given float32 and assigns it to the ImageQuota field.
func (o *CreateOrganizationQuota) SetImageQuota(v float32) {
	o.ImageQuota = &v
}

// GetMaxImageSize returns the MaxImageSize field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetMaxImageSize() float32 {
	if o == nil || IsNil(o.MaxImageSize) {
		var ret float32
		return ret
	}
	return *o.MaxImageSize
}

// GetMaxImageSizeOk returns a tuple with the MaxImageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetMaxImageSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxImageSize) {
		return nil, false
	}
	return o.MaxImageSize, true
}

// HasMaxImageSize returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasMaxImageSize() bool {
	if o != nil && !IsNil(o.MaxImageSize) {
		return true
	}

	return false
}

// SetMaxImageSize gets a reference to the given float32 and assigns it to the MaxImageSize field.
func (o *CreateOrganizationQuota) SetMaxImageSize(v float32) {
	o.MaxImageSize = &v
}

// GetTotalImageSize returns the TotalImageSize field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetTotalImageSize() float32 {
	if o == nil || IsNil(o.TotalImageSize) {
		var ret float32
		return ret
	}
	return *o.TotalImageSize
}

// GetTotalImageSizeOk returns a tuple with the TotalImageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetTotalImageSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalImageSize) {
		return nil, false
	}
	return o.TotalImageSize, true
}

// HasTotalImageSize returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasTotalImageSize() bool {
	if o != nil && !IsNil(o.TotalImageSize) {
		return true
	}

	return false
}

// SetTotalImageSize gets a reference to the given float32 and assigns it to the TotalImageSize field.
func (o *CreateOrganizationQuota) SetTotalImageSize(v float32) {
	o.TotalImageSize = &v
}

// GetVolumeQuota returns the VolumeQuota field value if set, zero value otherwise.
func (o *CreateOrganizationQuota) GetVolumeQuota() float32 {
	if o == nil || IsNil(o.VolumeQuota) {
		var ret float32
		return ret
	}
	return *o.VolumeQuota
}

// GetVolumeQuotaOk returns a tuple with the VolumeQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationQuota) GetVolumeQuotaOk() (*float32, bool) {
	if o == nil || IsNil(o.VolumeQuota) {
		return nil, false
	}
	return o.VolumeQuota, true
}

// HasVolumeQuota returns a boolean if a field has been set.
func (o *CreateOrganizationQuota) HasVolumeQuota() bool {
	if o != nil && !IsNil(o.VolumeQuota) {
		return true
	}

	return false
}

// SetVolumeQuota gets a reference to the given float32 and assigns it to the VolumeQuota field.
func (o *CreateOrganizationQuota) SetVolumeQuota(v float32) {
	o.VolumeQuota = &v
}

func (o CreateOrganizationQuota) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalCpuQuota) {
		toSerialize["totalCpuQuota"] = o.TotalCpuQuota
	}
	if !IsNil(o.TotalMemoryQuota) {
		toSerialize["totalMemoryQuota"] = o.TotalMemoryQuota
	}
	if !IsNil(o.TotalDiskQuota) {
		toSerialize["totalDiskQuota"] = o.TotalDiskQuota
	}
	if !IsNil(o.MaxCpuPerWorkspace) {
		toSerialize["maxCpuPerWorkspace"] = o.MaxCpuPerWorkspace
	}
	if !IsNil(o.MaxMemoryPerWorkspace) {
		toSerialize["maxMemoryPerWorkspace"] = o.MaxMemoryPerWorkspace
	}
	if !IsNil(o.MaxDiskPerWorkspace) {
		toSerialize["maxDiskPerWorkspace"] = o.MaxDiskPerWorkspace
	}
	if !IsNil(o.MaxConcurrentWorkspaces) {
		toSerialize["maxConcurrentWorkspaces"] = o.MaxConcurrentWorkspaces
	}
	if !IsNil(o.WorkspaceQuota) {
		toSerialize["workspaceQuota"] = o.WorkspaceQuota
	}
	if !IsNil(o.ImageQuota) {
		toSerialize["imageQuota"] = o.ImageQuota
	}
	if !IsNil(o.MaxImageSize) {
		toSerialize["maxImageSize"] = o.MaxImageSize
	}
	if !IsNil(o.TotalImageSize) {
		toSerialize["totalImageSize"] = o.TotalImageSize
	}
	if !IsNil(o.VolumeQuota) {
		toSerialize["volumeQuota"] = o.VolumeQuota
	}
	return toSerialize, nil
}

type NullableCreateOrganizationQuota struct {
	value *CreateOrganizationQuota
	isSet bool
}

func (v NullableCreateOrganizationQuota) Get() *CreateOrganizationQuota {
	return v.value
}

func (v *NullableCreateOrganizationQuota) Set(val *CreateOrganizationQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationQuota(val *CreateOrganizationQuota) *NullableCreateOrganizationQuota {
	return &NullableCreateOrganizationQuota{value: val, isSet: true}
}

func (v NullableCreateOrganizationQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
