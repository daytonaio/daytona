/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OrganizationSandboxDefaultNetworkBlockAll type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationSandboxDefaultNetworkBlockAll{}

// OrganizationSandboxDefaultNetworkBlockAll struct for OrganizationSandboxDefaultNetworkBlockAll
type OrganizationSandboxDefaultNetworkBlockAll struct {
	// Sandbox default network block all
	SandboxDefaultNetworkBlockAll bool `json:"sandboxDefaultNetworkBlockAll"`
}

type _OrganizationSandboxDefaultNetworkBlockAll OrganizationSandboxDefaultNetworkBlockAll

// NewOrganizationSandboxDefaultNetworkBlockAll instantiates a new OrganizationSandboxDefaultNetworkBlockAll object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationSandboxDefaultNetworkBlockAll(sandboxDefaultNetworkBlockAll bool) *OrganizationSandboxDefaultNetworkBlockAll {
	this := OrganizationSandboxDefaultNetworkBlockAll{}
	this.SandboxDefaultNetworkBlockAll = sandboxDefaultNetworkBlockAll
	return &this
}

// NewOrganizationSandboxDefaultNetworkBlockAllWithDefaults instantiates a new OrganizationSandboxDefaultNetworkBlockAll object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationSandboxDefaultNetworkBlockAllWithDefaults() *OrganizationSandboxDefaultNetworkBlockAll {
	this := OrganizationSandboxDefaultNetworkBlockAll{}
	return &this
}

// GetSandboxDefaultNetworkBlockAll returns the SandboxDefaultNetworkBlockAll field value
func (o *OrganizationSandboxDefaultNetworkBlockAll) GetSandboxDefaultNetworkBlockAll() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SandboxDefaultNetworkBlockAll
}

// GetSandboxDefaultNetworkBlockAllOk returns a tuple with the SandboxDefaultNetworkBlockAll field value
// and a boolean to check if the value has been set.
func (o *OrganizationSandboxDefaultNetworkBlockAll) GetSandboxDefaultNetworkBlockAllOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SandboxDefaultNetworkBlockAll, true
}

// SetSandboxDefaultNetworkBlockAll sets field value
func (o *OrganizationSandboxDefaultNetworkBlockAll) SetSandboxDefaultNetworkBlockAll(v bool) {
	o.SandboxDefaultNetworkBlockAll = v
}

func (o OrganizationSandboxDefaultNetworkBlockAll) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationSandboxDefaultNetworkBlockAll) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sandboxDefaultNetworkBlockAll"] = o.SandboxDefaultNetworkBlockAll
	return toSerialize, nil
}

func (o *OrganizationSandboxDefaultNetworkBlockAll) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sandboxDefaultNetworkBlockAll",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationSandboxDefaultNetworkBlockAll := _OrganizationSandboxDefaultNetworkBlockAll{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrganizationSandboxDefaultNetworkBlockAll)

	if err != nil {
		return err
	}

	*o = OrganizationSandboxDefaultNetworkBlockAll(varOrganizationSandboxDefaultNetworkBlockAll)

	return err
}

type NullableOrganizationSandboxDefaultNetworkBlockAll struct {
	value *OrganizationSandboxDefaultNetworkBlockAll
	isSet bool
}

func (v NullableOrganizationSandboxDefaultNetworkBlockAll) Get() *OrganizationSandboxDefaultNetworkBlockAll {
	return v.value
}

func (v *NullableOrganizationSandboxDefaultNetworkBlockAll) Set(val *OrganizationSandboxDefaultNetworkBlockAll) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationSandboxDefaultNetworkBlockAll) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationSandboxDefaultNetworkBlockAll) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationSandboxDefaultNetworkBlockAll(val *OrganizationSandboxDefaultNetworkBlockAll) *NullableOrganizationSandboxDefaultNetworkBlockAll {
	return &NullableOrganizationSandboxDefaultNetworkBlockAll{value: val, isSet: true}
}

func (v NullableOrganizationSandboxDefaultNetworkBlockAll) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationSandboxDefaultNetworkBlockAll) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
