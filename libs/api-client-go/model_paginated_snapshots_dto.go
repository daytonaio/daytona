/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PaginatedSnapshotsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedSnapshotsDto{}

// PaginatedSnapshotsDto struct for PaginatedSnapshotsDto
type PaginatedSnapshotsDto struct {
	Items      []SnapshotDto `json:"items"`
	Total      float32       `json:"total"`
	Page       float32       `json:"page"`
	TotalPages float32       `json:"totalPages"`
}

type _PaginatedSnapshotsDto PaginatedSnapshotsDto

// NewPaginatedSnapshotsDto instantiates a new PaginatedSnapshotsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedSnapshotsDto(items []SnapshotDto, total float32, page float32, totalPages float32) *PaginatedSnapshotsDto {
	this := PaginatedSnapshotsDto{}
	this.Items = items
	this.Total = total
	this.Page = page
	this.TotalPages = totalPages
	return &this
}

// NewPaginatedSnapshotsDtoWithDefaults instantiates a new PaginatedSnapshotsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedSnapshotsDtoWithDefaults() *PaginatedSnapshotsDto {
	this := PaginatedSnapshotsDto{}
	return &this
}

// GetItems returns the Items field value
func (o *PaginatedSnapshotsDto) GetItems() []SnapshotDto {
	if o == nil {
		var ret []SnapshotDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *PaginatedSnapshotsDto) GetItemsOk() ([]SnapshotDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *PaginatedSnapshotsDto) SetItems(v []SnapshotDto) {
	o.Items = v
}

// GetTotal returns the Total field value
func (o *PaginatedSnapshotsDto) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *PaginatedSnapshotsDto) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *PaginatedSnapshotsDto) SetTotal(v float32) {
	o.Total = v
}

// GetPage returns the Page field value
func (o *PaginatedSnapshotsDto) GetPage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *PaginatedSnapshotsDto) GetPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *PaginatedSnapshotsDto) SetPage(v float32) {
	o.Page = v
}

// GetTotalPages returns the TotalPages field value
func (o *PaginatedSnapshotsDto) GetTotalPages() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value
// and a boolean to check if the value has been set.
func (o *PaginatedSnapshotsDto) GetTotalPagesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPages, true
}

// SetTotalPages sets field value
func (o *PaginatedSnapshotsDto) SetTotalPages(v float32) {
	o.TotalPages = v
}

func (o PaginatedSnapshotsDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedSnapshotsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["total"] = o.Total
	toSerialize["page"] = o.Page
	toSerialize["totalPages"] = o.TotalPages
	return toSerialize, nil
}

func (o *PaginatedSnapshotsDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
		"total",
		"page",
		"totalPages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaginatedSnapshotsDto := _PaginatedSnapshotsDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaginatedSnapshotsDto)

	if err != nil {
		return err
	}

	*o = PaginatedSnapshotsDto(varPaginatedSnapshotsDto)

	return err
}

type NullablePaginatedSnapshotsDto struct {
	value *PaginatedSnapshotsDto
	isSet bool
}

func (v NullablePaginatedSnapshotsDto) Get() *PaginatedSnapshotsDto {
	return v.value
}

func (v *NullablePaginatedSnapshotsDto) Set(val *PaginatedSnapshotsDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedSnapshotsDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedSnapshotsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedSnapshotsDto(val *PaginatedSnapshotsDto) *NullablePaginatedSnapshotsDto {
	return &NullablePaginatedSnapshotsDto{value: val, isSet: true}
}

func (v NullablePaginatedSnapshotsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedSnapshotsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
