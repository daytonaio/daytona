/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package daytonaapiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PortPreviewUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortPreviewUrl{}

// PortPreviewUrl struct for PortPreviewUrl
type PortPreviewUrl struct {
	// Preview url
	Url string `json:"url"`
	// Access token
	Token string `json:"token"`
}

type _PortPreviewUrl PortPreviewUrl

// NewPortPreviewUrl instantiates a new PortPreviewUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortPreviewUrl(url string, token string) *PortPreviewUrl {
	this := PortPreviewUrl{}
	this.Url = url
	this.Token = token
	return &this
}

// NewPortPreviewUrlWithDefaults instantiates a new PortPreviewUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortPreviewUrlWithDefaults() *PortPreviewUrl {
	this := PortPreviewUrl{}
	return &this
}

// GetUrl returns the Url field value
func (o *PortPreviewUrl) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PortPreviewUrl) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PortPreviewUrl) SetUrl(v string) {
	o.Url = v
}

// GetToken returns the Token field value
func (o *PortPreviewUrl) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *PortPreviewUrl) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *PortPreviewUrl) SetToken(v string) {
	o.Token = v
}

func (o PortPreviewUrl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortPreviewUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

func (o *PortPreviewUrl) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortPreviewUrl := _PortPreviewUrl{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortPreviewUrl)

	if err != nil {
		return err
	}

	*o = PortPreviewUrl(varPortPreviewUrl)

	return err
}

type NullablePortPreviewUrl struct {
	value *PortPreviewUrl
	isSet bool
}

func (v NullablePortPreviewUrl) Get() *PortPreviewUrl {
	return v.value
}

func (v *NullablePortPreviewUrl) Set(val *PortPreviewUrl) {
	v.value = val
	v.isSet = true
}

func (v NullablePortPreviewUrl) IsSet() bool {
	return v.isSet
}

func (v *NullablePortPreviewUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortPreviewUrl(val *PortPreviewUrl) *NullablePortPreviewUrl {
	return &NullablePortPreviewUrl{value: val, isSet: true}
}

func (v NullablePortPreviewUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortPreviewUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
