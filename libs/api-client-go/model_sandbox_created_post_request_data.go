/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"time"
)

// checks if the SandboxCreatedPostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxCreatedPostRequestData{}

// SandboxCreatedPostRequestData struct for SandboxCreatedPostRequestData
type SandboxCreatedPostRequestData struct {
	Id             *string           `json:"id,omitempty"`
	OrganizationId *string           `json:"organizationId,omitempty"`
	Target         *string           `json:"target,omitempty"`
	Snapshot       *string           `json:"snapshot,omitempty"`
	User           *string           `json:"user,omitempty"`
	Env            map[string]string `json:"env,omitempty"`
	Cpu            *float32          `json:"cpu,omitempty"`
	Gpu            *float32          `json:"gpu,omitempty"`
	Memory         *float32          `json:"memory,omitempty"`
	Disk           *float32          `json:"disk,omitempty"`
	Public         *bool             `json:"public,omitempty"`
	Labels         map[string]string `json:"labels,omitempty"`
	State          *string           `json:"state,omitempty"`
	DesiredState   *string           `json:"desiredState,omitempty"`
	CreatedAt      *time.Time        `json:"createdAt,omitempty"`
	UpdatedAt      *time.Time        `json:"updatedAt,omitempty"`
}

// NewSandboxCreatedPostRequestData instantiates a new SandboxCreatedPostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxCreatedPostRequestData() *SandboxCreatedPostRequestData {
	this := SandboxCreatedPostRequestData{}
	return &this
}

// NewSandboxCreatedPostRequestDataWithDefaults instantiates a new SandboxCreatedPostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxCreatedPostRequestDataWithDefaults() *SandboxCreatedPostRequestData {
	this := SandboxCreatedPostRequestData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SandboxCreatedPostRequestData) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *SandboxCreatedPostRequestData) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *SandboxCreatedPostRequestData) SetTarget(v string) {
	o.Target = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetSnapshot() string {
	if o == nil || IsNil(o.Snapshot) {
		var ret string
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetSnapshotOk() (*string, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given string and assigns it to the Snapshot field.
func (o *SandboxCreatedPostRequestData) SetSnapshot(v string) {
	o.Snapshot = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *SandboxCreatedPostRequestData) SetUser(v string) {
	o.User = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetEnv() map[string]string {
	if o == nil || IsNil(o.Env) {
		var ret map[string]string
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetEnvOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Env) {
		return map[string]string{}, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given map[string]string and assigns it to the Env field.
func (o *SandboxCreatedPostRequestData) SetEnv(v map[string]string) {
	o.Env = v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetCpu() float32 {
	if o == nil || IsNil(o.Cpu) {
		var ret float32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetCpuOk() (*float32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given float32 and assigns it to the Cpu field.
func (o *SandboxCreatedPostRequestData) SetCpu(v float32) {
	o.Cpu = &v
}

// GetGpu returns the Gpu field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetGpu() float32 {
	if o == nil || IsNil(o.Gpu) {
		var ret float32
		return ret
	}
	return *o.Gpu
}

// GetGpuOk returns a tuple with the Gpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetGpuOk() (*float32, bool) {
	if o == nil || IsNil(o.Gpu) {
		return nil, false
	}
	return o.Gpu, true
}

// HasGpu returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasGpu() bool {
	if o != nil && !IsNil(o.Gpu) {
		return true
	}

	return false
}

// SetGpu gets a reference to the given float32 and assigns it to the Gpu field.
func (o *SandboxCreatedPostRequestData) SetGpu(v float32) {
	o.Gpu = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetMemory() float32 {
	if o == nil || IsNil(o.Memory) {
		var ret float32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetMemoryOk() (*float32, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given float32 and assigns it to the Memory field.
func (o *SandboxCreatedPostRequestData) SetMemory(v float32) {
	o.Memory = &v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetDisk() float32 {
	if o == nil || IsNil(o.Disk) {
		var ret float32
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetDiskOk() (*float32, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given float32 and assigns it to the Disk field.
func (o *SandboxCreatedPostRequestData) SetDisk(v float32) {
	o.Disk = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *SandboxCreatedPostRequestData) SetPublic(v bool) {
	o.Public = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetLabelsOk() (map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]string{}, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *SandboxCreatedPostRequestData) SetLabels(v map[string]string) {
	o.Labels = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SandboxCreatedPostRequestData) SetState(v string) {
	o.State = &v
}

// GetDesiredState returns the DesiredState field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetDesiredState() string {
	if o == nil || IsNil(o.DesiredState) {
		var ret string
		return ret
	}
	return *o.DesiredState
}

// GetDesiredStateOk returns a tuple with the DesiredState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetDesiredStateOk() (*string, bool) {
	if o == nil || IsNil(o.DesiredState) {
		return nil, false
	}
	return o.DesiredState, true
}

// HasDesiredState returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasDesiredState() bool {
	if o != nil && !IsNil(o.DesiredState) {
		return true
	}

	return false
}

// SetDesiredState gets a reference to the given string and assigns it to the DesiredState field.
func (o *SandboxCreatedPostRequestData) SetDesiredState(v string) {
	o.DesiredState = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SandboxCreatedPostRequestData) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SandboxCreatedPostRequestData) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxCreatedPostRequestData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SandboxCreatedPostRequestData) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *SandboxCreatedPostRequestData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o SandboxCreatedPostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxCreatedPostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Gpu) {
		toSerialize["gpu"] = o.Gpu
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.DesiredState) {
		toSerialize["desiredState"] = o.DesiredState
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSandboxCreatedPostRequestData struct {
	value *SandboxCreatedPostRequestData
	isSet bool
}

func (v NullableSandboxCreatedPostRequestData) Get() *SandboxCreatedPostRequestData {
	return v.value
}

func (v *NullableSandboxCreatedPostRequestData) Set(val *SandboxCreatedPostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxCreatedPostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxCreatedPostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxCreatedPostRequestData(val *SandboxCreatedPostRequestData) *NullableSandboxCreatedPostRequestData {
	return &NullableSandboxCreatedPostRequestData{value: val, isSet: true}
}

func (v NullableSandboxCreatedPostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxCreatedPostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
