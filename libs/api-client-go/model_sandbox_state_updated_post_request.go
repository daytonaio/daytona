/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"time"
)

// checks if the SandboxStateUpdatedPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxStateUpdatedPostRequest{}

// SandboxStateUpdatedPostRequest struct for SandboxStateUpdatedPostRequest
type SandboxStateUpdatedPostRequest struct {
	Event     *string                             `json:"event,omitempty"`
	Timestamp *time.Time                          `json:"timestamp,omitempty"`
	Data      *SandboxStateUpdatedPostRequestData `json:"data,omitempty"`
}

// NewSandboxStateUpdatedPostRequest instantiates a new SandboxStateUpdatedPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxStateUpdatedPostRequest() *SandboxStateUpdatedPostRequest {
	this := SandboxStateUpdatedPostRequest{}
	return &this
}

// NewSandboxStateUpdatedPostRequestWithDefaults instantiates a new SandboxStateUpdatedPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxStateUpdatedPostRequestWithDefaults() *SandboxStateUpdatedPostRequest {
	this := SandboxStateUpdatedPostRequest{}
	return &this
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *SandboxStateUpdatedPostRequest) GetEvent() string {
	if o == nil || IsNil(o.Event) {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxStateUpdatedPostRequest) GetEventOk() (*string, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *SandboxStateUpdatedPostRequest) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *SandboxStateUpdatedPostRequest) SetEvent(v string) {
	o.Event = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SandboxStateUpdatedPostRequest) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxStateUpdatedPostRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SandboxStateUpdatedPostRequest) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *SandboxStateUpdatedPostRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *SandboxStateUpdatedPostRequest) GetData() SandboxStateUpdatedPostRequestData {
	if o == nil || IsNil(o.Data) {
		var ret SandboxStateUpdatedPostRequestData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxStateUpdatedPostRequest) GetDataOk() (*SandboxStateUpdatedPostRequestData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *SandboxStateUpdatedPostRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given SandboxStateUpdatedPostRequestData and assigns it to the Data field.
func (o *SandboxStateUpdatedPostRequest) SetData(v SandboxStateUpdatedPostRequestData) {
	o.Data = &v
}

func (o SandboxStateUpdatedPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxStateUpdatedPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableSandboxStateUpdatedPostRequest struct {
	value *SandboxStateUpdatedPostRequest
	isSet bool
}

func (v NullableSandboxStateUpdatedPostRequest) Get() *SandboxStateUpdatedPostRequest {
	return v.value
}

func (v *NullableSandboxStateUpdatedPostRequest) Set(val *SandboxStateUpdatedPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxStateUpdatedPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxStateUpdatedPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxStateUpdatedPostRequest(val *SandboxStateUpdatedPostRequest) *NullableSandboxStateUpdatedPostRequest {
	return &NullableSandboxStateUpdatedPostRequest{value: val, isSet: true}
}

func (v NullableSandboxStateUpdatedPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxStateUpdatedPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
