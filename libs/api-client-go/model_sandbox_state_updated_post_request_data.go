/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the SandboxStateUpdatedPostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SandboxStateUpdatedPostRequestData{}

// SandboxStateUpdatedPostRequestData struct for SandboxStateUpdatedPostRequestData
type SandboxStateUpdatedPostRequestData struct {
	Sandbox  *SandboxStateUpdatedPostRequestDataSandbox `json:"sandbox,omitempty"`
	OldState *string                                    `json:"oldState,omitempty"`
	NewState *string                                    `json:"newState,omitempty"`
}

// NewSandboxStateUpdatedPostRequestData instantiates a new SandboxStateUpdatedPostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSandboxStateUpdatedPostRequestData() *SandboxStateUpdatedPostRequestData {
	this := SandboxStateUpdatedPostRequestData{}
	return &this
}

// NewSandboxStateUpdatedPostRequestDataWithDefaults instantiates a new SandboxStateUpdatedPostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSandboxStateUpdatedPostRequestDataWithDefaults() *SandboxStateUpdatedPostRequestData {
	this := SandboxStateUpdatedPostRequestData{}
	return &this
}

// GetSandbox returns the Sandbox field value if set, zero value otherwise.
func (o *SandboxStateUpdatedPostRequestData) GetSandbox() SandboxStateUpdatedPostRequestDataSandbox {
	if o == nil || IsNil(o.Sandbox) {
		var ret SandboxStateUpdatedPostRequestDataSandbox
		return ret
	}
	return *o.Sandbox
}

// GetSandboxOk returns a tuple with the Sandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxStateUpdatedPostRequestData) GetSandboxOk() (*SandboxStateUpdatedPostRequestDataSandbox, bool) {
	if o == nil || IsNil(o.Sandbox) {
		return nil, false
	}
	return o.Sandbox, true
}

// HasSandbox returns a boolean if a field has been set.
func (o *SandboxStateUpdatedPostRequestData) HasSandbox() bool {
	if o != nil && !IsNil(o.Sandbox) {
		return true
	}

	return false
}

// SetSandbox gets a reference to the given SandboxStateUpdatedPostRequestDataSandbox and assigns it to the Sandbox field.
func (o *SandboxStateUpdatedPostRequestData) SetSandbox(v SandboxStateUpdatedPostRequestDataSandbox) {
	o.Sandbox = &v
}

// GetOldState returns the OldState field value if set, zero value otherwise.
func (o *SandboxStateUpdatedPostRequestData) GetOldState() string {
	if o == nil || IsNil(o.OldState) {
		var ret string
		return ret
	}
	return *o.OldState
}

// GetOldStateOk returns a tuple with the OldState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxStateUpdatedPostRequestData) GetOldStateOk() (*string, bool) {
	if o == nil || IsNil(o.OldState) {
		return nil, false
	}
	return o.OldState, true
}

// HasOldState returns a boolean if a field has been set.
func (o *SandboxStateUpdatedPostRequestData) HasOldState() bool {
	if o != nil && !IsNil(o.OldState) {
		return true
	}

	return false
}

// SetOldState gets a reference to the given string and assigns it to the OldState field.
func (o *SandboxStateUpdatedPostRequestData) SetOldState(v string) {
	o.OldState = &v
}

// GetNewState returns the NewState field value if set, zero value otherwise.
func (o *SandboxStateUpdatedPostRequestData) GetNewState() string {
	if o == nil || IsNil(o.NewState) {
		var ret string
		return ret
	}
	return *o.NewState
}

// GetNewStateOk returns a tuple with the NewState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SandboxStateUpdatedPostRequestData) GetNewStateOk() (*string, bool) {
	if o == nil || IsNil(o.NewState) {
		return nil, false
	}
	return o.NewState, true
}

// HasNewState returns a boolean if a field has been set.
func (o *SandboxStateUpdatedPostRequestData) HasNewState() bool {
	if o != nil && !IsNil(o.NewState) {
		return true
	}

	return false
}

// SetNewState gets a reference to the given string and assigns it to the NewState field.
func (o *SandboxStateUpdatedPostRequestData) SetNewState(v string) {
	o.NewState = &v
}

func (o SandboxStateUpdatedPostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SandboxStateUpdatedPostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sandbox) {
		toSerialize["sandbox"] = o.Sandbox
	}
	if !IsNil(o.OldState) {
		toSerialize["oldState"] = o.OldState
	}
	if !IsNil(o.NewState) {
		toSerialize["newState"] = o.NewState
	}
	return toSerialize, nil
}

type NullableSandboxStateUpdatedPostRequestData struct {
	value *SandboxStateUpdatedPostRequestData
	isSet bool
}

func (v NullableSandboxStateUpdatedPostRequestData) Get() *SandboxStateUpdatedPostRequestData {
	return v.value
}

func (v *NullableSandboxStateUpdatedPostRequestData) Set(val *SandboxStateUpdatedPostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableSandboxStateUpdatedPostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableSandboxStateUpdatedPostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSandboxStateUpdatedPostRequestData(val *SandboxStateUpdatedPostRequestData) *NullableSandboxStateUpdatedPostRequestData {
	return &NullableSandboxStateUpdatedPostRequestData{value: val, isSet: true}
}

func (v NullableSandboxStateUpdatedPostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSandboxStateUpdatedPostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
