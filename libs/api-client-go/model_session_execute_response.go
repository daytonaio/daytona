/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the SessionExecuteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionExecuteResponse{}

// SessionExecuteResponse struct for SessionExecuteResponse
type SessionExecuteResponse struct {
	// The ID of the executed command
	CmdId *string `json:"cmdId,omitempty"`
	// The stdout of the executed command
	Stdout *string `json:"stdout,omitempty"`
	// The stderr of the executed command
	Stderr *string `json:"stderr,omitempty"`
	// The exit code of the executed command
	ExitCode *float32 `json:"exitCode,omitempty"`
}

// NewSessionExecuteResponse instantiates a new SessionExecuteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionExecuteResponse() *SessionExecuteResponse {
	this := SessionExecuteResponse{}
	return &this
}

// NewSessionExecuteResponseWithDefaults instantiates a new SessionExecuteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionExecuteResponseWithDefaults() *SessionExecuteResponse {
	this := SessionExecuteResponse{}
	return &this
}

// GetCmdId returns the CmdId field value if set, zero value otherwise.
func (o *SessionExecuteResponse) GetCmdId() string {
	if o == nil || IsNil(o.CmdId) {
		var ret string
		return ret
	}
	return *o.CmdId
}

// GetCmdIdOk returns a tuple with the CmdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionExecuteResponse) GetCmdIdOk() (*string, bool) {
	if o == nil || IsNil(o.CmdId) {
		return nil, false
	}
	return o.CmdId, true
}

// HasCmdId returns a boolean if a field has been set.
func (o *SessionExecuteResponse) HasCmdId() bool {
	if o != nil && !IsNil(o.CmdId) {
		return true
	}

	return false
}

// SetCmdId gets a reference to the given string and assigns it to the CmdId field.
func (o *SessionExecuteResponse) SetCmdId(v string) {
	o.CmdId = &v
}

// GetStdout returns the Stdout field value if set, zero value otherwise.
func (o *SessionExecuteResponse) GetStdout() string {
	if o == nil || IsNil(o.Stdout) {
		var ret string
		return ret
	}
	return *o.Stdout
}

// GetStdoutOk returns a tuple with the Stdout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionExecuteResponse) GetStdoutOk() (*string, bool) {
	if o == nil || IsNil(o.Stdout) {
		return nil, false
	}
	return o.Stdout, true
}

// HasStdout returns a boolean if a field has been set.
func (o *SessionExecuteResponse) HasStdout() bool {
	if o != nil && !IsNil(o.Stdout) {
		return true
	}

	return false
}

// SetStdout gets a reference to the given string and assigns it to the Stdout field.
func (o *SessionExecuteResponse) SetStdout(v string) {
	o.Stdout = &v
}

// GetStderr returns the Stderr field value if set, zero value otherwise.
func (o *SessionExecuteResponse) GetStderr() string {
	if o == nil || IsNil(o.Stderr) {
		var ret string
		return ret
	}
	return *o.Stderr
}

// GetStderrOk returns a tuple with the Stderr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionExecuteResponse) GetStderrOk() (*string, bool) {
	if o == nil || IsNil(o.Stderr) {
		return nil, false
	}
	return o.Stderr, true
}

// HasStderr returns a boolean if a field has been set.
func (o *SessionExecuteResponse) HasStderr() bool {
	if o != nil && !IsNil(o.Stderr) {
		return true
	}

	return false
}

// SetStderr gets a reference to the given string and assigns it to the Stderr field.
func (o *SessionExecuteResponse) SetStderr(v string) {
	o.Stderr = &v
}

// GetExitCode returns the ExitCode field value if set, zero value otherwise.
func (o *SessionExecuteResponse) GetExitCode() float32 {
	if o == nil || IsNil(o.ExitCode) {
		var ret float32
		return ret
	}
	return *o.ExitCode
}

// GetExitCodeOk returns a tuple with the ExitCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionExecuteResponse) GetExitCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.ExitCode) {
		return nil, false
	}
	return o.ExitCode, true
}

// HasExitCode returns a boolean if a field has been set.
func (o *SessionExecuteResponse) HasExitCode() bool {
	if o != nil && !IsNil(o.ExitCode) {
		return true
	}

	return false
}

// SetExitCode gets a reference to the given float32 and assigns it to the ExitCode field.
func (o *SessionExecuteResponse) SetExitCode(v float32) {
	o.ExitCode = &v
}

func (o SessionExecuteResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionExecuteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CmdId) {
		toSerialize["cmdId"] = o.CmdId
	}
	if !IsNil(o.Stdout) {
		toSerialize["stdout"] = o.Stdout
	}
	if !IsNil(o.Stderr) {
		toSerialize["stderr"] = o.Stderr
	}
	if !IsNil(o.ExitCode) {
		toSerialize["exitCode"] = o.ExitCode
	}
	return toSerialize, nil
}

type NullableSessionExecuteResponse struct {
	value *SessionExecuteResponse
	isSet bool
}

func (v NullableSessionExecuteResponse) Get() *SessionExecuteResponse {
	return v.value
}

func (v *NullableSessionExecuteResponse) Set(val *SessionExecuteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionExecuteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionExecuteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionExecuteResponse(val *SessionExecuteResponse) *NullableSessionExecuteResponse {
	return &NullableSessionExecuteResponse{value: val, isSet: true}
}

func (v NullableSessionExecuteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionExecuteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
