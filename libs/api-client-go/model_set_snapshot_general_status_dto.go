/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SetSnapshotGeneralStatusDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetSnapshotGeneralStatusDto{}

// SetSnapshotGeneralStatusDto struct for SetSnapshotGeneralStatusDto
type SetSnapshotGeneralStatusDto struct {
	// Whether the snapshot is general
	General bool `json:"general"`
}

type _SetSnapshotGeneralStatusDto SetSnapshotGeneralStatusDto

// NewSetSnapshotGeneralStatusDto instantiates a new SetSnapshotGeneralStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetSnapshotGeneralStatusDto(general bool) *SetSnapshotGeneralStatusDto {
	this := SetSnapshotGeneralStatusDto{}
	this.General = general
	return &this
}

// NewSetSnapshotGeneralStatusDtoWithDefaults instantiates a new SetSnapshotGeneralStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetSnapshotGeneralStatusDtoWithDefaults() *SetSnapshotGeneralStatusDto {
	this := SetSnapshotGeneralStatusDto{}
	return &this
}

// GetGeneral returns the General field value
func (o *SetSnapshotGeneralStatusDto) GetGeneral() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.General
}

// GetGeneralOk returns a tuple with the General field value
// and a boolean to check if the value has been set.
func (o *SetSnapshotGeneralStatusDto) GetGeneralOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.General, true
}

// SetGeneral sets field value
func (o *SetSnapshotGeneralStatusDto) SetGeneral(v bool) {
	o.General = v
}

func (o SetSnapshotGeneralStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetSnapshotGeneralStatusDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["general"] = o.General
	return toSerialize, nil
}

func (o *SetSnapshotGeneralStatusDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"general",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetSnapshotGeneralStatusDto := _SetSnapshotGeneralStatusDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetSnapshotGeneralStatusDto)

	if err != nil {
		return err
	}

	*o = SetSnapshotGeneralStatusDto(varSetSnapshotGeneralStatusDto)

	return err
}

type NullableSetSnapshotGeneralStatusDto struct {
	value *SetSnapshotGeneralStatusDto
	isSet bool
}

func (v NullableSetSnapshotGeneralStatusDto) Get() *SetSnapshotGeneralStatusDto {
	return v.value
}

func (v *NullableSetSnapshotGeneralStatusDto) Set(val *SetSnapshotGeneralStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSetSnapshotGeneralStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSetSnapshotGeneralStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetSnapshotGeneralStatusDto(val *SetSnapshotGeneralStatusDto) *NullableSetSnapshotGeneralStatusDto {
	return &NullableSetSnapshotGeneralStatusDto{value: val, isSet: true}
}

func (v NullableSetSnapshotGeneralStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetSnapshotGeneralStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
