/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"time"
)

// checks if the SnapshotCreatedPostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotCreatedPostRequestData{}

// SnapshotCreatedPostRequestData struct for SnapshotCreatedPostRequestData
type SnapshotCreatedPostRequestData struct {
	Id             *string    `json:"id,omitempty"`
	OrganizationId *string    `json:"organizationId,omitempty"`
	General        *bool      `json:"general,omitempty"`
	Name           *string    `json:"name,omitempty"`
	ImageName      *string    `json:"imageName,omitempty"`
	State          *string    `json:"state,omitempty"`
	Size           *float32   `json:"size,omitempty"`
	Cpu            *float32   `json:"cpu,omitempty"`
	Gpu            *float32   `json:"gpu,omitempty"`
	Mem            *float32   `json:"mem,omitempty"`
	Disk           *float32   `json:"disk,omitempty"`
	CreatedAt      *time.Time `json:"createdAt,omitempty"`
	UpdatedAt      *time.Time `json:"updatedAt,omitempty"`
}

// NewSnapshotCreatedPostRequestData instantiates a new SnapshotCreatedPostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotCreatedPostRequestData() *SnapshotCreatedPostRequestData {
	this := SnapshotCreatedPostRequestData{}
	return &this
}

// NewSnapshotCreatedPostRequestDataWithDefaults instantiates a new SnapshotCreatedPostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotCreatedPostRequestDataWithDefaults() *SnapshotCreatedPostRequestData {
	this := SnapshotCreatedPostRequestData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SnapshotCreatedPostRequestData) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *SnapshotCreatedPostRequestData) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetGeneral returns the General field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetGeneral() bool {
	if o == nil || IsNil(o.General) {
		var ret bool
		return ret
	}
	return *o.General
}

// GetGeneralOk returns a tuple with the General field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetGeneralOk() (*bool, bool) {
	if o == nil || IsNil(o.General) {
		return nil, false
	}
	return o.General, true
}

// HasGeneral returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasGeneral() bool {
	if o != nil && !IsNil(o.General) {
		return true
	}

	return false
}

// SetGeneral gets a reference to the given bool and assigns it to the General field.
func (o *SnapshotCreatedPostRequestData) SetGeneral(v bool) {
	o.General = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SnapshotCreatedPostRequestData) SetName(v string) {
	o.Name = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *SnapshotCreatedPostRequestData) SetImageName(v string) {
	o.ImageName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *SnapshotCreatedPostRequestData) SetState(v string) {
	o.State = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetSize() float32 {
	if o == nil || IsNil(o.Size) {
		var ret float32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given float32 and assigns it to the Size field.
func (o *SnapshotCreatedPostRequestData) SetSize(v float32) {
	o.Size = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetCpu() float32 {
	if o == nil || IsNil(o.Cpu) {
		var ret float32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetCpuOk() (*float32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given float32 and assigns it to the Cpu field.
func (o *SnapshotCreatedPostRequestData) SetCpu(v float32) {
	o.Cpu = &v
}

// GetGpu returns the Gpu field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetGpu() float32 {
	if o == nil || IsNil(o.Gpu) {
		var ret float32
		return ret
	}
	return *o.Gpu
}

// GetGpuOk returns a tuple with the Gpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetGpuOk() (*float32, bool) {
	if o == nil || IsNil(o.Gpu) {
		return nil, false
	}
	return o.Gpu, true
}

// HasGpu returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasGpu() bool {
	if o != nil && !IsNil(o.Gpu) {
		return true
	}

	return false
}

// SetGpu gets a reference to the given float32 and assigns it to the Gpu field.
func (o *SnapshotCreatedPostRequestData) SetGpu(v float32) {
	o.Gpu = &v
}

// GetMem returns the Mem field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetMem() float32 {
	if o == nil || IsNil(o.Mem) {
		var ret float32
		return ret
	}
	return *o.Mem
}

// GetMemOk returns a tuple with the Mem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetMemOk() (*float32, bool) {
	if o == nil || IsNil(o.Mem) {
		return nil, false
	}
	return o.Mem, true
}

// HasMem returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasMem() bool {
	if o != nil && !IsNil(o.Mem) {
		return true
	}

	return false
}

// SetMem gets a reference to the given float32 and assigns it to the Mem field.
func (o *SnapshotCreatedPostRequestData) SetMem(v float32) {
	o.Mem = &v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetDisk() float32 {
	if o == nil || IsNil(o.Disk) {
		var ret float32
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetDiskOk() (*float32, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given float32 and assigns it to the Disk field.
func (o *SnapshotCreatedPostRequestData) SetDisk(v float32) {
	o.Disk = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SnapshotCreatedPostRequestData) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SnapshotCreatedPostRequestData) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotCreatedPostRequestData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SnapshotCreatedPostRequestData) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *SnapshotCreatedPostRequestData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o SnapshotCreatedPostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotCreatedPostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.General) {
		toSerialize["general"] = o.General
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ImageName) {
		toSerialize["imageName"] = o.ImageName
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Gpu) {
		toSerialize["gpu"] = o.Gpu
	}
	if !IsNil(o.Mem) {
		toSerialize["mem"] = o.Mem
	}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSnapshotCreatedPostRequestData struct {
	value *SnapshotCreatedPostRequestData
	isSet bool
}

func (v NullableSnapshotCreatedPostRequestData) Get() *SnapshotCreatedPostRequestData {
	return v.value
}

func (v *NullableSnapshotCreatedPostRequestData) Set(val *SnapshotCreatedPostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotCreatedPostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotCreatedPostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotCreatedPostRequestData(val *SnapshotCreatedPostRequestData) *NullableSnapshotCreatedPostRequestData {
	return &NullableSnapshotCreatedPostRequestData{value: val, isSet: true}
}

func (v NullableSnapshotCreatedPostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotCreatedPostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
