/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the VolumeStateUpdatedPostRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeStateUpdatedPostRequestData{}

// VolumeStateUpdatedPostRequestData struct for VolumeStateUpdatedPostRequestData
type VolumeStateUpdatedPostRequestData struct {
	Volume   *VolumeStateUpdatedPostRequestDataVolume `json:"volume,omitempty"`
	OldState *string                                  `json:"oldState,omitempty"`
	NewState *string                                  `json:"newState,omitempty"`
}

// NewVolumeStateUpdatedPostRequestData instantiates a new VolumeStateUpdatedPostRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeStateUpdatedPostRequestData() *VolumeStateUpdatedPostRequestData {
	this := VolumeStateUpdatedPostRequestData{}
	return &this
}

// NewVolumeStateUpdatedPostRequestDataWithDefaults instantiates a new VolumeStateUpdatedPostRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeStateUpdatedPostRequestDataWithDefaults() *VolumeStateUpdatedPostRequestData {
	this := VolumeStateUpdatedPostRequestData{}
	return &this
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *VolumeStateUpdatedPostRequestData) GetVolume() VolumeStateUpdatedPostRequestDataVolume {
	if o == nil || IsNil(o.Volume) {
		var ret VolumeStateUpdatedPostRequestDataVolume
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeStateUpdatedPostRequestData) GetVolumeOk() (*VolumeStateUpdatedPostRequestDataVolume, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *VolumeStateUpdatedPostRequestData) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given VolumeStateUpdatedPostRequestDataVolume and assigns it to the Volume field.
func (o *VolumeStateUpdatedPostRequestData) SetVolume(v VolumeStateUpdatedPostRequestDataVolume) {
	o.Volume = &v
}

// GetOldState returns the OldState field value if set, zero value otherwise.
func (o *VolumeStateUpdatedPostRequestData) GetOldState() string {
	if o == nil || IsNil(o.OldState) {
		var ret string
		return ret
	}
	return *o.OldState
}

// GetOldStateOk returns a tuple with the OldState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeStateUpdatedPostRequestData) GetOldStateOk() (*string, bool) {
	if o == nil || IsNil(o.OldState) {
		return nil, false
	}
	return o.OldState, true
}

// HasOldState returns a boolean if a field has been set.
func (o *VolumeStateUpdatedPostRequestData) HasOldState() bool {
	if o != nil && !IsNil(o.OldState) {
		return true
	}

	return false
}

// SetOldState gets a reference to the given string and assigns it to the OldState field.
func (o *VolumeStateUpdatedPostRequestData) SetOldState(v string) {
	o.OldState = &v
}

// GetNewState returns the NewState field value if set, zero value otherwise.
func (o *VolumeStateUpdatedPostRequestData) GetNewState() string {
	if o == nil || IsNil(o.NewState) {
		var ret string
		return ret
	}
	return *o.NewState
}

// GetNewStateOk returns a tuple with the NewState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeStateUpdatedPostRequestData) GetNewStateOk() (*string, bool) {
	if o == nil || IsNil(o.NewState) {
		return nil, false
	}
	return o.NewState, true
}

// HasNewState returns a boolean if a field has been set.
func (o *VolumeStateUpdatedPostRequestData) HasNewState() bool {
	if o != nil && !IsNil(o.NewState) {
		return true
	}

	return false
}

// SetNewState gets a reference to the given string and assigns it to the NewState field.
func (o *VolumeStateUpdatedPostRequestData) SetNewState(v string) {
	o.NewState = &v
}

func (o VolumeStateUpdatedPostRequestData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeStateUpdatedPostRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	if !IsNil(o.OldState) {
		toSerialize["oldState"] = o.OldState
	}
	if !IsNil(o.NewState) {
		toSerialize["newState"] = o.NewState
	}
	return toSerialize, nil
}

type NullableVolumeStateUpdatedPostRequestData struct {
	value *VolumeStateUpdatedPostRequestData
	isSet bool
}

func (v NullableVolumeStateUpdatedPostRequestData) Get() *VolumeStateUpdatedPostRequestData {
	return v.value
}

func (v *NullableVolumeStateUpdatedPostRequestData) Set(val *VolumeStateUpdatedPostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeStateUpdatedPostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeStateUpdatedPostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeStateUpdatedPostRequestData(val *VolumeStateUpdatedPostRequestData) *NullableVolumeStateUpdatedPostRequestData {
	return &NullableVolumeStateUpdatedPostRequestData{value: val, isSet: true}
}

func (v NullableVolumeStateUpdatedPostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeStateUpdatedPostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
