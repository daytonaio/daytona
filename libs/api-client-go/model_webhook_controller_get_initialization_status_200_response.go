/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the WebhookControllerGetInitializationStatus200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookControllerGetInitializationStatus200Response{}

// WebhookControllerGetInitializationStatus200Response struct for WebhookControllerGetInitializationStatus200Response
type WebhookControllerGetInitializationStatus200Response struct {
	OrganizationId         *string        `json:"organizationId,omitempty"`
	EndpointsCreated       *bool          `json:"endpointsCreated,omitempty"`
	SvixApplicationCreated *bool          `json:"svixApplicationCreated,omitempty"`
	LastError              NullableString `json:"lastError,omitempty"`
	RetryCount             *float32       `json:"retryCount,omitempty"`
	CreatedAt              *string        `json:"createdAt,omitempty"`
	UpdatedAt              *string        `json:"updatedAt,omitempty"`
}

// NewWebhookControllerGetInitializationStatus200Response instantiates a new WebhookControllerGetInitializationStatus200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookControllerGetInitializationStatus200Response() *WebhookControllerGetInitializationStatus200Response {
	this := WebhookControllerGetInitializationStatus200Response{}
	return &this
}

// NewWebhookControllerGetInitializationStatus200ResponseWithDefaults instantiates a new WebhookControllerGetInitializationStatus200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookControllerGetInitializationStatus200ResponseWithDefaults() *WebhookControllerGetInitializationStatus200Response {
	this := WebhookControllerGetInitializationStatus200Response{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *WebhookControllerGetInitializationStatus200Response) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookControllerGetInitializationStatus200Response) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *WebhookControllerGetInitializationStatus200Response) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *WebhookControllerGetInitializationStatus200Response) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetEndpointsCreated returns the EndpointsCreated field value if set, zero value otherwise.
func (o *WebhookControllerGetInitializationStatus200Response) GetEndpointsCreated() bool {
	if o == nil || IsNil(o.EndpointsCreated) {
		var ret bool
		return ret
	}
	return *o.EndpointsCreated
}

// GetEndpointsCreatedOk returns a tuple with the EndpointsCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookControllerGetInitializationStatus200Response) GetEndpointsCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.EndpointsCreated) {
		return nil, false
	}
	return o.EndpointsCreated, true
}

// HasEndpointsCreated returns a boolean if a field has been set.
func (o *WebhookControllerGetInitializationStatus200Response) HasEndpointsCreated() bool {
	if o != nil && !IsNil(o.EndpointsCreated) {
		return true
	}

	return false
}

// SetEndpointsCreated gets a reference to the given bool and assigns it to the EndpointsCreated field.
func (o *WebhookControllerGetInitializationStatus200Response) SetEndpointsCreated(v bool) {
	o.EndpointsCreated = &v
}

// GetSvixApplicationCreated returns the SvixApplicationCreated field value if set, zero value otherwise.
func (o *WebhookControllerGetInitializationStatus200Response) GetSvixApplicationCreated() bool {
	if o == nil || IsNil(o.SvixApplicationCreated) {
		var ret bool
		return ret
	}
	return *o.SvixApplicationCreated
}

// GetSvixApplicationCreatedOk returns a tuple with the SvixApplicationCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookControllerGetInitializationStatus200Response) GetSvixApplicationCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.SvixApplicationCreated) {
		return nil, false
	}
	return o.SvixApplicationCreated, true
}

// HasSvixApplicationCreated returns a boolean if a field has been set.
func (o *WebhookControllerGetInitializationStatus200Response) HasSvixApplicationCreated() bool {
	if o != nil && !IsNil(o.SvixApplicationCreated) {
		return true
	}

	return false
}

// SetSvixApplicationCreated gets a reference to the given bool and assigns it to the SvixApplicationCreated field.
func (o *WebhookControllerGetInitializationStatus200Response) SetSvixApplicationCreated(v bool) {
	o.SvixApplicationCreated = &v
}

// GetLastError returns the LastError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookControllerGetInitializationStatus200Response) GetLastError() string {
	if o == nil || IsNil(o.LastError.Get()) {
		var ret string
		return ret
	}
	return *o.LastError.Get()
}

// GetLastErrorOk returns a tuple with the LastError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookControllerGetInitializationStatus200Response) GetLastErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastError.Get(), o.LastError.IsSet()
}

// HasLastError returns a boolean if a field has been set.
func (o *WebhookControllerGetInitializationStatus200Response) HasLastError() bool {
	if o != nil && o.LastError.IsSet() {
		return true
	}

	return false
}

// SetLastError gets a reference to the given NullableString and assigns it to the LastError field.
func (o *WebhookControllerGetInitializationStatus200Response) SetLastError(v string) {
	o.LastError.Set(&v)
}

// SetLastErrorNil sets the value for LastError to be an explicit nil
func (o *WebhookControllerGetInitializationStatus200Response) SetLastErrorNil() {
	o.LastError.Set(nil)
}

// UnsetLastError ensures that no value is present for LastError, not even an explicit nil
func (o *WebhookControllerGetInitializationStatus200Response) UnsetLastError() {
	o.LastError.Unset()
}

// GetRetryCount returns the RetryCount field value if set, zero value otherwise.
func (o *WebhookControllerGetInitializationStatus200Response) GetRetryCount() float32 {
	if o == nil || IsNil(o.RetryCount) {
		var ret float32
		return ret
	}
	return *o.RetryCount
}

// GetRetryCountOk returns a tuple with the RetryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookControllerGetInitializationStatus200Response) GetRetryCountOk() (*float32, bool) {
	if o == nil || IsNil(o.RetryCount) {
		return nil, false
	}
	return o.RetryCount, true
}

// HasRetryCount returns a boolean if a field has been set.
func (o *WebhookControllerGetInitializationStatus200Response) HasRetryCount() bool {
	if o != nil && !IsNil(o.RetryCount) {
		return true
	}

	return false
}

// SetRetryCount gets a reference to the given float32 and assigns it to the RetryCount field.
func (o *WebhookControllerGetInitializationStatus200Response) SetRetryCount(v float32) {
	o.RetryCount = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *WebhookControllerGetInitializationStatus200Response) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookControllerGetInitializationStatus200Response) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *WebhookControllerGetInitializationStatus200Response) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *WebhookControllerGetInitializationStatus200Response) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WebhookControllerGetInitializationStatus200Response) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookControllerGetInitializationStatus200Response) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WebhookControllerGetInitializationStatus200Response) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *WebhookControllerGetInitializationStatus200Response) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o WebhookControllerGetInitializationStatus200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookControllerGetInitializationStatus200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.EndpointsCreated) {
		toSerialize["endpointsCreated"] = o.EndpointsCreated
	}
	if !IsNil(o.SvixApplicationCreated) {
		toSerialize["svixApplicationCreated"] = o.SvixApplicationCreated
	}
	if o.LastError.IsSet() {
		toSerialize["lastError"] = o.LastError.Get()
	}
	if !IsNil(o.RetryCount) {
		toSerialize["retryCount"] = o.RetryCount
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableWebhookControllerGetInitializationStatus200Response struct {
	value *WebhookControllerGetInitializationStatus200Response
	isSet bool
}

func (v NullableWebhookControllerGetInitializationStatus200Response) Get() *WebhookControllerGetInitializationStatus200Response {
	return v.value
}

func (v *NullableWebhookControllerGetInitializationStatus200Response) Set(val *WebhookControllerGetInitializationStatus200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookControllerGetInitializationStatus200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookControllerGetInitializationStatus200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookControllerGetInitializationStatus200Response(val *WebhookControllerGetInitializationStatus200Response) *NullableWebhookControllerGetInitializationStatus200Response {
	return &NullableWebhookControllerGetInitializationStatus200Response{value: val, isSet: true}
}

func (v NullableWebhookControllerGetInitializationStatus200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookControllerGetInitializationStatus200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
