/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"fmt"
)

// checks if the WorkspacePortPreviewUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspacePortPreviewUrl{}

// WorkspacePortPreviewUrl struct for WorkspacePortPreviewUrl
type WorkspacePortPreviewUrl struct {
	// Preview url
	Url string `json:"url"`
	// Access token
	Token                string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _WorkspacePortPreviewUrl WorkspacePortPreviewUrl

// NewWorkspacePortPreviewUrl instantiates a new WorkspacePortPreviewUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspacePortPreviewUrl(url string, token string) *WorkspacePortPreviewUrl {
	this := WorkspacePortPreviewUrl{}
	this.Url = url
	this.Token = token
	return &this
}

// NewWorkspacePortPreviewUrlWithDefaults instantiates a new WorkspacePortPreviewUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspacePortPreviewUrlWithDefaults() *WorkspacePortPreviewUrl {
	this := WorkspacePortPreviewUrl{}
	return &this
}

// GetUrl returns the Url field value
func (o *WorkspacePortPreviewUrl) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WorkspacePortPreviewUrl) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WorkspacePortPreviewUrl) SetUrl(v string) {
	o.Url = v
}

// GetToken returns the Token field value
func (o *WorkspacePortPreviewUrl) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *WorkspacePortPreviewUrl) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *WorkspacePortPreviewUrl) SetToken(v string) {
	o.Token = v
}

func (o WorkspacePortPreviewUrl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspacePortPreviewUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WorkspacePortPreviewUrl) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkspacePortPreviewUrl := _WorkspacePortPreviewUrl{}

	err = json.Unmarshal(data, &varWorkspacePortPreviewUrl)

	if err != nil {
		return err
	}

	*o = WorkspacePortPreviewUrl(varWorkspacePortPreviewUrl)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkspacePortPreviewUrl struct {
	value *WorkspacePortPreviewUrl
	isSet bool
}

func (v NullableWorkspacePortPreviewUrl) Get() *WorkspacePortPreviewUrl {
	return v.value
}

func (v *NullableWorkspacePortPreviewUrl) Set(val *WorkspacePortPreviewUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspacePortPreviewUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspacePortPreviewUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspacePortPreviewUrl(val *WorkspacePortPreviewUrl) *NullableWorkspacePortPreviewUrl {
	return &NullableWorkspacePortPreviewUrl{value: val, isSet: true}
}

func (v NullableWorkspacePortPreviewUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspacePortPreviewUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
