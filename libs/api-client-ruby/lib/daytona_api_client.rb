=begin
#Daytona

#Daytona AI platform API Docs

The version of the OpenAPI document: 1.0
Contact: support@daytona.com
Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

# Common files
require 'daytona_api_client/api_client'
require 'daytona_api_client/api_error'
require 'daytona_api_client/version'
require 'daytona_api_client/configuration'

# Models
require 'daytona_api_client/models/account_provider'
require 'daytona_api_client/models/api_key_list'
require 'daytona_api_client/models/api_key_response'
require 'daytona_api_client/models/audit_log'
require 'daytona_api_client/models/build_info'
require 'daytona_api_client/models/command'
require 'daytona_api_client/models/completion_context'
require 'daytona_api_client/models/completion_item'
require 'daytona_api_client/models/completion_list'
require 'daytona_api_client/models/compressed_screenshot_response'
require 'daytona_api_client/models/computer_use_start_response'
require 'daytona_api_client/models/computer_use_status_response'
require 'daytona_api_client/models/computer_use_stop_response'
require 'daytona_api_client/models/create_api_key'
require 'daytona_api_client/models/create_audit_log'
require 'daytona_api_client/models/create_build_info'
require 'daytona_api_client/models/create_docker_registry'
require 'daytona_api_client/models/create_linked_account'
require 'daytona_api_client/models/create_organization'
require 'daytona_api_client/models/create_organization_invitation'
require 'daytona_api_client/models/create_organization_quota'
require 'daytona_api_client/models/create_organization_role'
require 'daytona_api_client/models/create_runner'
require 'daytona_api_client/models/create_sandbox'
require 'daytona_api_client/models/create_session_request'
require 'daytona_api_client/models/create_snapshot'
require 'daytona_api_client/models/create_user'
require 'daytona_api_client/models/create_volume'
require 'daytona_api_client/models/create_workspace'
require 'daytona_api_client/models/display_info_response'
require 'daytona_api_client/models/docker_registry'
require 'daytona_api_client/models/execute_request'
require 'daytona_api_client/models/execute_response'
require 'daytona_api_client/models/file_info'
require 'daytona_api_client/models/file_status'
require 'daytona_api_client/models/git_add_request'
require 'daytona_api_client/models/git_branch_request'
require 'daytona_api_client/models/git_checkout_request'
require 'daytona_api_client/models/git_clone_request'
require 'daytona_api_client/models/git_commit_info'
require 'daytona_api_client/models/git_commit_request'
require 'daytona_api_client/models/git_commit_response'
require 'daytona_api_client/models/git_delete_branch_request'
require 'daytona_api_client/models/git_repo_request'
require 'daytona_api_client/models/git_status'
require 'daytona_api_client/models/health_controller_check200_response'
require 'daytona_api_client/models/health_controller_check200_response_info_value'
require 'daytona_api_client/models/health_controller_check503_response'
require 'daytona_api_client/models/keyboard_hotkey_request'
require 'daytona_api_client/models/keyboard_press_request'
require 'daytona_api_client/models/keyboard_type_request'
require 'daytona_api_client/models/list_branch_response'
require 'daytona_api_client/models/lsp_completion_params'
require 'daytona_api_client/models/lsp_document_request'
require 'daytona_api_client/models/lsp_location'
require 'daytona_api_client/models/lsp_server_request'
require 'daytona_api_client/models/lsp_symbol'
require 'daytona_api_client/models/match'
require 'daytona_api_client/models/mouse_click_request'
require 'daytona_api_client/models/mouse_click_response'
require 'daytona_api_client/models/mouse_drag_request'
require 'daytona_api_client/models/mouse_drag_response'
require 'daytona_api_client/models/mouse_move_request'
require 'daytona_api_client/models/mouse_move_response'
require 'daytona_api_client/models/mouse_position'
require 'daytona_api_client/models/mouse_scroll_request'
require 'daytona_api_client/models/mouse_scroll_response'
require 'daytona_api_client/models/organization'
require 'daytona_api_client/models/organization_invitation'
require 'daytona_api_client/models/organization_role'
require 'daytona_api_client/models/organization_sandbox_default_limited_network_egress'
require 'daytona_api_client/models/organization_suspension'
require 'daytona_api_client/models/organization_usage_overview'
require 'daytona_api_client/models/organization_user'
require 'daytona_api_client/models/paginated_audit_logs'
require 'daytona_api_client/models/paginated_snapshots_dto'
require 'daytona_api_client/models/port_preview_url'
require 'daytona_api_client/models/position'
require 'daytona_api_client/models/process_errors_response'
require 'daytona_api_client/models/process_logs_response'
require 'daytona_api_client/models/process_restart_response'
require 'daytona_api_client/models/process_status_response'
require 'daytona_api_client/models/project_dir_response'
require 'daytona_api_client/models/range'
require 'daytona_api_client/models/region_screenshot_response'
require 'daytona_api_client/models/registry_push_access_dto'
require 'daytona_api_client/models/replace_request'
require 'daytona_api_client/models/replace_result'
require 'daytona_api_client/models/runner'
require 'daytona_api_client/models/runner_snapshot_dto'
require 'daytona_api_client/models/runner_state'
require 'daytona_api_client/models/sandbox'
require 'daytona_api_client/models/sandbox_class'
require 'daytona_api_client/models/sandbox_desired_state'
require 'daytona_api_client/models/sandbox_info'
require 'daytona_api_client/models/sandbox_labels'
require 'daytona_api_client/models/sandbox_state'
require 'daytona_api_client/models/sandbox_volume'
require 'daytona_api_client/models/screenshot_response'
require 'daytona_api_client/models/search_files_response'
require 'daytona_api_client/models/send_webhook_dto'
require 'daytona_api_client/models/session'
require 'daytona_api_client/models/session_execute_request'
require 'daytona_api_client/models/session_execute_response'
require 'daytona_api_client/models/set_snapshot_general_status_dto'
require 'daytona_api_client/models/snapshot_dto'
require 'daytona_api_client/models/snapshot_state'
require 'daytona_api_client/models/ssh_access_dto'
require 'daytona_api_client/models/ssh_access_validation_dto'
require 'daytona_api_client/models/storage_access_dto'
require 'daytona_api_client/models/update_docker_registry'
require 'daytona_api_client/models/update_organization_invitation'
require 'daytona_api_client/models/update_organization_member_access'
require 'daytona_api_client/models/update_organization_quota'
require 'daytona_api_client/models/update_organization_role'
require 'daytona_api_client/models/user'
require 'daytona_api_client/models/user_public_key'
require 'daytona_api_client/models/volume_dto'
require 'daytona_api_client/models/volume_state'
require 'daytona_api_client/models/webhook_app_portal_access'
require 'daytona_api_client/models/webhook_controller_get_status200_response'
require 'daytona_api_client/models/webhook_initialization_status'
require 'daytona_api_client/models/windows_response'
require 'daytona_api_client/models/workspace'

# APIs
require 'daytona_api_client/api/api_keys_api'
require 'daytona_api_client/api/audit_api'
require 'daytona_api_client/api/docker_registry_api'
require 'daytona_api_client/api/health_api'
require 'daytona_api_client/api/object_storage_api'
require 'daytona_api_client/api/organizations_api'
require 'daytona_api_client/api/preview_api'
require 'daytona_api_client/api/runners_api'
require 'daytona_api_client/api/sandbox_api'
require 'daytona_api_client/api/snapshots_api'
require 'daytona_api_client/api/toolbox_api'
require 'daytona_api_client/api/users_api'
require 'daytona_api_client/api/volumes_api'
require 'daytona_api_client/api/webhooks_api'
require 'daytona_api_client/api/workspace_api'

module DaytonaApiClient
  class << self
    # Customize default settings for the SDK using block.
    #   DaytonaApiClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
