{
  "name": "api-client",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/api-client",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "@nx/js:tsc",
      "inputs": ["default", "{projectRoot}/package.json"],
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/libs/api-client",
        "tsConfig": "{projectRoot}/tsconfig.lib.json",
        "packageJson": "{projectRoot}/package.json",
        "main": "{projectRoot}/src/index.ts",
        "updateBuildableProjectDepsInPackageJson": true
      },
      "dependsOn": ["set-version"]
    },
    "generate:api-client": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "yarn run openapi-generator-cli generate --git-repo-id=daytona --git-user-id=daytonaio -i dist/apps/api/openapi.json -g typescript-axios --additional-properties=supportsES6=true,typescriptThreePlus=true,withSeparateModelsAndApi=true,apiPackage=api,modelPackage=models,useTags=true,enumPropertyNaming=UPPERCASE --type-mappings=DateTime=Date -o libs/api-client/src",
          "yarn nx format api-client"
        ],
        "parallel": false
      },
      "dependsOn": [
        {
          "target": "openapi",
          "projects": "api"
        }
      ]
    },
    "format": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cd {projectRoot} && prettier --write \"**/*.{ts,json}\" --config ../../.prettierrc"
      }
    },
    "set-version": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "if [ -n \"$NPM_PKG_VERSION\" ] || [ -n \"$DEFAULT_PACKAGE_VERSION\" ]; then VER=${NPM_PKG_VERSION:-$DEFAULT_PACKAGE_VERSION}; npm version \"$VER\" --allow-same-version && echo \"Changed version to $VER\"; else echo \"Using version from package.json\"; fi"
      }
    },
    "publish": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{workspaceRoot}/dist/libs/api-client",
        "command": "npm publish --tag $NPM_TAG --access public --registry https://registry.npmjs.org/ --//registry.npmjs.org/:_authToken=$NPM_TOKEN",
        "parallel": false
      },
      "dependsOn": ["build"]
    }
  },
  "tags": []
}
