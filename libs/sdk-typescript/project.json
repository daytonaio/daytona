{
  "name": "sdk-typescript",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "library",
  "sourceRoot": "libs/sdk-typescript",
  "targets": {
    "docs": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "npm run docs"
      }
    },
    "build": {
      "executor": "@nx/js:tsc",
      "inputs": ["default", "{projectRoot}/package.json"],
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/libs/sdk-typescript",
        "tsConfig": "{projectRoot}/tsconfig.lib.json",
        "packageJson": "{projectRoot}/package.json",
        "main": "{projectRoot}/src/index.ts",
        "updateBuildableProjectDepsInPackageJson": true,
        "assets": ["{projectRoot}/README.md"]
      },
      "dependsOn": [
        {
          "target": "build",
          "projects": ["api-client"]
        },
        "set-version"
      ]
    },
    "set-version": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "if [ -n \"$NPM_PKG_VERSION\" ] || [ -n \"$DEFAULT_PACKAGE_VERSION\" ]; then VER=${NPM_PKG_VERSION:-$DEFAULT_PACKAGE_VERSION}; npm version \"$VER\" --allow-same-version && echo \"Changed version to $VER\"; else echo \"Using version from package.json\"; fi"
      }
    },
    "publish": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{workspaceRoot}/dist/libs/sdk-typescript",
        "command": "npm publish --tag $NPM_TAG --access public --registry https://registry.npmjs.org/ --//registry.npmjs.org/:_authToken=$NPM_TOKEN",
        "parallel": false
      },
      "dependsOn": [
        "build",
        {
          "target": "publish",
          "projects": ["api-client"]
        }
      ]
    }
  }
}
