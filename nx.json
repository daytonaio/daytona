{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "namedInputs": {
    "default": ["{projectRoot}/**/*", "sharedGlobals"],
    "production": [
      "default",
      "!{projectRoot}/.eslintrc.json",
      "!{projectRoot}/eslint.config.mjs",
      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/jest.config.[jt]s",
      "!{projectRoot}/src/test-setup.[jt]s",
      "!{projectRoot}/test-setup.[jt]s"
    ],
    "sharedGlobals": [
      "{workspaceRoot}/.github/workflows/ci.yml",
      "{workspaceRoot}/go.work",
      "{workspaceRoot}/go.work.sum"
    ]
  },
  "neverConnectToCloud": true,
  "plugins": [
    {
      "plugin": "@nx/webpack/plugin",
      "options": {
        "buildTargetName": "build",
        "serveTargetName": "serve",
        "previewTargetName": "preview",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/eslint/plugin",
      "options": {
        "targetName": "lint"
      }
    },
    {
      "plugin": "@nx/jest/plugin",
      "options": {
        "targetName": "test"
      },
      "exclude": ["apps/daytona-e2e/**/*"]
    },
    {
      "plugin": "@nx/vite/plugin",
      "options": {
        "buildTargetName": "build",
        "testTargetName": "test",
        "serveTargetName": "serve",
        "devTargetName": "dev",
        "previewTargetName": "preview",
        "serveStaticTargetName": "serve-static",
        "typecheckTargetName": "typecheck",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/react/router-plugin",
      "options": {
        "buildTargetName": "build",
        "devTargetName": "dev",
        "startTargetName": "start",
        "watchDepsTargetName": "watch-deps",
        "buildDepsTargetName": "build-deps",
        "typecheckTargetName": "typecheck"
      }
    }
  ],
  "generators": {
    "@nx/react": {
      "application": {
        "babel": true,
        "style": "scss",
        "linter": "eslint",
        "bundler": "vite"
      },
      "component": {
        "style": "scss"
      },
      "library": {
        "style": "scss",
        "linter": "eslint"
      }
    }
  },
  "targetDefaults": {
    "@nx/webpack:webpack": {
      "cache": true
    },
    "@nx/js:swc": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"]
    },
    "@nx/js:tsc": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": ["production", "^production"]
    },
    "check-version-env": {
      "executor": "nx:run-commands",
      "options": {
        "command": "if [ -z \"$VERSION\" ]; then echo \"VERSION is not set\" && exit 1; else echo \"VERSION is set to: $VERSION\"; fi"
      }
    },
    "docker": {
      "executor": "@nx-tools/nx-container:build",
      "options": {
        "context": "{workspaceRoot}",
        "file": "{projectRoot}/Dockerfile",
        "tags": ["daytonaio/daytona-{projectName}:$VERSION$ARCH"],
        "build-args": ["VERSION=$VERSION"]
      },
      "configurations": {
        "production": {
          "push": true
        },
        "production-multi-platform": {
          "push": true,
          "platforms": ["linux/amd64", "linux/arm64"],
          "tags": ["daytonaio/daytona-{projectName}:$VERSION"]
        },
        "local-registry": {
          "push": true,
          "tags": [
            "registry:5000/daytonaio/daytona-{projectName}:$VERSION",
            "registry:5000/daytonaio/daytona-{projectName}:latest"
          ]
        }
      },
      "dependsOn": ["check-version-env"]
    },
    "push-manifest": {
      "executor": "nx:run-commands",
      "options": {
        "parallel": false,
        "commands": [
          "docker manifest create daytonaio/daytona-{projectName}:$VERSION daytonaio/daytona-{projectName}:$VERSION-amd64 daytonaio/daytona-{projectName}:$VERSION-arm64",
          "docker manifest push daytonaio/daytona-{projectName}:$VERSION",
          "docker manifest create daytonaio/daytona-{projectName}:latest daytonaio/daytona-{projectName}:$VERSION-amd64 daytonaio/daytona-{projectName}:$VERSION-arm64",
          "docker manifest push daytonaio/daytona-{projectName}:latest"
        ]
      }
    }
  },
  "release": {
    "projects": ["apps/*", "libs/*"],
    "changelog": {
      "workspaceChangelog": {
        "file": false,
        "createRelease": "github"
      }
    },
    "version": {
      "manifestRootsToUpdate": ["dist"],
      "conventionalCommits": true
    },
    "conventionalCommits": {
      "types": {
        "refactor": {
          "semverBump": "patch",
          "changelog": {
            "title": "Refactor"
          }
        },
        "chore": {
          "semverBump": "patch",
          "changelog": {
            "title": "Chores"
          }
        },
        "__INVALID__": {
          "semverBump": "patch",
          "changelog": {
            "title": "Uncategorized changes"
          }
        }
      }
    }
  }
}
