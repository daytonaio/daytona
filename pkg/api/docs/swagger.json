{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Daytona Server API",
        "title": "Daytona Server API",
        "contact": {},
        "version": "v0.0.0-dev"
    },
    "host": "localhost:3986",
    "basePath": "/",
    "paths": {
        "/apikey": {
            "get": {
                "description": "List API keys",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apiKey"
                ],
                "summary": "List API keys",
                "operationId": "ListClientApiKeys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiKey"
                            }
                        }
                    }
                }
            }
        },
        "/apikey/{apiKeyName}": {
            "post": {
                "description": "Generate an API key",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "apiKey"
                ],
                "summary": "Generate an API key",
                "operationId": "GenerateApiKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key name",
                        "name": "apiKeyName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Revoke API key",
                "tags": [
                    "apiKey"
                ],
                "summary": "Revoke API key",
                "operationId": "RevokeApiKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API key name",
                        "name": "apiKeyName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/build": {
            "get": {
                "description": "List builds",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build"
                ],
                "summary": "List builds",
                "operationId": "ListBuilds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a build",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "build"
                ],
                "summary": "Create a build",
                "operationId": "CreateBuild",
                "parameters": [
                    {
                        "description": "Create Build DTO",
                        "name": "createBuildDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateBuildDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete ALL builds",
                "tags": [
                    "build"
                ],
                "summary": "Delete ALL builds",
                "operationId": "DeleteAllBuilds",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Force",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/build/prebuild/{prebuildId}": {
            "delete": {
                "description": "Delete builds",
                "tags": [
                    "build"
                ],
                "summary": "Delete builds",
                "operationId": "DeleteBuildsFromPrebuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prebuild ID",
                        "name": "prebuildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/build/successful/{repoUrl}": {
            "get": {
                "description": "List successful builds for Git repository",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "build"
                ],
                "summary": "List successful builds for Git repository",
                "operationId": "ListSuccessfulBuilds",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository URL",
                        "name": "repoUrl",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BuildDTO"
                            }
                        }
                    }
                }
            }
        },
        "/build/{buildId}": {
            "get": {
                "description": "Get build data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "build"
                ],
                "summary": "Get build data",
                "operationId": "GetBuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Build ID",
                        "name": "buildId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BuildDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete build",
                "tags": [
                    "build"
                ],
                "summary": "Delete build",
                "operationId": "DeleteBuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Build ID",
                        "name": "buildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/container-registry/{server}": {
            "get": {
                "description": "Get container registry",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "container registry"
                ],
                "summary": "Get container registry",
                "operationId": "GetContainerRegistry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Container registry server",
                        "name": "server",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Workspace ID or Name",
                        "name": "workspaceId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContainerRegistry"
                        }
                    }
                }
            }
        },
        "/env": {
            "get": {
                "description": "List environment variables",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "envVar"
                ],
                "summary": "List environment variables",
                "operationId": "ListEnvironmentVariables",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnvironmentVariable"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Set environment variable",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "envVar"
                ],
                "summary": "Set environment variable",
                "operationId": "SetEnvironmentVariable",
                "parameters": [
                    {
                        "description": "Environment Variable",
                        "name": "environmentVariable",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVariable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/env/{key}": {
            "delete": {
                "description": "Delete environment variable",
                "tags": [
                    "envVar"
                ],
                "summary": "Delete environment variable",
                "operationId": "DeleteEnvironmentVariable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Environment Variable Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/gitprovider": {
            "get": {
                "description": "List Git providers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "List Git providers",
                "operationId": "ListGitProviders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GitProvider"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Set Git provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Set Git provider",
                "operationId": "SetGitProvider",
                "parameters": [
                    {
                        "description": "Git provider",
                        "name": "gitProviderConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SetGitProviderConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/gitprovider/context": {
            "post": {
                "description": "Get Git context",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git context",
                "operationId": "GetGitContext",
                "parameters": [
                    {
                        "description": "Get repository context",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetRepositoryContext"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GitRepository"
                        }
                    }
                }
            }
        },
        "/gitprovider/context/url": {
            "post": {
                "description": "Get URL from Git repository",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get URL from Git repository",
                "operationId": "GetUrlFromRepository",
                "parameters": [
                    {
                        "description": "Git repository",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GitRepository"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RepositoryUrl"
                        }
                    }
                }
            }
        },
        "/gitprovider/for-url/{url}": {
            "get": {
                "description": "List Git providers for url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "List Git providers for url",
                "operationId": "ListGitProvidersForUrl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GitProvider"
                            }
                        }
                    }
                }
            }
        },
        "/gitprovider/id-for-url/{url}": {
            "get": {
                "description": "Get Git provider ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git provider ID",
                "operationId": "GetGitProviderIdForUrl",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Url",
                        "name": "url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/gitprovider/{gitProviderId}": {
            "get": {
                "description": "Get Git provider",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git provider",
                "operationId": "GetGitProvider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "gitProviderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GitProvider"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove Git provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Remove Git provider",
                "operationId": "RemoveGitProvider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git provider",
                        "name": "gitProviderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/gitprovider/{gitProviderId}/namespaces": {
            "get": {
                "description": "Get Git namespaces",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git namespaces",
                "operationId": "GetNamespaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git provider",
                        "name": "gitProviderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GitNamespace"
                            }
                        }
                    }
                }
            }
        },
        "/gitprovider/{gitProviderId}/user": {
            "get": {
                "description": "Get Git context",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git context",
                "operationId": "GetGitUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git Provider Id",
                        "name": "gitProviderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GitUser"
                        }
                    }
                }
            }
        },
        "/gitprovider/{gitProviderId}/{namespaceId}/repositories": {
            "get": {
                "description": "Get Git repositories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git repositories",
                "operationId": "GetRepositories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git provider",
                        "name": "gitProviderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GitRepository"
                            }
                        }
                    }
                }
            }
        },
        "/gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/branches": {
            "get": {
                "description": "Get Git repository branches",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git repository branches",
                "operationId": "GetRepoBranches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git provider",
                        "name": "gitProviderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository",
                        "name": "repositoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GitBranch"
                            }
                        }
                    }
                }
            }
        },
        "/gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/pull-requests": {
            "get": {
                "description": "Get Git repository PRs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gitProvider"
                ],
                "summary": "Get Git repository PRs",
                "operationId": "GetRepoPRs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git provider",
                        "name": "gitProviderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Repository",
                        "name": "repositoryId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GitPullRequest"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Health check",
                "produces": [
                    "application/json"
                ],
                "summary": "Health check",
                "operationId": "HealthCheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/job": {
            "get": {
                "description": "List jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "List jobs",
                "operationId": "ListJobs",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Job States",
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Job Actions",
                        "name": "actions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "resourceId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Resource Type",
                        "name": "resourceType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Job"
                            }
                        }
                    }
                }
            }
        },
        "/runner": {
            "get": {
                "description": "List runners",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runner"
                ],
                "summary": "List runners",
                "operationId": "ListRunners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RunnerDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Register a runner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runner"
                ],
                "summary": "Register a runner",
                "operationId": "RegisterRunner",
                "parameters": [
                    {
                        "description": "Register runner",
                        "name": "runner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegisterRunnerDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RegisterRunnerResultDTO"
                        }
                    }
                }
            }
        },
        "/runner/provider": {
            "get": {
                "description": "List providers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provider"
                ],
                "summary": "List providers",
                "operationId": "ListProviders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProviderInfo"
                            }
                        }
                    }
                }
            }
        },
        "/runner/{runnerId}": {
            "get": {
                "description": "Get a runner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runner"
                ],
                "summary": "Get a runner",
                "operationId": "GetRunner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RunnerDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove runner",
                "tags": [
                    "runner"
                ],
                "summary": "Remove runner",
                "operationId": "RemoveRunner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runner/{runnerId}/jobs": {
            "get": {
                "description": "List runner jobs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runner"
                ],
                "summary": "List runner jobs",
                "operationId": "ListRunnerJobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Job"
                            }
                        }
                    }
                }
            }
        },
        "/runner/{runnerId}/jobs/{jobId}/state": {
            "post": {
                "description": "Update job state",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runner"
                ],
                "summary": "Update job state",
                "operationId": "UpdateJobState",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update job state",
                        "name": "updateJobState",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateJobState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runner/{runnerId}/metadata": {
            "post": {
                "description": "Set runner metadata",
                "tags": [
                    "runner"
                ],
                "summary": "Set runner metadata",
                "operationId": "SetRunnerMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Runner Metadata",
                        "name": "runnerMetadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRunnerMetadataDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runner/{runnerId}/provider/install": {
            "post": {
                "description": "Install provider",
                "tags": [
                    "provider"
                ],
                "summary": "Install provider",
                "operationId": "InstallProvider",
                "parameters": [
                    {
                        "description": "Install provider",
                        "name": "installProviderDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InstallProviderDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runner/{runnerId}/provider/{providerName}/uninstall": {
            "post": {
                "description": "Uninstall provider",
                "tags": [
                    "provider"
                ],
                "summary": "Uninstall provider",
                "operationId": "UninstallProvider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "providerName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/runner/{runnerId}/provider/{providerName}/update": {
            "post": {
                "description": "Update provider",
                "tags": [
                    "provider"
                ],
                "summary": "Update provider",
                "operationId": "UpdateProvider",
                "parameters": [
                    {
                        "description": "Provider download URLs",
                        "name": "downloadUrls",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadUrls"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "runnerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "providerName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/sample": {
            "get": {
                "description": "List samples",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sample"
                ],
                "summary": "List samples",
                "operationId": "ListSamples",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Sample"
                            }
                        }
                    }
                }
            }
        },
        "/server/config": {
            "get": {
                "description": "Get the server configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "Get the server configuration",
                "operationId": "GetConfig",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerConfig"
                        }
                    }
                }
            },
            "post": {
                "description": "Set the server configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "Set the server configuration",
                "operationId": "SetConfig",
                "parameters": [
                    {
                        "description": "Server configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServerConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ServerConfig"
                        }
                    }
                }
            }
        },
        "/server/logs": {
            "get": {
                "description": "List server log files",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "List server log files",
                "operationId": "GetServerLogFiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/server/network-key": {
            "post": {
                "description": "Generate a new authentication key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "Generate a new authentication key",
                "operationId": "GenerateNetworkKey",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/NetworkKey"
                        }
                    }
                }
            }
        },
        "/target": {
            "get": {
                "description": "List targets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "target"
                ],
                "summary": "List targets",
                "operationId": "ListTargets",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Show target config options",
                        "name": "showOptions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TargetDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a target",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "target"
                ],
                "summary": "Create a target",
                "operationId": "CreateTarget",
                "parameters": [
                    {
                        "description": "Create target",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTargetDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Target"
                        }
                    }
                }
            }
        },
        "/target-config": {
            "get": {
                "description": "List target configs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "target-config"
                ],
                "summary": "List target configs",
                "operationId": "ListTargetConfigs",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Show target config options",
                        "name": "showOptions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TargetConfig"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Add a target config",
                "tags": [
                    "target-config"
                ],
                "summary": "Add a target config",
                "operationId": "AddTargetConfig",
                "parameters": [
                    {
                        "description": "Target config to add",
                        "name": "targetConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddTargetConfigDTO"
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "Show target config options",
                        "name": "showOptions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TargetConfig"
                        }
                    }
                }
            }
        },
        "/target-config/{configId}": {
            "delete": {
                "description": "Remove a target config",
                "tags": [
                    "target-config"
                ],
                "summary": "Remove a target config",
                "operationId": "RemoveTargetConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target Config Id",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/target/{targetId}": {
            "get": {
                "description": "Get target info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "target"
                ],
                "summary": "Get target info",
                "operationId": "GetTarget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID or Name",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Show target config options",
                        "name": "showOptions",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TargetDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove target",
                "tags": [
                    "target"
                ],
                "summary": "Remove target",
                "operationId": "RemoveTarget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/target/{targetId}/handle-successful-creation": {
            "post": {
                "description": "Handles successful creation of the target",
                "tags": [
                    "target"
                ],
                "summary": "Handles successful creation of the target",
                "operationId": "HandleSuccessfulCreation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID or name",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/target/{targetId}/metadata": {
            "post": {
                "description": "Set target metadata",
                "tags": [
                    "target"
                ],
                "summary": "Set target metadata",
                "operationId": "SetTargetMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Target Metadata",
                        "name": "targetMetadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTargetMetadataDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/target/{targetId}/provider-metadata": {
            "post": {
                "description": "Update target provider metadata",
                "tags": [
                    "target"
                ],
                "summary": "Update target provider metadata",
                "operationId": "UpdateTargetProviderMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provider metadata",
                        "name": "metadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTargetProviderMetadataDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/target/{targetId}/set-default": {
            "patch": {
                "description": "Set target to be used by default",
                "tags": [
                    "target"
                ],
                "summary": "Set target to be used by default",
                "operationId": "SetDefaultTarget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID or name",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/target/{targetId}/start": {
            "post": {
                "description": "Start target",
                "tags": [
                    "target"
                ],
                "summary": "Start target",
                "operationId": "StartTarget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID or Name",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/target/{targetId}/stop": {
            "post": {
                "description": "Stop target",
                "tags": [
                    "target"
                ],
                "summary": "Stop target",
                "operationId": "StopTarget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target ID or Name",
                        "name": "targetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace": {
            "get": {
                "description": "List workspaces",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "List workspaces",
                "operationId": "ListWorkspaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkspaceDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a workspace",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Create a workspace",
                "operationId": "CreateWorkspace",
                "parameters": [
                    {
                        "description": "Create workspace",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWorkspaceDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceDTO"
                        }
                    }
                }
            }
        },
        "/workspace-template": {
            "get": {
                "description": "List workspace templates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace-template"
                ],
                "summary": "List workspace templates",
                "operationId": "ListWorkspaceTemplates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkspaceTemplate"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Set workspace template data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "workspace-template"
                ],
                "summary": "Set workspace template data",
                "operationId": "SetWorkspaceTemplate",
                "parameters": [
                    {
                        "description": "Workspace template",
                        "name": "workspaceTemplate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWorkspaceTemplateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/workspace-template/default/{gitUrl}": {
            "get": {
                "description": "Get workspace templates by git url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace-template"
                ],
                "summary": "Get workspace templates by git url",
                "operationId": "GetDefaultWorkspaceTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git URL",
                        "name": "gitUrl",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceTemplate"
                        }
                    }
                }
            }
        },
        "/workspace-template/prebuild": {
            "get": {
                "description": "List prebuilds",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "prebuild"
                ],
                "summary": "List prebuilds",
                "operationId": "ListPrebuilds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrebuildDTO"
                            }
                        }
                    }
                }
            }
        },
        "/workspace-template/prebuild/process-git-event": {
            "post": {
                "description": "ProcessGitEvent",
                "tags": [
                    "prebuild"
                ],
                "summary": "ProcessGitEvent",
                "operationId": "ProcessGitEvent",
                "parameters": [
                    {
                        "description": "Webhook event",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace-template/{templateName}": {
            "get": {
                "description": "Get workspace template data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "workspace-template"
                ],
                "summary": "Get workspace template data",
                "operationId": "GetWorkspaceTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "templateName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceTemplate"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete workspace template data",
                "tags": [
                    "workspace-template"
                ],
                "summary": "Delete workspace template data",
                "operationId": "DeleteWorkspaceTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "templateName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/workspace-template/{templateName}/prebuild": {
            "get": {
                "description": "List prebuilds for workspace template",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "prebuild"
                ],
                "summary": "List prebuilds for workspace template",
                "operationId": "ListPrebuildsForWorkspaceTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "templateName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrebuildDTO"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Set prebuild",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "prebuild"
                ],
                "summary": "Set prebuild",
                "operationId": "SetPrebuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "templateName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prebuild",
                        "name": "prebuild",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePrebuildDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/workspace-template/{templateName}/prebuild/{prebuildId}": {
            "get": {
                "description": "Get prebuild",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "prebuild"
                ],
                "summary": "Get prebuild",
                "operationId": "GetPrebuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace template name",
                        "name": "templateName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Prebuild ID",
                        "name": "prebuildId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PrebuildDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete prebuild",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "prebuild"
                ],
                "summary": "Delete prebuild",
                "operationId": "DeletePrebuild",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace template name",
                        "name": "templateName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Prebuild ID",
                        "name": "prebuildId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/workspace-template/{templateName}/set-default": {
            "patch": {
                "description": "Set workspace template to default",
                "tags": [
                    "workspace-template"
                ],
                "summary": "Set workspace template to default",
                "operationId": "SetDefaultWorkspaceTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template name",
                        "name": "templateName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/{workspaceId}": {
            "get": {
                "description": "Get workspace info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspace"
                ],
                "summary": "Get workspace info",
                "operationId": "GetWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID or Name",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove workspace",
                "tags": [
                    "workspace"
                ],
                "summary": "Remove workspace",
                "operationId": "RemoveWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Force",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/{workspaceId}/metadata": {
            "post": {
                "description": "Set workspace metadata",
                "tags": [
                    "workspace"
                ],
                "summary": "Set workspace metadata",
                "operationId": "SetWorkspaceMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Workspace Metadata",
                        "name": "workspaceMetadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateWorkspaceMetadataDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/{workspaceId}/provider-metadata": {
            "post": {
                "description": "Update workspace provider metadata",
                "tags": [
                    "workspace"
                ],
                "summary": "Update workspace provider metadata",
                "operationId": "UpdateWorkspaceProviderMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provider metadata",
                        "name": "metadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateWorkspaceProviderMetadataDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/{workspaceId}/start": {
            "post": {
                "description": "Start workspace",
                "tags": [
                    "workspace"
                ],
                "summary": "Start workspace",
                "operationId": "StartWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID or Name",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workspace/{workspaceId}/stop": {
            "post": {
                "description": "Stop workspace",
                "tags": [
                    "workspace"
                ],
                "summary": "Stop workspace",
                "operationId": "StopWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID or Name",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "AddTargetConfigDTO": {
            "type": "object",
            "required": [
                "name",
                "options",
                "providerInfo"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                },
                "providerInfo": {
                    "$ref": "#/definitions/ProviderInfo"
                }
            }
        },
        "ApiKey": {
            "type": "object",
            "required": [
                "keyHash",
                "name",
                "type"
            ],
            "properties": {
                "keyHash": {
                    "type": "string"
                },
                "name": {
                    "description": "Workspace or client name",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ApiKeyType"
                }
            }
        },
        "BuildConfig": {
            "type": "object",
            "properties": {
                "cachedBuild": {
                    "$ref": "#/definitions/CachedBuild"
                },
                "devcontainer": {
                    "$ref": "#/definitions/DevcontainerConfig"
                }
            }
        },
        "BuildDTO": {
            "type": "object",
            "required": [
                "containerConfig",
                "createdAt",
                "envVars",
                "id",
                "prebuildId",
                "repository",
                "state",
                "updatedAt"
            ],
            "properties": {
                "buildConfig": {
                    "$ref": "#/definitions/BuildConfig"
                },
                "containerConfig": {
                    "$ref": "#/definitions/ContainerConfig"
                },
                "createdAt": {
                    "type": "string"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lastJob": {
                    "$ref": "#/definitions/Job"
                },
                "prebuildId": {
                    "type": "string"
                },
                "repository": {
                    "$ref": "#/definitions/GitRepository"
                },
                "state": {
                    "$ref": "#/definitions/ResourceState"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "CachedBuild": {
            "type": "object",
            "required": [
                "image",
                "user"
            ],
            "properties": {
                "image": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "CloneTarget": {
            "type": "string",
            "enum": [
                "branch",
                "commit"
            ],
            "x-enum-varnames": [
                "CloneTargetBranch",
                "CloneTargetCommit"
            ]
        },
        "ContainerConfig": {
            "type": "object",
            "required": [
                "image",
                "user"
            ],
            "properties": {
                "image": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "ContainerRegistry": {
            "type": "object",
            "required": [
                "password",
                "server",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "CreateBuildDTO": {
            "type": "object",
            "required": [
                "branch",
                "envVars",
                "workspaceTemplateName"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "prebuildId": {
                    "type": "string"
                },
                "workspaceTemplateName": {
                    "type": "string"
                }
            }
        },
        "CreatePrebuildDTO": {
            "type": "object",
            "required": [
                "retention"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "commitInterval": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "retention": {
                    "type": "integer"
                },
                "triggerFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "CreateTargetDTO": {
            "type": "object",
            "required": [
                "id",
                "name",
                "targetConfigName"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "targetConfigName": {
                    "type": "string"
                }
            }
        },
        "CreateWorkspaceDTO": {
            "type": "object",
            "required": [
                "envVars",
                "id",
                "name",
                "source",
                "targetId"
            ],
            "properties": {
                "buildConfig": {
                    "$ref": "#/definitions/BuildConfig"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "gitProviderConfigId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/CreateWorkspaceSourceDTO"
                },
                "targetId": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "CreateWorkspaceSourceDTO": {
            "type": "object",
            "required": [
                "repository"
            ],
            "properties": {
                "repository": {
                    "$ref": "#/definitions/GitRepository"
                }
            }
        },
        "CreateWorkspaceTemplateDTO": {
            "type": "object",
            "required": [
                "envVars",
                "name",
                "repositoryUrl"
            ],
            "properties": {
                "buildConfig": {
                    "$ref": "#/definitions/BuildConfig"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "gitProviderConfigId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repositoryUrl": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "DevcontainerConfig": {
            "type": "object",
            "required": [
                "filePath"
            ],
            "properties": {
                "filePath": {
                    "type": "string"
                }
            }
        },
        "DownloadUrls": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "EnvironmentVariable": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "FRPSConfig": {
            "type": "object",
            "required": [
                "domain",
                "port",
                "protocol"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "FileStatus": {
            "type": "object",
            "required": [
                "extra",
                "name",
                "staging",
                "worktree"
            ],
            "properties": {
                "extra": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "staging": {
                    "$ref": "#/definitions/Status"
                },
                "worktree": {
                    "$ref": "#/definitions/Status"
                }
            }
        },
        "GetRepositoryContext": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "prNumber": {
                    "type": "integer"
                },
                "sha": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "GitBranch": {
            "type": "object",
            "required": [
                "name",
                "sha"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                }
            }
        },
        "GitNamespace": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "GitProvider": {
            "type": "object",
            "required": [
                "alias",
                "id",
                "providerId",
                "token",
                "username"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "baseApiUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "providerId": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "signingMethod": {
                    "$ref": "#/definitions/SigningMethod"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "GitPullRequest": {
            "type": "object",
            "required": [
                "branch",
                "name",
                "sha",
                "sourceRepoId",
                "sourceRepoName",
                "sourceRepoOwner",
                "sourceRepoUrl"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                },
                "sourceRepoId": {
                    "type": "string"
                },
                "sourceRepoName": {
                    "type": "string"
                },
                "sourceRepoOwner": {
                    "type": "string"
                },
                "sourceRepoUrl": {
                    "type": "string"
                }
            }
        },
        "GitRepository": {
            "type": "object",
            "required": [
                "branch",
                "id",
                "name",
                "owner",
                "sha",
                "source",
                "url"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "cloneTarget": {
                    "$ref": "#/definitions/CloneTarget"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "prNumber": {
                    "type": "integer"
                },
                "sha": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "GitStatus": {
            "type": "object",
            "required": [
                "currentBranch",
                "fileStatus"
            ],
            "properties": {
                "ahead": {
                    "type": "integer"
                },
                "behind": {
                    "type": "integer"
                },
                "branchPublished": {
                    "type": "boolean"
                },
                "currentBranch": {
                    "type": "string"
                },
                "fileStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileStatus"
                    }
                }
            }
        },
        "GitUser": {
            "type": "object",
            "required": [
                "email",
                "id",
                "name",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "InstallProviderDTO": {
            "type": "object",
            "required": [
                "downloadUrls",
                "name"
            ],
            "properties": {
                "downloadUrls": {
                    "$ref": "#/definitions/DownloadUrls"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Job": {
            "type": "object",
            "required": [
                "action",
                "createdAt",
                "id",
                "resourceId",
                "resourceType",
                "state",
                "updatedAt"
            ],
            "properties": {
                "action": {
                    "$ref": "#/definitions/models.JobAction"
                },
                "createdAt": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "description": "JSON encoded metadata",
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "$ref": "#/definitions/ResourceType"
                },
                "runnerId": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/JobState"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "JobState": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "error",
                "success"
            ],
            "x-enum-varnames": [
                "JobStatePending",
                "JobStateRunning",
                "JobStateError",
                "JobStateSuccess"
            ]
        },
        "LogFileConfig": {
            "type": "object",
            "required": [
                "maxAge",
                "maxBackups",
                "maxSize",
                "path"
            ],
            "properties": {
                "compress": {
                    "type": "boolean"
                },
                "localTime": {
                    "type": "boolean"
                },
                "maxAge": {
                    "type": "integer"
                },
                "maxBackups": {
                    "type": "integer"
                },
                "maxSize": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "NetworkKey": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "PrebuildConfig": {
            "type": "object",
            "required": [
                "branch",
                "id",
                "retention",
                "triggerFiles"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "commitInterval": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "retention": {
                    "type": "integer"
                },
                "triggerFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PrebuildDTO": {
            "type": "object",
            "required": [
                "branch",
                "id",
                "retention",
                "workspaceTemplateName"
            ],
            "properties": {
                "branch": {
                    "type": "string"
                },
                "commitInterval": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "retention": {
                    "type": "integer"
                },
                "triggerFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workspaceTemplateName": {
                    "type": "string"
                }
            }
        },
        "ProviderInfo": {
            "type": "object",
            "required": [
                "name",
                "runnerId",
                "runnerName",
                "targetConfigManifest",
                "version"
            ],
            "properties": {
                "agentlessTarget": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "runnerId": {
                    "type": "string"
                },
                "runnerName": {
                    "type": "string"
                },
                "targetConfigManifest": {
                    "$ref": "#/definitions/TargetConfigManifest"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "RegisterRunnerDTO": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "RegisterRunnerResultDTO": {
            "type": "object",
            "required": [
                "apiKey",
                "id",
                "name"
            ],
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/RunnerMetadata"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "RepositoryUrl": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "ResourceState": {
            "type": "object",
            "required": [
                "name",
                "updatedAt"
            ],
            "properties": {
                "error": {
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/models.ResourceStateName"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "ResourceType": {
            "type": "string",
            "enum": [
                "workspace",
                "target",
                "build",
                "runner"
            ],
            "x-enum-varnames": [
                "ResourceTypeWorkspace",
                "ResourceTypeTarget",
                "ResourceTypeBuild",
                "ResourceTypeRunner"
            ]
        },
        "RunnerDTO": {
            "type": "object",
            "required": [
                "id",
                "name",
                "state"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/RunnerMetadata"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/ResourceState"
                }
            }
        },
        "RunnerMetadata": {
            "type": "object",
            "required": [
                "providers",
                "runnerId",
                "updatedAt",
                "uptime"
            ],
            "properties": {
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProviderInfo"
                    }
                },
                "runnerId": {
                    "type": "string"
                },
                "runningJobs": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "Sample": {
            "type": "object",
            "required": [
                "description",
                "gitUrl",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "gitUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ServerConfig": {
            "type": "object",
            "required": [
                "apiPort",
                "binariesPath",
                "builderImage",
                "builderRegistryServer",
                "defaultWorkspaceImage",
                "defaultWorkspaceUser",
                "headscalePort",
                "id",
                "localBuilderRegistryImage",
                "localBuilderRegistryPort",
                "logFile",
                "registryUrl",
                "serverDownloadUrl"
            ],
            "properties": {
                "apiPort": {
                    "type": "integer"
                },
                "binariesPath": {
                    "type": "string"
                },
                "buildImageNamespace": {
                    "type": "string"
                },
                "builderImage": {
                    "type": "string"
                },
                "builderRegistryServer": {
                    "type": "string"
                },
                "defaultWorkspaceImage": {
                    "type": "string"
                },
                "defaultWorkspaceUser": {
                    "type": "string"
                },
                "frps": {
                    "$ref": "#/definitions/FRPSConfig"
                },
                "headscalePort": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "localBuilderRegistryImage": {
                    "type": "string"
                },
                "localBuilderRegistryPort": {
                    "type": "integer"
                },
                "localRunnerDisabled": {
                    "type": "boolean"
                },
                "logFile": {
                    "$ref": "#/definitions/LogFileConfig"
                },
                "registryUrl": {
                    "type": "string"
                },
                "samplesIndexUrl": {
                    "type": "string"
                },
                "serverDownloadUrl": {
                    "type": "string"
                }
            }
        },
        "SetGitProviderConfig": {
            "type": "object",
            "required": [
                "providerId",
                "token"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "baseApiUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "providerId": {
                    "type": "string"
                },
                "signingKey": {
                    "type": "string"
                },
                "signingMethod": {
                    "$ref": "#/definitions/SigningMethod"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "SigningMethod": {
            "type": "string",
            "enum": [
                "ssh",
                "gpg"
            ],
            "x-enum-varnames": [
                "SigningMethodSSH",
                "SigningMethodGPG"
            ]
        },
        "Status": {
            "type": "string",
            "enum": [
                "Unmodified",
                "Untracked",
                "Modified",
                "Added",
                "Deleted",
                "Renamed",
                "Copied",
                "Updated but unmerged"
            ],
            "x-enum-varnames": [
                "Unmodified",
                "Untracked",
                "Modified",
                "Added",
                "Deleted",
                "Renamed",
                "Copied",
                "UpdatedButUnmerged"
            ]
        },
        "Target": {
            "type": "object",
            "required": [
                "default",
                "envVars",
                "id",
                "name",
                "targetConfig",
                "targetConfigId",
                "workspaces"
            ],
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "lastJob": {
                    "$ref": "#/definitions/Job"
                },
                "metadata": {
                    "$ref": "#/definitions/TargetMetadata"
                },
                "name": {
                    "type": "string"
                },
                "providerMetadata": {
                    "type": "string"
                },
                "targetConfig": {
                    "$ref": "#/definitions/TargetConfig"
                },
                "targetConfigId": {
                    "type": "string"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Workspace"
                    }
                }
            }
        },
        "TargetConfig": {
            "type": "object",
            "required": [
                "deleted",
                "id",
                "name",
                "options",
                "providerInfo"
            ],
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "description": "JSON encoded map of options",
                    "type": "string"
                },
                "providerInfo": {
                    "$ref": "#/definitions/ProviderInfo"
                }
            }
        },
        "TargetConfigManifest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/TargetConfigProperty"
            }
        },
        "TargetConfigProperty": {
            "type": "object",
            "properties": {
                "defaultValue": {
                    "description": "DefaultValue is converted into the appropriate type based on the Type\nIf the property is a FilePath, the DefaultValue is a path to a directory",
                    "type": "string"
                },
                "description": {
                    "description": "Brief description of the property",
                    "type": "string"
                },
                "disabledPredicate": {
                    "description": "A regex string matched with the name of the target config to determine if the property should be disabled\nIf the regex matches the target config name, the property will be disabled\nE.g. \"^local$\" will disable the property for the local target",
                    "type": "string"
                },
                "inputMasked": {
                    "type": "boolean"
                },
                "options": {
                    "description": "Options is only used if the Type is TargetConfigPropertyTypeOption",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "suggestions": {
                    "description": "Suggestions is an optional list of auto-complete values to assist the user while filling the field",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/models.TargetConfigPropertyType"
                }
            }
        },
        "TargetDTO": {
            "type": "object",
            "required": [
                "default",
                "envVars",
                "id",
                "name",
                "state",
                "targetConfig",
                "targetConfigId",
                "workspaces"
            ],
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "lastJob": {
                    "$ref": "#/definitions/Job"
                },
                "metadata": {
                    "$ref": "#/definitions/TargetMetadata"
                },
                "name": {
                    "type": "string"
                },
                "providerMetadata": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/ResourceState"
                },
                "targetConfig": {
                    "$ref": "#/definitions/TargetConfig"
                },
                "targetConfigId": {
                    "type": "string"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Workspace"
                    }
                }
            }
        },
        "TargetMetadata": {
            "type": "object",
            "required": [
                "targetId",
                "updatedAt",
                "uptime"
            ],
            "properties": {
                "targetId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "UpdateJobState": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "errorMessage": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/JobState"
                }
            }
        },
        "UpdateRunnerMetadataDTO": {
            "type": "object",
            "required": [
                "providers",
                "uptime"
            ],
            "properties": {
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProviderInfo"
                    }
                },
                "runningJobs": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "UpdateTargetMetadataDTO": {
            "type": "object",
            "required": [
                "uptime"
            ],
            "properties": {
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "UpdateTargetProviderMetadataDTO": {
            "type": "object",
            "required": [
                "metadata"
            ],
            "properties": {
                "metadata": {
                    "type": "string"
                }
            }
        },
        "UpdateWorkspaceMetadataDTO": {
            "type": "object",
            "required": [
                "uptime"
            ],
            "properties": {
                "gitStatus": {
                    "$ref": "#/definitions/GitStatus"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "UpdateWorkspaceProviderMetadataDTO": {
            "type": "object",
            "required": [
                "metadata"
            ],
            "properties": {
                "metadata": {
                    "type": "string"
                }
            }
        },
        "Workspace": {
            "type": "object",
            "required": [
                "apiKey",
                "envVars",
                "id",
                "image",
                "name",
                "repository",
                "target",
                "targetId",
                "user"
            ],
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "buildConfig": {
                    "$ref": "#/definitions/BuildConfig"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "gitProviderConfigId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lastJob": {
                    "$ref": "#/definitions/Job"
                },
                "metadata": {
                    "$ref": "#/definitions/WorkspaceMetadata"
                },
                "name": {
                    "type": "string"
                },
                "providerMetadata": {
                    "type": "string"
                },
                "repository": {
                    "$ref": "#/definitions/GitRepository"
                },
                "target": {
                    "$ref": "#/definitions/Target"
                },
                "targetId": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "WorkspaceDTO": {
            "type": "object",
            "required": [
                "apiKey",
                "envVars",
                "id",
                "image",
                "name",
                "repository",
                "state",
                "target",
                "targetId",
                "user"
            ],
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "buildConfig": {
                    "$ref": "#/definitions/BuildConfig"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "gitProviderConfigId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lastJob": {
                    "$ref": "#/definitions/Job"
                },
                "metadata": {
                    "$ref": "#/definitions/WorkspaceMetadata"
                },
                "name": {
                    "type": "string"
                },
                "providerMetadata": {
                    "type": "string"
                },
                "repository": {
                    "$ref": "#/definitions/GitRepository"
                },
                "state": {
                    "$ref": "#/definitions/ResourceState"
                },
                "target": {
                    "$ref": "#/definitions/Target"
                },
                "targetId": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "WorkspaceMetadata": {
            "type": "object",
            "required": [
                "gitStatus",
                "updatedAt",
                "uptime",
                "workspaceId"
            ],
            "properties": {
                "gitStatus": {
                    "$ref": "#/definitions/GitStatus"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                },
                "workspaceId": {
                    "type": "string"
                }
            }
        },
        "WorkspaceTemplate": {
            "type": "object",
            "required": [
                "default",
                "envVars",
                "image",
                "name",
                "repositoryUrl",
                "user"
            ],
            "properties": {
                "buildConfig": {
                    "$ref": "#/definitions/BuildConfig"
                },
                "default": {
                    "type": "boolean"
                },
                "envVars": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "gitProviderConfigId": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prebuilds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PrebuildConfig"
                    }
                },
                "repositoryUrl": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "models.ApiKeyType": {
            "type": "string",
            "enum": [
                "client",
                "workspace",
                "target",
                "runner"
            ],
            "x-enum-varnames": [
                "ApiKeyTypeClient",
                "ApiKeyTypeWorkspace",
                "ApiKeyTypeTarget",
                "ApiKeyTypeRunner"
            ]
        },
        "models.JobAction": {
            "type": "string",
            "enum": [
                "create",
                "start",
                "stop",
                "restart",
                "delete",
                "force-delete",
                "run",
                "install-provider",
                "uninstall-provider",
                "update-provider"
            ],
            "x-enum-varnames": [
                "JobActionCreate",
                "JobActionStart",
                "JobActionStop",
                "JobActionRestart",
                "JobActionDelete",
                "JobActionForceDelete",
                "JobActionRun",
                "JobActionInstallProvider",
                "JobActionUninstallProvider",
                "JobActionUpdateProvider"
            ]
        },
        "models.ResourceStateName": {
            "type": "string",
            "enum": [
                "undefined",
                "pending-run",
                "running",
                "run-successful",
                "pending-create",
                "creating",
                "pending-start",
                "starting",
                "started",
                "pending-stop",
                "stopping",
                "stopped",
                "pending-restart",
                "error",
                "unresponsive",
                "pending-delete",
                "pending-forced-delete",
                "deleting",
                "deleted"
            ],
            "x-enum-varnames": [
                "ResourceStateNameUndefined",
                "ResourceStateNamePendingRun",
                "ResourceStateNameRunning",
                "ResourceStateNameRunSuccessful",
                "ResourceStateNamePendingCreate",
                "ResourceStateNameCreating",
                "ResourceStateNamePendingStart",
                "ResourceStateNameStarting",
                "ResourceStateNameStarted",
                "ResourceStateNamePendingStop",
                "ResourceStateNameStopping",
                "ResourceStateNameStopped",
                "ResourceStateNamePendingRestart",
                "ResourceStateNameError",
                "ResourceStateNameUnresponsive",
                "ResourceStateNamePendingDelete",
                "ResourceStateNamePendingForcedDelete",
                "ResourceStateNameDeleting",
                "ResourceStateNameDeleted"
            ]
        },
        "models.TargetConfigPropertyType": {
            "type": "string",
            "enum": [
                "string",
                "option",
                "boolean",
                "int",
                "float",
                "file-path"
            ],
            "x-enum-varnames": [
                "TargetConfigPropertyTypeString",
                "TargetConfigPropertyTypeOption",
                "TargetConfigPropertyTypeBoolean",
                "TargetConfigPropertyTypeInt",
                "TargetConfigPropertyTypeFloat",
                "TargetConfigPropertyTypeFilePath"
            ]
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "\"Type 'Bearer TOKEN' to correctly set the API Key\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}