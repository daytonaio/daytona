basePath: /
definitions:
  ApiKeyViewDTO:
    properties:
      current:
        type: boolean
      name:
        type: string
      type:
        $ref: '#/definitions/models.ApiKeyType'
    required:
    - current
    - name
    - type
    type: object
  BuildConfig:
    properties:
      cachedBuild:
        $ref: '#/definitions/CachedBuild'
      devcontainer:
        $ref: '#/definitions/DevcontainerConfig'
    type: object
  BuildDTO:
    properties:
      buildConfig:
        $ref: '#/definitions/BuildConfig'
      containerConfig:
        $ref: '#/definitions/ContainerConfig'
      createdAt:
        type: string
      envVars:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      image:
        type: string
      lastJob:
        $ref: '#/definitions/Job'
      lastJobId:
        type: string
      prebuildId:
        type: string
      repository:
        $ref: '#/definitions/GitRepository'
      state:
        $ref: '#/definitions/ResourceState'
      updatedAt:
        type: string
      user:
        type: string
    required:
    - containerConfig
    - createdAt
    - envVars
    - id
    - repository
    - state
    - updatedAt
    type: object
  CachedBuild:
    properties:
      image:
        type: string
      user:
        type: string
    required:
    - image
    - user
    type: object
  CloneTarget:
    enum:
    - branch
    - commit
    type: string
    x-enum-varnames:
    - CloneTargetBranch
    - CloneTargetCommit
  Command:
    properties:
      command:
        type: string
      exitCode:
        type: integer
      id:
        type: string
    required:
    - command
    - id
    type: object
  CompletionContext:
    properties:
      triggerCharacter:
        type: string
      triggerKind:
        type: integer
    required:
    - triggerKind
    type: object
  CompletionItem:
    properties:
      detail:
        type: string
      documentation: {}
      filterText:
        type: string
      insertText:
        type: string
      kind:
        type: integer
      label:
        type: string
      sortText:
        type: string
    required:
    - label
    type: object
  CompletionList:
    properties:
      isIncomplete:
        type: boolean
      items:
        items:
          $ref: '#/definitions/CompletionItem'
        type: array
    required:
    - isIncomplete
    - items
    type: object
  ContainerConfig:
    properties:
      image:
        type: string
      user:
        type: string
    required:
    - image
    - user
    type: object
  ContainerRegistry:
    properties:
      password:
        type: string
      server:
        type: string
      username:
        type: string
    required:
    - password
    - server
    - username
    type: object
  CreateBuildDTO:
    properties:
      branch:
        type: string
      envVars:
        additionalProperties:
          type: string
        type: object
      prebuildId:
        type: string
      workspaceTemplateName:
        type: string
    required:
    - branch
    - envVars
    - workspaceTemplateName
    type: object
  CreatePrebuildDTO:
    properties:
      branch:
        type: string
      commitInterval:
        type: integer
      id:
        type: string
      retention:
        type: integer
      triggerFiles:
        items:
          type: string
        type: array
    required:
    - retention
    type: object
  CreateRunnerDTO:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  CreateRunnerResultDTO:
    properties:
      apiKey:
        type: string
      id:
        type: string
      metadata:
        $ref: '#/definitions/RunnerMetadata'
      name:
        type: string
    required:
    - apiKey
    - id
    - name
    type: object
  CreateSessionRequest:
    properties:
      sessionId:
        type: string
    required:
    - sessionId
    type: object
  CreateTargetConfigDTO:
    properties:
      name:
        type: string
      options:
        type: string
      providerInfo:
        $ref: '#/definitions/ProviderInfo'
    required:
    - name
    - options
    - providerInfo
    type: object
  CreateTargetDTO:
    properties:
      id:
        type: string
      name:
        type: string
      targetConfigId:
        type: string
    required:
    - id
    - name
    - targetConfigId
    type: object
  CreateWorkspaceDTO:
    properties:
      buildConfig:
        $ref: '#/definitions/BuildConfig'
      envVars:
        additionalProperties:
          type: string
        type: object
      gitProviderConfigId:
        type: string
      id:
        type: string
      image:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      source:
        $ref: '#/definitions/CreateWorkspaceSourceDTO'
      targetId:
        type: string
      user:
        type: string
    required:
    - envVars
    - id
    - labels
    - name
    - source
    - targetId
    type: object
  CreateWorkspaceSourceDTO:
    properties:
      repository:
        $ref: '#/definitions/GitRepository'
    required:
    - repository
    type: object
  CreateWorkspaceTemplateDTO:
    properties:
      buildConfig:
        $ref: '#/definitions/BuildConfig'
      envVars:
        additionalProperties:
          type: string
        type: object
      gitProviderConfigId:
        type: string
      image:
        type: string
      name:
        type: string
      repositoryUrl:
        type: string
      user:
        type: string
    required:
    - envVars
    - name
    - repositoryUrl
    type: object
  DevcontainerConfig:
    properties:
      filePath:
        type: string
    required:
    - filePath
    type: object
  EnvironmentVariable:
    properties:
      key:
        type: string
      value:
        type: string
    required:
    - key
    - value
    type: object
  ExecuteRequest:
    properties:
      command:
        type: string
      timeout:
        description: Timeout in seconds, defaults to 10 seconds
        type: integer
    required:
    - command
    type: object
  ExecuteResponse:
    properties:
      code:
        type: integer
      result:
        type: string
    required:
    - code
    - result
    type: object
  FRPSConfig:
    properties:
      domain:
        type: string
      port:
        type: integer
      protocol:
        type: string
    required:
    - domain
    - port
    - protocol
    type: object
  FileInfo:
    properties:
      group:
        type: string
      isDir:
        type: boolean
      modTime:
        type: string
      mode:
        type: string
      name:
        type: string
      owner:
        type: string
      permissions:
        type: string
      size:
        type: integer
    required:
    - group
    - isDir
    - modTime
    - mode
    - name
    - owner
    - permissions
    - size
    type: object
  FileStatus:
    properties:
      extra:
        type: string
      name:
        type: string
      staging:
        $ref: '#/definitions/Status'
      worktree:
        $ref: '#/definitions/Status'
    required:
    - extra
    - name
    - staging
    - worktree
    type: object
  GetRepositoryContext:
    properties:
      branch:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: string
      path:
        type: string
      prNumber:
        type: integer
      sha:
        type: string
      source:
        type: string
      url:
        type: string
    required:
    - url
    type: object
  GitAddRequest:
    properties:
      files:
        description: files to add (use . for all files)
        items:
          type: string
        type: array
      path:
        type: string
    required:
    - files
    - path
    type: object
  GitBranch:
    properties:
      name:
        type: string
      sha:
        type: string
    required:
    - name
    - sha
    type: object
  GitBranchRequest:
    properties:
      name:
        type: string
      path:
        type: string
    required:
    - name
    - path
    type: object
  GitCloneRequest:
    properties:
      branch:
        type: string
      commit_id:
        type: string
      password:
        type: string
      path:
        type: string
      url:
        type: string
      username:
        type: string
    required:
    - path
    - url
    type: object
  GitCommitInfo:
    properties:
      author:
        type: string
      email:
        type: string
      hash:
        type: string
      message:
        type: string
      timestamp:
        type: string
    required:
    - author
    - email
    - hash
    - message
    - timestamp
    type: object
  GitCommitRequest:
    properties:
      author:
        type: string
      email:
        type: string
      message:
        type: string
      path:
        type: string
    required:
    - author
    - email
    - message
    - path
    type: object
  GitCommitResponse:
    properties:
      hash:
        type: string
    required:
    - hash
    type: object
  GitNamespace:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  GitProvider:
    properties:
      alias:
        type: string
      baseApiUrl:
        type: string
      id:
        type: string
      providerId:
        type: string
      signingKey:
        type: string
      signingMethod:
        $ref: '#/definitions/SigningMethod'
      token:
        type: string
      username:
        type: string
    required:
    - alias
    - id
    - providerId
    - token
    - username
    type: object
  GitPullRequest:
    properties:
      branch:
        type: string
      name:
        type: string
      sha:
        type: string
      sourceRepoId:
        type: string
      sourceRepoName:
        type: string
      sourceRepoOwner:
        type: string
      sourceRepoUrl:
        type: string
    required:
    - branch
    - name
    - sha
    - sourceRepoId
    - sourceRepoName
    - sourceRepoOwner
    - sourceRepoUrl
    type: object
  GitRepoRequest:
    properties:
      password:
        type: string
      path:
        type: string
      username:
        type: string
    required:
    - path
    type: object
  GitRepository:
    properties:
      branch:
        type: string
      cloneTarget:
        $ref: '#/definitions/CloneTarget'
      id:
        type: string
      name:
        type: string
      owner:
        type: string
      path:
        type: string
      prNumber:
        type: integer
      sha:
        type: string
      source:
        type: string
      url:
        type: string
    required:
    - branch
    - id
    - name
    - owner
    - sha
    - source
    - url
    type: object
  GitStatus:
    properties:
      ahead:
        type: integer
      behind:
        type: integer
      branchPublished:
        type: boolean
      currentBranch:
        type: string
      fileStatus:
        items:
          $ref: '#/definitions/FileStatus'
        type: array
    required:
    - currentBranch
    - fileStatus
    type: object
  GitUser:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      username:
        type: string
    required:
    - email
    - id
    - name
    - username
    type: object
  Job:
    properties:
      action:
        $ref: '#/definitions/models.JobAction'
      createdAt:
        type: string
      error:
        type: string
      id:
        type: string
      metadata:
        description: JSON encoded metadata
        type: string
      resourceId:
        type: string
      resourceType:
        $ref: '#/definitions/ResourceType'
      runnerId:
        type: string
      state:
        $ref: '#/definitions/JobState'
      updatedAt:
        type: string
    required:
    - action
    - createdAt
    - id
    - resourceId
    - resourceType
    - state
    - updatedAt
    type: object
  JobState:
    enum:
    - pending
    - running
    - error
    - success
    type: string
    x-enum-varnames:
    - JobStatePending
    - JobStateRunning
    - JobStateError
    - JobStateSuccess
  ListBranchResponse:
    properties:
      branches:
        items:
          type: string
        type: array
    required:
    - branches
    type: object
  LogFileConfig:
    properties:
      compress:
        type: boolean
      localTime:
        type: boolean
      maxAge:
        type: integer
      maxBackups:
        type: integer
      maxSize:
        type: integer
      path:
        type: string
    required:
    - maxAge
    - maxBackups
    - maxSize
    - path
    type: object
  LspCompletionParams:
    properties:
      context:
        $ref: '#/definitions/CompletionContext'
      languageId:
        type: string
      pathToProject:
        type: string
      position:
        $ref: '#/definitions/Position'
      uri:
        type: string
    required:
    - languageId
    - pathToProject
    - position
    - uri
    type: object
  LspDocumentRequest:
    properties:
      languageId:
        type: string
      pathToProject:
        type: string
      uri:
        type: string
    required:
    - languageId
    - pathToProject
    - uri
    type: object
  LspLocation:
    properties:
      range:
        $ref: '#/definitions/LspRange'
      uri:
        type: string
    required:
    - range
    - uri
    type: object
  LspPosition:
    properties:
      character:
        type: integer
      line:
        type: integer
    required:
    - character
    - line
    type: object
  LspRange:
    properties:
      end:
        $ref: '#/definitions/LspPosition'
      start:
        $ref: '#/definitions/LspPosition'
    required:
    - end
    - start
    type: object
  LspServerRequest:
    properties:
      languageId:
        type: string
      pathToProject:
        type: string
    required:
    - languageId
    - pathToProject
    type: object
  LspSymbol:
    properties:
      kind:
        type: integer
      location:
        $ref: '#/definitions/LspLocation'
      name:
        type: string
    required:
    - kind
    - location
    - name
    type: object
  Match:
    properties:
      content:
        type: string
      file:
        type: string
      line:
        type: integer
    required:
    - content
    - file
    - line
    type: object
  NetworkKey:
    properties:
      key:
        type: string
    required:
    - key
    type: object
  Position:
    properties:
      character:
        type: integer
      line:
        type: integer
    required:
    - character
    - line
    type: object
  PrebuildConfig:
    properties:
      branch:
        type: string
      commitInterval:
        type: integer
      id:
        type: string
      retention:
        type: integer
      triggerFiles:
        items:
          type: string
        type: array
    required:
    - branch
    - id
    - retention
    - triggerFiles
    type: object
  PrebuildDTO:
    properties:
      branch:
        type: string
      commitInterval:
        type: integer
      id:
        type: string
      retention:
        type: integer
      triggerFiles:
        items:
          type: string
        type: array
      workspaceTemplateName:
        type: string
    required:
    - branch
    - id
    - retention
    - workspaceTemplateName
    type: object
  ProviderDTO:
    properties:
      label:
        type: string
      latest:
        type: boolean
      name:
        type: string
      version:
        type: string
    required:
    - latest
    - name
    - version
    type: object
  ProviderInfo:
    properties:
      agentlessTarget:
        type: boolean
      label:
        type: string
      name:
        type: string
      runnerId:
        type: string
      runnerName:
        type: string
      targetConfigManifest:
        $ref: '#/definitions/TargetConfigManifest'
      version:
        type: string
    required:
    - name
    - runnerId
    - runnerName
    - targetConfigManifest
    - version
    type: object
  ReplaceRequest:
    properties:
      files:
        items:
          type: string
        type: array
      newValue:
        type: string
      pattern:
        type: string
    required:
    - files
    - newValue
    - pattern
    type: object
  ReplaceResult:
    properties:
      error:
        type: string
      file:
        type: string
      success:
        type: boolean
    type: object
  RepositoryUrl:
    properties:
      url:
        type: string
    required:
    - url
    type: object
  ResourceState:
    properties:
      error:
        type: string
      name:
        $ref: '#/definitions/models.ResourceStateName'
      updatedAt:
        type: string
    required:
    - name
    - updatedAt
    type: object
  ResourceType:
    enum:
    - workspace
    - target
    - build
    - runner
    type: string
    x-enum-varnames:
    - ResourceTypeWorkspace
    - ResourceTypeTarget
    - ResourceTypeBuild
    - ResourceTypeRunner
  RunnerDTO:
    properties:
      id:
        type: string
      metadata:
        $ref: '#/definitions/RunnerMetadata'
      name:
        type: string
      state:
        $ref: '#/definitions/ResourceState'
    required:
    - id
    - name
    - state
    type: object
  RunnerMetadata:
    properties:
      providers:
        items:
          $ref: '#/definitions/ProviderInfo'
        type: array
      runnerId:
        type: string
      runningJobs:
        type: integer
      updatedAt:
        type: string
      uptime:
        type: integer
    required:
    - providers
    - runnerId
    - updatedAt
    - uptime
    type: object
  Sample:
    properties:
      description:
        type: string
      gitUrl:
        type: string
      name:
        type: string
    required:
    - description
    - gitUrl
    - name
    type: object
  SearchFilesResponse:
    properties:
      files:
        items:
          type: string
        type: array
    required:
    - files
    type: object
  ServerConfig:
    properties:
      apiPort:
        type: integer
      binariesPath:
        type: string
      buildImageNamespace:
        type: string
      builderImage:
        type: string
      builderRegistryServer:
        type: string
      defaultWorkspaceImage:
        type: string
      defaultWorkspaceUser:
        type: string
      frps:
        $ref: '#/definitions/FRPSConfig'
      headscalePort:
        type: integer
      id:
        type: string
      localBuilderRegistryImage:
        type: string
      localBuilderRegistryPort:
        type: integer
      localRunnerDisabled:
        type: boolean
      logFile:
        $ref: '#/definitions/LogFileConfig'
      registryUrl:
        type: string
      samplesIndexUrl:
        type: string
      serverDownloadUrl:
        type: string
    required:
    - apiPort
    - binariesPath
    - builderImage
    - builderRegistryServer
    - defaultWorkspaceImage
    - defaultWorkspaceUser
    - headscalePort
    - id
    - localBuilderRegistryImage
    - localBuilderRegistryPort
    - logFile
    - registryUrl
    - serverDownloadUrl
    type: object
  Session:
    properties:
      commands:
        items:
          $ref: '#/definitions/Command'
        type: array
      sessionId:
        type: string
    required:
    - commands
    - sessionId
    type: object
  SessionExecuteRequest:
    properties:
      async:
        type: boolean
      command:
        type: string
    required:
    - command
    type: object
  SessionExecuteResponse:
    properties:
      cmdId:
        type: string
      exitCode:
        type: integer
      output:
        type: string
    type: object
  SetGitProviderConfig:
    properties:
      alias:
        type: string
      baseApiUrl:
        type: string
      id:
        type: string
      providerId:
        type: string
      signingKey:
        type: string
      signingMethod:
        $ref: '#/definitions/SigningMethod'
      token:
        type: string
      username:
        type: string
    required:
    - providerId
    - token
    type: object
  SigningMethod:
    enum:
    - ssh
    - gpg
    type: string
    x-enum-varnames:
    - SigningMethodSSH
    - SigningMethodGPG
  Status:
    enum:
    - Unmodified
    - Untracked
    - Modified
    - Added
    - Deleted
    - Renamed
    - Copied
    - Updated but unmerged
    type: string
    x-enum-varnames:
    - Unmodified
    - Untracked
    - Modified
    - Added
    - Deleted
    - Renamed
    - Copied
    - UpdatedButUnmerged
  Target:
    properties:
      default:
        type: boolean
      envVars:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      lastJob:
        $ref: '#/definitions/Job'
      lastJobId:
        type: string
      metadata:
        $ref: '#/definitions/TargetMetadata'
      name:
        type: string
      providerMetadata:
        type: string
      targetConfig:
        $ref: '#/definitions/TargetConfig'
      targetConfigId:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/Workspace'
        type: array
    required:
    - default
    - envVars
    - id
    - name
    - targetConfig
    - targetConfigId
    - workspaces
    type: object
  TargetConfig:
    properties:
      deleted:
        type: boolean
      id:
        type: string
      name:
        type: string
      options:
        description: JSON encoded map of options
        type: string
      providerInfo:
        $ref: '#/definitions/ProviderInfo'
    required:
    - deleted
    - id
    - name
    - options
    - providerInfo
    type: object
  TargetConfigManifest:
    additionalProperties:
      $ref: '#/definitions/TargetConfigProperty'
    type: object
  TargetConfigProperty:
    properties:
      defaultValue:
        description: |-
          DefaultValue is converted into the appropriate type based on the Type
          If the property is a FilePath, the DefaultValue is a path to a directory
        type: string
      description:
        description: Brief description of the property
        type: string
      disabledPredicate:
        description: |-
          A regex string matched with the name of the target config to determine if the property should be disabled
          If the regex matches the target config name, the property will be disabled
          E.g. "^local$" will disable the property for the local target
        type: string
      inputMasked:
        type: boolean
      options:
        description: Options is only used if the Type is TargetConfigPropertyTypeOption
        items:
          type: string
        type: array
      suggestions:
        description: Suggestions is an optional list of auto-complete values to assist
          the user while filling the field
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/models.TargetConfigPropertyType'
    type: object
  TargetDTO:
    properties:
      default:
        type: boolean
      envVars:
        additionalProperties:
          type: string
        type: object
      id:
        type: string
      lastJob:
        $ref: '#/definitions/Job'
      lastJobId:
        type: string
      metadata:
        $ref: '#/definitions/TargetMetadata'
      name:
        type: string
      providerMetadata:
        type: string
      state:
        $ref: '#/definitions/ResourceState'
      targetConfig:
        $ref: '#/definitions/TargetConfig'
      targetConfigId:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/Workspace'
        type: array
    required:
    - default
    - envVars
    - id
    - name
    - state
    - targetConfig
    - targetConfigId
    - workspaces
    type: object
  TargetMetadata:
    properties:
      targetId:
        type: string
      updatedAt:
        type: string
      uptime:
        type: integer
    required:
    - targetId
    - updatedAt
    - uptime
    type: object
  UpdateJobState:
    properties:
      errorMessage:
        type: string
      state:
        $ref: '#/definitions/JobState'
    required:
    - state
    type: object
  UpdateRunnerMetadataDTO:
    properties:
      providers:
        items:
          $ref: '#/definitions/ProviderInfo'
        type: array
      runningJobs:
        type: integer
      uptime:
        type: integer
    required:
    - providers
    - uptime
    type: object
  UpdateTargetMetadataDTO:
    properties:
      uptime:
        type: integer
    required:
    - uptime
    type: object
  UpdateTargetProviderMetadataDTO:
    properties:
      metadata:
        type: string
    required:
    - metadata
    type: object
  UpdateWorkspaceMetadataDTO:
    properties:
      gitStatus:
        $ref: '#/definitions/GitStatus'
      uptime:
        type: integer
    required:
    - uptime
    type: object
  UpdateWorkspaceProviderMetadataDTO:
    properties:
      metadata:
        type: string
    required:
    - metadata
    type: object
  Workspace:
    properties:
      apiKey:
        type: string
      buildConfig:
        $ref: '#/definitions/BuildConfig'
      envVars:
        additionalProperties:
          type: string
        type: object
      gitProviderConfigId:
        type: string
      id:
        type: string
      image:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      lastJob:
        $ref: '#/definitions/Job'
      lastJobId:
        type: string
      metadata:
        $ref: '#/definitions/WorkspaceMetadata'
      name:
        type: string
      providerMetadata:
        type: string
      repository:
        $ref: '#/definitions/GitRepository'
      target:
        $ref: '#/definitions/Target'
      targetId:
        type: string
      user:
        type: string
    required:
    - apiKey
    - envVars
    - id
    - image
    - labels
    - name
    - repository
    - target
    - targetId
    - user
    type: object
  WorkspaceDTO:
    properties:
      apiKey:
        type: string
      buildConfig:
        $ref: '#/definitions/BuildConfig'
      envVars:
        additionalProperties:
          type: string
        type: object
      gitProviderConfigId:
        type: string
      id:
        type: string
      image:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      lastJob:
        $ref: '#/definitions/Job'
      lastJobId:
        type: string
      metadata:
        $ref: '#/definitions/WorkspaceMetadata'
      name:
        type: string
      providerMetadata:
        type: string
      repository:
        $ref: '#/definitions/GitRepository'
      state:
        $ref: '#/definitions/ResourceState'
      target:
        $ref: '#/definitions/Target'
      targetId:
        type: string
      user:
        type: string
    required:
    - apiKey
    - envVars
    - id
    - image
    - labels
    - name
    - repository
    - state
    - target
    - targetId
    - user
    type: object
  WorkspaceDirResponse:
    properties:
      dir:
        type: string
    type: object
  WorkspaceMetadata:
    properties:
      gitStatus:
        $ref: '#/definitions/GitStatus'
      updatedAt:
        type: string
      uptime:
        type: integer
      workspaceId:
        type: string
    required:
    - updatedAt
    - uptime
    - workspaceId
    type: object
  WorkspaceTemplate:
    properties:
      buildConfig:
        $ref: '#/definitions/BuildConfig'
      default:
        type: boolean
      envVars:
        additionalProperties:
          type: string
        type: object
      gitProviderConfigId:
        type: string
      image:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      prebuilds:
        items:
          $ref: '#/definitions/PrebuildConfig'
        type: array
      repositoryUrl:
        type: string
      user:
        type: string
    required:
    - default
    - envVars
    - image
    - labels
    - name
    - repositoryUrl
    - user
    type: object
  models.ApiKeyType:
    enum:
    - client
    - workspace
    - target
    - runner
    type: string
    x-enum-varnames:
    - ApiKeyTypeClient
    - ApiKeyTypeWorkspace
    - ApiKeyTypeTarget
    - ApiKeyTypeRunner
  models.JobAction:
    enum:
    - create
    - start
    - stop
    - restart
    - delete
    - force-delete
    - run
    - install-provider
    - uninstall-provider
    - update-provider
    type: string
    x-enum-varnames:
    - JobActionCreate
    - JobActionStart
    - JobActionStop
    - JobActionRestart
    - JobActionDelete
    - JobActionForceDelete
    - JobActionRun
    - JobActionInstallProvider
    - JobActionUninstallProvider
    - JobActionUpdateProvider
  models.ResourceStateName:
    enum:
    - undefined
    - pending-run
    - running
    - run-successful
    - pending-create
    - creating
    - pending-start
    - starting
    - started
    - pending-stop
    - stopping
    - stopped
    - pending-restart
    - error
    - unresponsive
    - pending-delete
    - pending-forced-delete
    - deleting
    - deleted
    type: string
    x-enum-varnames:
    - ResourceStateNameUndefined
    - ResourceStateNamePendingRun
    - ResourceStateNameRunning
    - ResourceStateNameRunSuccessful
    - ResourceStateNamePendingCreate
    - ResourceStateNameCreating
    - ResourceStateNamePendingStart
    - ResourceStateNameStarting
    - ResourceStateNameStarted
    - ResourceStateNamePendingStop
    - ResourceStateNameStopping
    - ResourceStateNameStopped
    - ResourceStateNamePendingRestart
    - ResourceStateNameError
    - ResourceStateNameUnresponsive
    - ResourceStateNamePendingDelete
    - ResourceStateNamePendingForcedDelete
    - ResourceStateNameDeleting
    - ResourceStateNameDeleted
  models.TargetConfigPropertyType:
    enum:
    - string
    - option
    - boolean
    - int
    - float
    - file-path
    type: string
    x-enum-varnames:
    - TargetConfigPropertyTypeString
    - TargetConfigPropertyTypeOption
    - TargetConfigPropertyTypeBoolean
    - TargetConfigPropertyTypeInt
    - TargetConfigPropertyTypeFloat
    - TargetConfigPropertyTypeFilePath
host: localhost:3986
info:
  contact: {}
  description: Daytona Server API
  title: Daytona Server API
  version: v0.0.0-dev
paths:
  /apikey:
    get:
      description: List API keys
      operationId: ListClientApiKeys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ApiKeyViewDTO'
            type: array
      summary: List API keys
      tags:
      - apiKey
  /apikey/{apiKeyName}:
    delete:
      description: Delete API key
      operationId: DeleteApiKey
      parameters:
      - description: API key name
        in: path
        name: apiKeyName
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Delete API key
      tags:
      - apiKey
    post:
      description: Create an API key
      operationId: CreateApiKey
      parameters:
      - description: API key name
        in: path
        name: apiKeyName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create an API key
      tags:
      - apiKey
  /build:
    delete:
      description: Delete ALL builds
      operationId: DeleteAllBuilds
      parameters:
      - description: Force
        in: query
        name: force
        type: boolean
      responses:
        "204":
          description: No Content
      summary: Delete ALL builds
      tags:
      - build
    get:
      description: List builds
      operationId: ListBuilds
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BuildDTO'
            type: array
      summary: List builds
      tags:
      - build
    post:
      consumes:
      - application/json
      description: Create a build
      operationId: CreateBuild
      parameters:
      - description: Create Build DTO
        in: body
        name: createBuildDto
        required: true
        schema:
          $ref: '#/definitions/CreateBuildDTO'
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Create a build
      tags:
      - build
  /build/{buildId}:
    delete:
      description: Delete build
      operationId: DeleteBuild
      parameters:
      - description: Build ID
        in: path
        name: buildId
        required: true
        type: string
      - description: Force
        in: query
        name: force
        type: boolean
      responses:
        "204":
          description: No Content
      summary: Delete build
      tags:
      - build
    get:
      consumes:
      - application/json
      description: Find build
      operationId: FindBuild
      parameters:
      - description: Build ID
        in: path
        name: buildId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BuildDTO'
      summary: Find build
      tags:
      - build
  /build/prebuild/{prebuildId}:
    delete:
      description: Delete builds
      operationId: DeleteBuildsFromPrebuild
      parameters:
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        type: string
      - description: Force
        in: query
        name: force
        type: boolean
      responses:
        "204":
          description: No Content
      summary: Delete builds
      tags:
      - build
  /build/successful/{repoUrl}:
    get:
      description: List successful builds for Git repository
      operationId: ListSuccessfulBuilds
      parameters:
      - description: Repository URL
        in: path
        name: repoUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BuildDTO'
            type: array
      summary: List successful builds for Git repository
      tags:
      - build
  /container-registry/{server}:
    get:
      description: Find container registry
      operationId: FindContainerRegistry
      parameters:
      - description: Container registry server
        in: path
        name: server
        required: true
        type: string
      - description: Workspace ID or Name
        in: query
        name: workspaceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContainerRegistry'
      summary: Find container registry
      tags:
      - container registry
  /env:
    get:
      description: List environment variables
      operationId: ListEnvironmentVariables
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/EnvironmentVariable'
            type: array
      summary: List environment variables
      tags:
      - envVar
    put:
      consumes:
      - application/json
      description: Save environment variable
      operationId: SaveEnvironmentVariable
      parameters:
      - description: Environment Variable
        in: body
        name: environmentVariable
        required: true
        schema:
          $ref: '#/definitions/EnvironmentVariable'
      responses:
        "201":
          description: Created
      summary: Save environment variable
      tags:
      - envVar
  /env/{key}:
    delete:
      description: Delete environment variable
      operationId: DeleteEnvironmentVariable
      parameters:
      - description: Environment Variable Key
        in: path
        name: key
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Delete environment variable
      tags:
      - envVar
  /gitprovider:
    get:
      description: List Git providers
      operationId: ListGitProviders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GitProvider'
            type: array
      summary: List Git providers
      tags:
      - gitProvider
    put:
      description: Save Git provider
      operationId: SaveGitProvider
      parameters:
      - description: Git provider
        in: body
        name: gitProviderConfig
        required: true
        schema:
          $ref: '#/definitions/SetGitProviderConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Save Git provider
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}:
    delete:
      description: Delete Git provider
      operationId: DeleteGitProvider
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Git provider
      tags:
      - gitProvider
    get:
      description: Find Git provider
      operationId: FindGitProvider
      parameters:
      - description: ID
        in: path
        name: gitProviderId
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GitProvider'
      summary: Find Git provider
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/branches:
    get:
      description: Get Git repository branches
      operationId: GetRepoBranches
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        type: string
      - description: Repository
        in: path
        name: repositoryId
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GitBranch'
            type: array
      summary: Get Git repository branches
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/pull-requests:
    get:
      description: Get Git repository PRs
      operationId: GetRepoPRs
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        type: string
      - description: Repository
        in: path
        name: repositoryId
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GitPullRequest'
            type: array
      summary: Get Git repository PRs
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/repositories:
    get:
      description: Get Git repositories
      operationId: GetRepositories
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GitRepository'
            type: array
      summary: Get Git repositories
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/namespaces:
    get:
      description: Get Git namespaces
      operationId: GetNamespaces
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GitNamespace'
            type: array
      summary: Get Git namespaces
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/user:
    get:
      description: Get Git context
      operationId: GetGitUser
      parameters:
      - description: Git Provider Id
        in: path
        name: gitProviderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GitUser'
      summary: Get Git context
      tags:
      - gitProvider
  /gitprovider/context:
    post:
      description: Get Git context
      operationId: GetGitContext
      parameters:
      - description: Get repository context
        in: body
        name: repository
        required: true
        schema:
          $ref: '#/definitions/GetRepositoryContext'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GitRepository'
      summary: Get Git context
      tags:
      - gitProvider
  /gitprovider/context/url:
    post:
      description: Get URL from Git repository
      operationId: GetUrlFromRepository
      parameters:
      - description: Git repository
        in: body
        name: repository
        required: true
        schema:
          $ref: '#/definitions/GitRepository'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RepositoryUrl'
      summary: Get URL from Git repository
      tags:
      - gitProvider
  /gitprovider/for-url/{url}:
    get:
      description: List Git providers for url
      operationId: ListGitProvidersForUrl
      parameters:
      - description: Url
        in: path
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GitProvider'
            type: array
      summary: List Git providers for url
      tags:
      - gitProvider
  /gitprovider/id-for-url/{url}:
    get:
      description: Find Git provider ID
      operationId: FindGitProviderIdForUrl
      parameters:
      - description: Url
        in: path
        name: url
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Find Git provider ID
      tags:
      - gitProvider
  /health:
    get:
      description: Health check
      operationId: HealthCheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
  /job:
    get:
      description: List jobs
      operationId: ListJobs
      parameters:
      - collectionFormat: multi
        description: Job States
        in: query
        items:
          type: string
        name: states
        type: array
      - collectionFormat: multi
        description: Job Actions
        in: query
        items:
          type: string
        name: actions
        type: array
      - description: Resource ID
        in: query
        name: resourceId
        type: string
      - description: Resource Type
        in: query
        name: resourceType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Job'
            type: array
      summary: List jobs
      tags:
      - job
  /runner:
    get:
      description: List runners
      operationId: ListRunners
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/RunnerDTO'
            type: array
      summary: List runners
      tags:
      - runner
    post:
      description: Create a runner
      operationId: CreateRunner
      parameters:
      - description: Runner
        in: body
        name: runner
        required: true
        schema:
          $ref: '#/definitions/CreateRunnerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CreateRunnerResultDTO'
      summary: Create a runner
      tags:
      - runner
  /runner/{runnerId}:
    delete:
      description: Delete runner
      operationId: DeleteRunner
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Delete runner
      tags:
      - runner
    get:
      description: Find a runner
      operationId: FindRunner
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RunnerDTO'
      summary: Find a runner
      tags:
      - runner
  /runner/{runnerId}/jobs:
    get:
      description: List runner jobs
      operationId: ListRunnerJobs
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Job'
            type: array
      summary: List runner jobs
      tags:
      - runner
  /runner/{runnerId}/jobs/{jobId}/state:
    post:
      description: Update job state
      operationId: UpdateJobState
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      - description: Job ID
        in: path
        name: jobId
        required: true
        type: string
      - description: Update job state
        in: body
        name: updateJobState
        required: true
        schema:
          $ref: '#/definitions/UpdateJobState'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update job state
      tags:
      - runner
  /runner/{runnerId}/metadata:
    post:
      description: Update runner metadata
      operationId: UpdateRunnerMetadata
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      - description: Runner Metadata
        in: body
        name: runnerMetadata
        required: true
        schema:
          $ref: '#/definitions/UpdateRunnerMetadataDTO'
      responses:
        "200":
          description: OK
      summary: Update runner metadata
      tags:
      - runner
  /runner/{runnerId}/provider:
    get:
      description: Get runner providers
      operationId: GetRunnerProviders
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProviderInfo'
            type: array
      summary: Get runner providers
      tags:
      - provider
  /runner/{runnerId}/provider/{providerName}/install:
    post:
      description: Install provider
      operationId: InstallProvider
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      - description: Provider name
        in: path
        name: providerName
        required: true
        type: string
      - description: Provider version - defaults to 'latest'
        in: query
        name: providerVersion
        type: string
      responses:
        "200":
          description: OK
      summary: Install provider
      tags:
      - provider
  /runner/{runnerId}/provider/{providerName}/uninstall:
    post:
      description: Uninstall provider
      operationId: UninstallProvider
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      - description: Provider name
        in: path
        name: providerName
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Uninstall provider
      tags:
      - provider
  /runner/{runnerId}/provider/{providerName}/update:
    post:
      description: Update provider
      operationId: UpdateProvider
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        type: string
      - description: Provider name
        in: path
        name: providerName
        required: true
        type: string
      - description: Provider version - defaults to 'latest'
        in: query
        name: providerVersion
        type: string
      responses:
        "200":
          description: OK
      summary: Update provider
      tags:
      - provider
  /runner/provider:
    get:
      description: List providers
      operationId: ListProviders
      parameters:
      - description: Runner ID
        in: query
        name: runnerId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProviderInfo'
            type: array
      summary: List providers
      tags:
      - provider
  /runner/provider/for-install:
    get:
      description: List providers available for installation
      operationId: ListProvidersForInstall
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProviderDTO'
            type: array
      summary: List providers available for installation
      tags:
      - provider
  /sample:
    get:
      description: List samples
      operationId: ListSamples
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Sample'
            type: array
      summary: List samples
      tags:
      - sample
  /server/config:
    get:
      description: Get the server configuration
      operationId: GetConfig
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServerConfig'
      summary: Get the server configuration
      tags:
      - server
    put:
      consumes:
      - application/json
      description: Save the server configuration
      operationId: SaveConfig
      parameters:
      - description: Server configuration
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/ServerConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServerConfig'
      summary: Save the server configuration
      tags:
      - server
  /server/logs:
    get:
      description: Get server log files
      operationId: GetServerLogFiles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get server log files
      tags:
      - server
  /server/network-key:
    post:
      description: Create a new authentication key
      operationId: CreateNetworkKey
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/NetworkKey'
      summary: Create a new authentication key
      tags:
      - server
  /target:
    get:
      description: List targets
      operationId: ListTargets
      parameters:
      - description: Show target config options
        in: query
        name: showOptions
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TargetDTO'
            type: array
      summary: List targets
      tags:
      - target
    post:
      description: Create a target
      operationId: CreateTarget
      parameters:
      - description: Create target
        in: body
        name: target
        required: true
        schema:
          $ref: '#/definitions/CreateTargetDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Target'
      summary: Create a target
      tags:
      - target
  /target-config:
    get:
      description: List target configs
      operationId: ListTargetConfigs
      parameters:
      - description: Show target config options
        in: query
        name: showOptions
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/TargetConfig'
            type: array
      summary: List target configs
      tags:
      - target-config
    post:
      description: Create a target config
      operationId: CreateTargetConfig
      parameters:
      - description: Target config to create
        in: body
        name: targetConfig
        required: true
        schema:
          $ref: '#/definitions/CreateTargetConfigDTO'
      - description: Show target config options
        in: query
        name: showOptions
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TargetConfig'
      summary: Create a target config
      tags:
      - target-config
  /target-config/{configId}:
    delete:
      description: Delete a target config
      operationId: DeleteTargetConfig
      parameters:
      - description: Target Config Id
        in: path
        name: configId
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Delete a target config
      tags:
      - target-config
  /target/{targetId}:
    delete:
      description: Delete target
      operationId: DeleteTarget
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        type: string
      - description: Force
        in: query
        name: force
        type: boolean
      responses:
        "200":
          description: OK
      summary: Delete target
      tags:
      - target
    get:
      description: Find target
      operationId: FindTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        type: string
      - description: Show target config options
        in: query
        name: showOptions
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TargetDTO'
      summary: Find target
      tags:
      - target
  /target/{targetId}/handle-successful-creation:
    post:
      description: Handles successful creation of the target
      operationId: HandleSuccessfulCreation
      parameters:
      - description: Target ID or name
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Handles successful creation of the target
      tags:
      - target
  /target/{targetId}/metadata:
    post:
      description: Update target metadata
      operationId: UpdateTargetMetadata
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        type: string
      - description: Target Metadata
        in: body
        name: targetMetadata
        required: true
        schema:
          $ref: '#/definitions/UpdateTargetMetadataDTO'
      responses:
        "200":
          description: OK
      summary: Update target metadata
      tags:
      - target
  /target/{targetId}/provider-metadata:
    post:
      description: Update target provider metadata
      operationId: UpdateTargetProviderMetadata
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        type: string
      - description: Provider metadata
        in: body
        name: metadata
        required: true
        schema:
          $ref: '#/definitions/UpdateTargetProviderMetadataDTO'
      responses:
        "200":
          description: OK
      summary: Update target provider metadata
      tags:
      - target
  /target/{targetId}/restart:
    post:
      description: Restart target
      operationId: RestartTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Restart target
      tags:
      - target
  /target/{targetId}/set-default:
    patch:
      description: Set target to be used by default
      operationId: SetDefaultTarget
      parameters:
      - description: Target ID or name
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Set target to be used by default
      tags:
      - target
  /target/{targetId}/start:
    post:
      description: Start target
      operationId: StartTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Start target
      tags:
      - target
  /target/{targetId}/state:
    get:
      description: Get target state
      operationId: GetTargetState
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResourceState'
      summary: Get target state
      tags:
      - target
  /target/{targetId}/stop:
    post:
      description: Stop target
      operationId: StopTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Stop target
      tags:
      - target
  /workspace:
    get:
      description: List workspaces
      operationId: ListWorkspaces
      parameters:
      - description: JSON encoded labels
        in: query
        name: labels
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WorkspaceDTO'
            type: array
      summary: List workspaces
      tags:
      - workspace
    post:
      description: Create a workspace
      operationId: CreateWorkspace
      parameters:
      - description: Create workspace
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/CreateWorkspaceDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkspaceDTO'
      summary: Create a workspace
      tags:
      - workspace
  /workspace-template:
    get:
      description: List workspace templates
      operationId: ListWorkspaceTemplates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WorkspaceTemplate'
            type: array
      summary: List workspace templates
      tags:
      - workspace-template
    put:
      consumes:
      - application/json
      description: Set workspace template data
      operationId: SaveWorkspaceTemplate
      parameters:
      - description: Workspace template
        in: body
        name: workspaceTemplate
        required: true
        schema:
          $ref: '#/definitions/CreateWorkspaceTemplateDTO'
      responses:
        "201":
          description: Created
      summary: Set workspace template data
      tags:
      - workspace-template
  /workspace-template/{templateName}:
    delete:
      description: Delete workspace template data
      operationId: DeleteWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        type: string
      - description: Force
        in: query
        name: force
        type: boolean
      responses:
        "204":
          description: No Content
      summary: Delete workspace template data
      tags:
      - workspace-template
    get:
      consumes:
      - application/json
      description: Find a workspace template
      operationId: FindWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkspaceTemplate'
      summary: Find a workspace template
      tags:
      - workspace-template
  /workspace-template/{templateName}/prebuild:
    get:
      consumes:
      - application/json
      description: List prebuilds for workspace template
      operationId: ListPrebuildsForWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/PrebuildDTO'
            type: array
      summary: List prebuilds for workspace template
      tags:
      - prebuild
    put:
      consumes:
      - application/json
      description: Save prebuild
      operationId: SavePrebuild
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        type: string
      - description: Prebuild
        in: body
        name: prebuild
        required: true
        schema:
          $ref: '#/definitions/CreatePrebuildDTO'
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Save prebuild
      tags:
      - prebuild
  /workspace-template/{templateName}/prebuild/{prebuildId}:
    delete:
      consumes:
      - application/json
      description: Delete prebuild
      operationId: DeletePrebuild
      parameters:
      - description: Workspace template name
        in: path
        name: templateName
        required: true
        type: string
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        type: string
      - description: Force
        in: query
        name: force
        type: boolean
      responses:
        "204":
          description: No Content
      summary: Delete prebuild
      tags:
      - prebuild
    get:
      consumes:
      - application/json
      description: Find prebuild
      operationId: FindPrebuild
      parameters:
      - description: Workspace template name
        in: path
        name: templateName
        required: true
        type: string
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PrebuildDTO'
      summary: Find prebuild
      tags:
      - prebuild
  /workspace-template/{templateName}/set-default:
    patch:
      description: Set workspace template to default
      operationId: SetDefaultWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Set workspace template to default
      tags:
      - workspace-template
  /workspace-template/default/{gitUrl}:
    get:
      description: Get default workspace templates by git url
      operationId: GetDefaultWorkspaceTemplate
      parameters:
      - description: Git URL
        in: path
        name: gitUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkspaceTemplate'
      summary: Get default workspace templates by git url
      tags:
      - workspace-template
  /workspace-template/prebuild:
    get:
      consumes:
      - application/json
      description: List prebuilds
      operationId: ListPrebuilds
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/PrebuildDTO'
            type: array
      summary: List prebuilds
      tags:
      - prebuild
  /workspace-template/prebuild/process-git-event:
    post:
      description: ProcessGitEvent
      operationId: ProcessGitEvent
      parameters:
      - description: Webhook event
        in: body
        name: body
        required: true
        schema:
          type: object
      responses:
        "200":
          description: OK
      summary: ProcessGitEvent
      tags:
      - prebuild
  /workspace/{workspaceId}:
    delete:
      description: Delete workspace
      operationId: DeleteWorkspace
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Force
        in: query
        name: force
        type: boolean
      responses:
        "200":
          description: OK
      summary: Delete workspace
      tags:
      - workspace
    get:
      description: Find workspace
      operationId: FindWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkspaceDTO'
      summary: Find workspace
      tags:
      - workspace
  /workspace/{workspaceId}/labels:
    post:
      description: Update workspace labels
      operationId: UpdateWorkspaceLabels
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Labels
        in: body
        name: labels
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkspaceDTO'
      summary: Update workspace labels
      tags:
      - workspace
  /workspace/{workspaceId}/metadata:
    post:
      description: Update workspace metadata
      operationId: UpdateWorkspaceMetadata
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Workspace Metadata
        in: body
        name: workspaceMetadata
        required: true
        schema:
          $ref: '#/definitions/UpdateWorkspaceMetadataDTO'
      responses:
        "200":
          description: OK
      summary: Update workspace metadata
      tags:
      - workspace
  /workspace/{workspaceId}/provider-metadata:
    post:
      description: Update workspace provider metadata
      operationId: UpdateWorkspaceProviderMetadata
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Provider metadata
        in: body
        name: metadata
        required: true
        schema:
          $ref: '#/definitions/UpdateWorkspaceProviderMetadataDTO'
      responses:
        "200":
          description: OK
      summary: Update workspace provider metadata
      tags:
      - workspace
  /workspace/{workspaceId}/restart:
    post:
      description: Restart workspace
      operationId: RestartWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Restart workspace
      tags:
      - workspace
  /workspace/{workspaceId}/start:
    post:
      description: Start workspace
      operationId: StartWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Start workspace
      tags:
      - workspace
  /workspace/{workspaceId}/state:
    get:
      description: Get workspace state
      operationId: GetWorkspaceState
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResourceState'
      summary: Get workspace state
      tags:
      - workspace
  /workspace/{workspaceId}/stop:
    post:
      description: Stop workspace
      operationId: StopWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Stop workspace
      tags:
      - workspace
  /workspace/{workspaceId}/toolbox/files:
    delete:
      description: Delete file inside a workspace
      operationId: FsDeleteFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete file
      tags:
      - workspace toolbox
    get:
      description: List files inside a workspace
      operationId: FsListFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/FileInfo'
            type: array
      summary: List files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/download:
    get:
      description: Download file from a workspace
      operationId: FsDownloadFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: response contains the file
          schema:
            type: file
      summary: Download file
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/find:
    get:
      description: Search for text/pattern inside a workspace files
      operationId: FsFindInFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      - description: Pattern
        in: query
        name: pattern
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Match'
            type: array
      summary: Search for text/pattern in files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/folder:
    post:
      description: Create folder inside a workspace
      operationId: FsCreateFolder
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      - description: Mode
        in: query
        name: mode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Create folder
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/info:
    get:
      description: Get file info inside a workspace
      operationId: FsGetFileDetails
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/FileInfo'
      summary: Get file info
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/move:
    post:
      description: Create folder inside a workspace
      operationId: FsMoveFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Source path
        in: query
        name: source
        required: true
        type: string
      - description: Destination path
        in: query
        name: destination
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create folder
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/permissions:
    post:
      description: Set file owner/group/permissions inside a workspace
      operationId: FsSetFilePermissions
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      - description: Owner
        in: query
        name: owner
        type: string
      - description: Group
        in: query
        name: group
        type: string
      - description: Mode
        in: query
        name: mode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Set file owner/group/permissions
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/replace:
    post:
      description: Repleace text/pattern in mutilple files inside a workspace
      operationId: FsReplaceInFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: ReplaceParams
        in: body
        name: replace
        required: true
        schema:
          $ref: '#/definitions/ReplaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ReplaceResult'
            type: array
      summary: Repleace text/pattern in files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/search:
    get:
      description: Search for files inside a workspace
      operationId: FsSearchFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      - description: Pattern
        in: query
        name: pattern
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SearchFilesResponse'
      summary: Search for files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/upload:
    post:
      description: Upload file inside a workspace
      operationId: FsUploadFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path
        in: query
        name: path
        required: true
        type: string
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Upload file
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/add:
    post:
      description: Add files to git commit
      operationId: GitAddFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: GitAddRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/GitAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Add files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/branches:
    get:
      description: Get branch list from git repository inside a workspace
      operationId: GitBranchList
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path to git repository
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListBranchResponse'
      summary: Get branch list
      tags:
      - workspace toolbox
    post:
      description: Create branch on git repository inside a workspace
      operationId: GitCreateBranch
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: GitBranchRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/GitBranchRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Create branch
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/clone:
    post:
      description: Clone git repository inside a workspace
      operationId: GitCloneRepository
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: GitCloneRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/GitCloneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Clone git repository
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/commit:
    post:
      description: Commit changes to git repository inside a workspace
      operationId: GitCommitChanges
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: GitCommitRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/GitCommitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GitCommitResponse'
      summary: Commit changes
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/history:
    get:
      description: Get commit history from git repository inside a workspace
      operationId: GitCommitHistory
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path to git repository
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GitCommitInfo'
            type: array
      summary: Get commit history
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/pull:
    post:
      description: Pull changes from remote to git repository inside a workspace
      operationId: GitPullChanges
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Git pull request
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/GitRepoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Pull changes
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/push:
    post:
      description: Push changes to remote from git repository inside a workspace
      operationId: GitPushChanges
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Git push request
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/GitRepoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Push changes
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/status:
    get:
      description: Get status from git repository inside a workspace
      operationId: GitGitStatus
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Path to git repository
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GitStatus'
      summary: Get git status
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/completions:
    post:
      description: The Completion request is sent from the client to the server to
        compute completion items at a given cursor position.
      operationId: LspCompletions
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: LspCompletionParams
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/LspCompletionParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CompletionList'
      summary: Get Lsp Completions
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/did-close:
    post:
      description: The document close notification is sent from the client to the
        server when the document got closed in the client.
      operationId: LspDidClose
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: LspDocumentRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/LspDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Call Lsp DidClose
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/did-open:
    post:
      description: The document open notification is sent from the client to the server
        to signal newly opened text documents.
      operationId: LspDidOpen
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: LspDocumentRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/LspDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Call Lsp DidOpen
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/document-symbols:
    get:
      description: The document symbol request is sent from the client to the server.
      operationId: LspDocumentSymbols
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Language ID
        in: query
        name: languageId
        required: true
        type: string
      - description: Path to project
        in: query
        name: pathToProject
        required: true
        type: string
      - description: Document Uri
        in: query
        name: uri
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LspSymbol'
            type: array
      summary: Call Lsp DocumentSymbols
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/start:
    post:
      description: Start Lsp server process inside a workspace
      operationId: LspStart
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: LspServerRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/LspServerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Start Lsp server
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/stop:
    post:
      description: Stop Lsp server process inside a workspace
      operationId: LspStop
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: LspServerRequest
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/LspServerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Stop Lsp server
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/workspace-symbols:
    get:
      description: The workspace symbol request is sent from the client to the server
        to list project-wide symbols matching the query string.
      operationId: LspWorkspaceSymbols
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Language ID
        in: query
        name: languageId
        required: true
        type: string
      - description: Path to project
        in: query
        name: pathToProject
        required: true
        type: string
      - description: Symbol Query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/LspSymbol'
            type: array
      summary: Call Lsp WorkspaceSymbols
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/execute:
    post:
      description: Execute command synchronously inside a workspace
      operationId: ProcessExecuteCommand
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Execute command request
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/ExecuteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ExecuteResponse'
      summary: Execute command
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/session:
    get:
      description: List sessions inside workspace project
      operationId: ListSessions
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Session'
            type: array
      summary: List sessions
      tags:
      - workspace toolbox
    post:
      description: Create exec session inside workspace project
      operationId: CreateSession
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Create session request
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/CreateSessionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Create exec session
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/session/{sessionId}:
    delete:
      description: Delete a session inside workspace project
      operationId: DeleteSession
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete session
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/session/{sessionId}/command/{commandId}/logs:
    get:
      description: |-
        Get logs of a command inside a session inside workspace project
        Connect with websocket to get a stream of the logs
      operationId: GetSessionCommandLogs
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      - description: Command ID
        in: path
        name: commandId
        required: true
        type: string
      responses:
        "200":
          description: command logs
          schema:
            type: string
      summary: Get session command logs
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/session/{sessionId}/exec:
    post:
      description: Execute command inside a session inside workspace project
      operationId: SessionExecuteCommand
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Session ID
        in: path
        name: sessionId
        required: true
        type: string
      - description: Execute command request
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/SessionExecuteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SessionExecuteResponse'
      summary: Execute command in session
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/workspace-dir:
    get:
      description: Get workspace directory
      operationId: GetWorkspaceDir
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkspaceDirResponse'
      summary: Get workspace dir
      tags:
      - workspace toolbox
schemes:
- http
security:
- Bearer: []
securityDefinitions:
  Bearer:
    description: '"Type ''Bearer TOKEN'' to correctly set the API Key"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
