openapi: 3.0.1
info:
  contact: {}
  description: Daytona Server API
  title: Daytona Server API
  version: v0.0.0-dev
servers:
- url: http://localhost:3986/
security:
- Bearer: []
paths:
  /apikey:
    get:
      description: List API keys
      operationId: ListClientApiKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiKey'
                type: array
          description: OK
      summary: List API keys
      tags:
      - apiKey
  /apikey/{apiKeyName}:
    delete:
      description: Revoke API key
      operationId: RevokeApiKey
      parameters:
      - description: API key name
        in: path
        name: apiKeyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Revoke API key
      tags:
      - apiKey
    post:
      description: Generate an API key
      operationId: GenerateApiKey
      parameters:
      - description: API key name
        in: path
        name: apiKeyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Generate an API key
      tags:
      - apiKey
  /build:
    delete:
      description: Delete ALL builds
      operationId: DeleteAllBuilds
      parameters:
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete ALL builds
      tags:
      - build
    get:
      description: List builds
      operationId: ListBuilds
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildDTO'
                type: array
          description: OK
      summary: List builds
      tags:
      - build
    post:
      description: Create a build
      operationId: CreateBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBuildDTO'
        description: Create Build DTO
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: string
          description: Created
      summary: Create a build
      tags:
      - build
      x-codegen-request-body-name: createBuildDto
  /build/prebuild/{prebuildId}:
    delete:
      description: Delete builds
      operationId: DeleteBuildsFromPrebuild
      parameters:
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete builds
      tags:
      - build
  /build/{buildId}:
    delete:
      description: Delete build
      operationId: DeleteBuild
      parameters:
      - description: Build ID
        in: path
        name: buildId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete build
      tags:
      - build
    get:
      description: Get build data
      operationId: GetBuild
      parameters:
      - description: Build ID
        in: path
        name: buildId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuildDTO'
          description: OK
      summary: Get build data
      tags:
      - build
  /container-registry/{server}:
    get:
      description: Get container registry
      operationId: GetContainerRegistry
      parameters:
      - description: Container registry server
        in: path
        name: server
        required: true
        schema:
          type: string
      - description: Workspace ID or Name
        in: query
        name: workspaceId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: OK
      summary: Get container registry
      tags:
      - container registry
  /env:
    get:
      description: List environment variables
      operationId: ListEnvironmentVariables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvironmentVariable'
                type: array
          description: OK
      summary: List environment variables
      tags:
      - envVar
    put:
      description: Set environment variable
      operationId: SetEnvironmentVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariable'
        description: Environment Variable
        required: true
      responses:
        "201":
          content: {}
          description: Created
      summary: Set environment variable
      tags:
      - envVar
      x-codegen-request-body-name: environmentVariable
  /env/{key}:
    delete:
      description: Delete environment variable
      operationId: DeleteEnvironmentVariable
      parameters:
      - description: Environment Variable Key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete environment variable
      tags:
      - envVar
  /gitprovider:
    get:
      description: List Git providers
      operationId: ListGitProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitProvider'
                type: array
          description: OK
      summary: List Git providers
      tags:
      - gitProvider
    put:
      description: Set Git provider
      operationId: SetGitProvider
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SetGitProviderConfig'
        description: Git provider
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Set Git provider
      tags:
      - gitProvider
      x-codegen-request-body-name: gitProviderConfig
  /gitprovider/context:
    post:
      description: Get Git context
      operationId: GetGitContext
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GetRepositoryContext'
        description: Get repository context
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepository'
          description: OK
      summary: Get Git context
      tags:
      - gitProvider
      x-codegen-request-body-name: repository
  /gitprovider/context/url:
    post:
      description: Get URL from Git repository
      operationId: GetUrlFromRepository
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitRepository'
        description: Git repository
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryUrl'
          description: OK
      summary: Get URL from Git repository
      tags:
      - gitProvider
      x-codegen-request-body-name: repository
  /gitprovider/for-url/{url}:
    get:
      description: List Git providers for url
      operationId: ListGitProvidersForUrl
      parameters:
      - description: Url
        in: path
        name: url
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitProvider'
                type: array
          description: OK
      summary: List Git providers for url
      tags:
      - gitProvider
  /gitprovider/id-for-url/{url}:
    get:
      description: Get Git provider ID
      operationId: GetGitProviderIdForUrl
      parameters:
      - description: Url
        in: path
        name: url
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Get Git provider ID
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}:
    delete:
      description: Remove Git provider
      operationId: RemoveGitProvider
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Remove Git provider
      tags:
      - gitProvider
    get:
      description: Get Git provider
      operationId: GetGitProvider
      parameters:
      - description: ID
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GitProvider'
          description: OK
      summary: Get Git provider
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/namespaces:
    get:
      description: Get Git namespaces
      operationId: GetNamespaces
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitNamespace'
                type: array
          description: OK
      summary: Get Git namespaces
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/user:
    get:
      description: Get Git context
      operationId: GetGitUser
      parameters:
      - description: Git Provider Id
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitUser'
          description: OK
      summary: Get Git context
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/repositories:
    get:
      description: Get Git repositories
      operationId: GetRepositories
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitRepository'
                type: array
          description: OK
      summary: Get Git repositories
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/branches:
    get:
      description: Get Git repository branches
      operationId: GetRepoBranches
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
      - description: Repository
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitBranch'
                type: array
          description: OK
      summary: Get Git repository branches
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/pull-requests:
    get:
      description: Get Git repository PRs
      operationId: GetRepoPRs
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
      - description: Repository
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitPullRequest'
                type: array
          description: OK
      summary: Get Git repository PRs
      tags:
      - gitProvider
  /health:
    get:
      description: Health check
      operationId: HealthCheck
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: Health check
  /job:
    get:
      description: List jobs
      operationId: ListJobs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                type: array
          description: OK
      summary: List jobs
      tags:
      - job
  /provider:
    get:
      description: List providers
      operationId: ListProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Provider'
                type: array
          description: OK
      summary: List providers
      tags:
      - provider
  /provider/install:
    post:
      description: Install a provider
      operationId: InstallProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallProviderRequest'
        description: Provider to install
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Install a provider
      tags:
      - provider
      x-codegen-request-body-name: provider
  /provider/{provider}/target-config-manifest:
    get:
      description: Get provider target config manifest
      operationId: GetTargetConfigManifest
      parameters:
      - description: Provider name
        in: path
        name: provider
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TargetConfigManifest'
          description: OK
      summary: Get provider target config manifest
      tags:
      - provider
  /provider/{provider}/uninstall:
    post:
      description: Uninstall a provider
      operationId: UninstallProvider
      parameters:
      - description: Provider to uninstall
        in: path
        name: provider
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Uninstall a provider
      tags:
      - provider
  /sample:
    get:
      description: List samples
      operationId: ListSamples
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sample'
                type: array
          description: OK
      summary: List samples
      tags:
      - sample
  /server/config:
    get:
      description: Get the server configuration
      operationId: GetConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          description: OK
      summary: Get the server configuration
      tags:
      - server
    post:
      description: Set the server configuration
      operationId: SetConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfig'
        description: Server configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          description: OK
      summary: Set the server configuration
      tags:
      - server
      x-codegen-request-body-name: config
  /server/logs:
    get:
      description: List server log files
      operationId: GetServerLogFiles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: List server log files
      tags:
      - server
  /server/network-key:
    post:
      description: Generate a new authentication key
      operationId: GenerateNetworkKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkKey'
          description: OK
      summary: Generate a new authentication key
      tags:
      - server
  /target:
    get:
      description: List targets
      operationId: ListTargets
      parameters:
      - description: Verbose
        in: query
        name: verbose
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TargetDTO'
                type: array
          description: OK
      summary: List targets
      tags:
      - target
    post:
      description: Create a target
      operationId: CreateTarget
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateTargetDTO'
        description: Create target
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: OK
      summary: Create a target
      tags:
      - target
      x-codegen-request-body-name: target
  /target-config:
    get:
      description: List target configs
      operationId: ListTargetConfigs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TargetConfig'
                type: array
          description: OK
      summary: List target configs
      tags:
      - target-config
    put:
      description: Add a target config
      operationId: AddTargetConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddTargetConfigDTO'
        description: Target config to add
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TargetConfig'
          description: OK
      summary: Add a target config
      tags:
      - target-config
      x-codegen-request-body-name: targetConfig
  /target-config/{configId}:
    delete:
      description: Remove a target config
      operationId: RemoveTargetConfig
      parameters:
      - description: Target Config Id
        in: path
        name: configId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Remove a target config
      tags:
      - target-config
  /target/{targetId}:
    delete:
      description: Remove target
      operationId: RemoveTarget
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: OK
      summary: Remove target
      tags:
      - target
    get:
      description: Get target info
      operationId: GetTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      - description: Verbose
        in: query
        name: verbose
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetDTO'
          description: OK
      summary: Get target info
      tags:
      - target
  /target/{targetId}/metadata:
    post:
      description: Set target metadata
      operationId: SetTargetMetadata
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SetTargetMetadata'
        description: Set Metadata
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Set target metadata
      tags:
      - target
      x-codegen-request-body-name: setMetadata
  /target/{targetId}/set-default:
    patch:
      description: Set target to be used by default
      operationId: SetDefaultTarget
      parameters:
      - description: Target ID or name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Set target to be used by default
      tags:
      - target
  /target/{targetId}/start:
    post:
      description: Start target
      operationId: StartTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Start target
      tags:
      - target
  /target/{targetId}/stop:
    post:
      description: Stop target
      operationId: StopTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Stop target
      tags:
      - target
  /workspace:
    get:
      description: List workspaces
      operationId: ListWorkspaces
      parameters:
      - description: Verbose
        in: query
        name: verbose
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkspaceDTO'
                type: array
          description: OK
      summary: List workspaces
      tags:
      - workspace
    post:
      description: Create a workspace
      operationId: CreateWorkspace
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateWorkspaceDTO'
        description: Create workspace
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDTO'
          description: OK
      summary: Create a workspace
      tags:
      - workspace
      x-codegen-request-body-name: workspace
  /workspace-template:
    get:
      description: List workspace templates
      operationId: ListWorkspaceTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkspaceTemplate'
                type: array
          description: OK
      summary: List workspace templates
      tags:
      - workspace-template
    put:
      description: Set workspace template data
      operationId: SetWorkspaceTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceTemplateDTO'
        description: Workspace template
        required: true
      responses:
        "201":
          content: {}
          description: Created
      summary: Set workspace template data
      tags:
      - workspace-template
      x-codegen-request-body-name: workspaceTemplate
  /workspace-template/default/{gitUrl}:
    get:
      description: Get workspace templates by git url
      operationId: GetDefaultWorkspaceTemplate
      parameters:
      - description: Git URL
        in: path
        name: gitUrl
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceTemplate'
          description: OK
      summary: Get workspace templates by git url
      tags:
      - workspace-template
  /workspace-template/prebuild:
    get:
      description: List prebuilds
      operationId: ListPrebuilds
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PrebuildDTO'
                type: array
          description: OK
      summary: List prebuilds
      tags:
      - prebuild
  /workspace-template/prebuild/process-git-event:
    post:
      description: ProcessGitEvent
      operationId: ProcessGitEvent
      requestBody:
        content:
          '*/*':
            schema:
              type: object
        description: Webhook event
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: ProcessGitEvent
      tags:
      - prebuild
      x-codegen-request-body-name: body
  /workspace-template/{templateName}:
    delete:
      description: Delete workspace template data
      operationId: DeleteWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete workspace template data
      tags:
      - workspace-template
    get:
      description: Get workspace template data
      operationId: GetWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplate'
          description: OK
      summary: Get workspace template data
      tags:
      - workspace-template
  /workspace-template/{templateName}/prebuild:
    get:
      description: List prebuilds for workspace template
      operationId: ListPrebuildsForWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PrebuildDTO'
                type: array
          description: OK
      summary: List prebuilds for workspace template
      tags:
      - prebuild
    put:
      description: Set prebuild
      operationId: SetPrebuild
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrebuildDTO'
        description: Prebuild
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: string
          description: Created
      summary: Set prebuild
      tags:
      - prebuild
      x-codegen-request-body-name: prebuild
  /workspace-template/{templateName}/prebuild/{prebuildId}:
    delete:
      description: Delete prebuild
      operationId: DeletePrebuild
      parameters:
      - description: Workspace template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete prebuild
      tags:
      - prebuild
    get:
      description: Get prebuild
      operationId: GetPrebuild
      parameters:
      - description: Workspace template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PrebuildDTO'
          description: OK
      summary: Get prebuild
      tags:
      - prebuild
  /workspace-template/{templateName}/set-default:
    patch:
      description: Set workspace template to default
      operationId: SetDefaultWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Set workspace template to default
      tags:
      - workspace-template
  /workspace/{workspaceId}:
    delete:
      description: Remove workspace
      operationId: RemoveWorkspace
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: OK
      summary: Remove workspace
      tags:
      - workspace
    get:
      description: Get workspace info
      operationId: GetWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Verbose
        in: query
        name: verbose
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDTO'
          description: OK
      summary: Get workspace info
      tags:
      - workspace
  /workspace/{workspaceId}/metadata:
    post:
      description: Set workspace metadata
      operationId: SetWorkspaceMetadata
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SetWorkspaceMetadata'
        description: Set Metadata
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Set workspace metadata
      tags:
      - workspace
      x-codegen-request-body-name: setMetadata
  /workspace/{workspaceId}/start:
    post:
      description: Start workspace
      operationId: StartWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Start workspace
      tags:
      - workspace
  /workspace/{workspaceId}/stop:
    post:
      description: Stop workspace
      operationId: StopWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Stop workspace
      tags:
      - workspace
components:
  schemas:
    AddTargetConfigDTO:
      example:
        name: name
        options: options
        providerInfo:
          agentlessTarget: true
          name: name
          label: label
          version: version
      properties:
        name:
          type: string
        options:
          type: string
        providerInfo:
          $ref: '#/components/schemas/TargetProviderInfo'
      required:
      - name
      - options
      - providerInfo
      type: object
    ApiKey:
      example:
        keyHash: keyHash
        name: name
        type: null
      properties:
        keyHash:
          type: string
        name:
          description: Workspace or client name
          type: string
        type:
          $ref: '#/components/schemas/models.ApiKeyType'
      required:
      - keyHash
      - name
      - type
      type: object
    BuildConfig:
      example:
        cachedBuild:
          image: image
          user: user
        devcontainer:
          filePath: filePath
      properties:
        cachedBuild:
          $ref: '#/components/schemas/CachedBuild'
        devcontainer:
          $ref: '#/components/schemas/DevcontainerConfig'
      type: object
    BuildDTO:
      example:
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        createdAt: createdAt
        image: image
        containerConfig:
          image: image
          user: user
        prebuildId: prebuildId
        lastJob:
          createdAt: createdAt
          resourceId: resourceId
          action: null
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        envVars:
          key: envVars
        id: id
        state:
          name: null
          error: error
          updatedAt: updatedAt
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
        user: user
        updatedAt: updatedAt
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        containerConfig:
          $ref: '#/components/schemas/ContainerConfig'
        createdAt:
          type: string
        envVars:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        image:
          type: string
        lastJob:
          $ref: '#/components/schemas/Job'
        prebuildId:
          type: string
        repository:
          $ref: '#/components/schemas/GitRepository'
        state:
          $ref: '#/components/schemas/ResourceState'
        updatedAt:
          type: string
        user:
          type: string
      required:
      - containerConfig
      - createdAt
      - envVars
      - id
      - prebuildId
      - repository
      - state
      - updatedAt
      type: object
    CachedBuild:
      example:
        image: image
        user: user
      properties:
        image:
          type: string
        user:
          type: string
      required:
      - image
      - user
      type: object
    CloneTarget:
      enum:
      - branch
      - commit
      type: string
      x-enum-varnames:
      - CloneTargetBranch
      - CloneTargetCommit
    ContainerConfig:
      example:
        image: image
        user: user
      properties:
        image:
          type: string
        user:
          type: string
      required:
      - image
      - user
      type: object
    ContainerRegistry:
      example:
        server: server
        password: password
        username: username
      properties:
        password:
          type: string
        server:
          type: string
        username:
          type: string
      required:
      - password
      - server
      - username
      type: object
    CreateBuildDTO:
      example:
        prebuildId: prebuildId
        envVars:
          key: envVars
        branch: branch
        workspaceTemplateName: workspaceTemplateName
      properties:
        branch:
          type: string
        envVars:
          additionalProperties:
            type: string
          type: object
        prebuildId:
          type: string
        workspaceTemplateName:
          type: string
      required:
      - branch
      - envVars
      - workspaceTemplateName
      type: object
    CreatePrebuildDTO:
      example:
        commitInterval: 0
        id: id
        branch: branch
        retention: 6
        triggerFiles:
        - triggerFiles
        - triggerFiles
      properties:
        branch:
          type: string
        commitInterval:
          type: integer
        id:
          type: string
        retention:
          type: integer
        triggerFiles:
          items:
            type: string
          type: array
      required:
      - retention
      type: object
    CreateTargetDTO:
      example:
        targetConfigName: targetConfigName
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        targetConfigName:
          type: string
      required:
      - id
      - name
      - targetConfigName
      type: object
    CreateWorkspaceDTO:
      example:
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        gitProviderConfigId: gitProviderConfigId
        image: image
        targetId: targetId
        envVars:
          key: envVars
        name: name
        id: id
        source:
          repository:
            owner: owner
            path: path
            name: name
            id: id
            source: source
            prNumber: 0
            branch: branch
            cloneTarget: null
            sha: sha
            url: url
        user: user
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        id:
          type: string
        image:
          type: string
        name:
          type: string
        source:
          $ref: '#/components/schemas/CreateWorkspaceSourceDTO'
        targetId:
          type: string
        user:
          type: string
      required:
      - envVars
      - id
      - name
      - source
      - targetId
      type: object
    CreateWorkspaceSourceDTO:
      example:
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
      properties:
        repository:
          $ref: '#/components/schemas/GitRepository'
      required:
      - repository
      type: object
    CreateWorkspaceTemplateDTO:
      example:
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        gitProviderConfigId: gitProviderConfigId
        image: image
        envVars:
          key: envVars
        name: name
        user: user
        repositoryUrl: repositoryUrl
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        image:
          type: string
        name:
          type: string
        repositoryUrl:
          type: string
        user:
          type: string
      required:
      - envVars
      - name
      - repositoryUrl
      type: object
    DevcontainerConfig:
      example:
        filePath: filePath
      properties:
        filePath:
          type: string
      required:
      - filePath
      type: object
    EnvironmentVariable:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    FRPSConfig:
      example:
        protocol: protocol
        port: 6
        domain: domain
      properties:
        domain:
          type: string
        port:
          type: integer
        protocol:
          type: string
      required:
      - domain
      - port
      - protocol
      type: object
    FileStatus:
      example:
        extra: extra
        name: name
        staging: null
        worktree: null
      properties:
        extra:
          type: string
        name:
          type: string
        staging:
          $ref: '#/components/schemas/Status'
        worktree:
          $ref: '#/components/schemas/Status'
      required:
      - extra
      - name
      - staging
      - worktree
      type: object
    GetRepositoryContext:
      example:
        owner: owner
        path: path
        name: name
        id: id
        source: source
        prNumber: 0
        branch: branch
        sha: sha
        url: url
      properties:
        branch:
          type: string
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        path:
          type: string
        prNumber:
          type: integer
        sha:
          type: string
        source:
          type: string
        url:
          type: string
      required:
      - url
      type: object
    GitBranch:
      example:
        name: name
        sha: sha
      properties:
        name:
          type: string
        sha:
          type: string
      required:
      - name
      - sha
      type: object
    GitNamespace:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    GitProvider:
      example:
        providerId: providerId
        baseApiUrl: baseApiUrl
        alias: alias
        signingKey: signingKey
        id: id
        signingMethod: null
        token: token
        username: username
      properties:
        alias:
          type: string
        baseApiUrl:
          type: string
        id:
          type: string
        providerId:
          type: string
        signingKey:
          type: string
        signingMethod:
          $ref: '#/components/schemas/SigningMethod'
        token:
          type: string
        username:
          type: string
      required:
      - alias
      - id
      - providerId
      - token
      - username
      type: object
    GitPullRequest:
      example:
        sourceRepoUrl: sourceRepoUrl
        sourceRepoId: sourceRepoId
        name: name
        sourceRepoOwner: sourceRepoOwner
        branch: branch
        sha: sha
        sourceRepoName: sourceRepoName
      properties:
        branch:
          type: string
        name:
          type: string
        sha:
          type: string
        sourceRepoId:
          type: string
        sourceRepoName:
          type: string
        sourceRepoOwner:
          type: string
        sourceRepoUrl:
          type: string
      required:
      - branch
      - name
      - sha
      - sourceRepoId
      - sourceRepoName
      - sourceRepoOwner
      - sourceRepoUrl
      type: object
    GitRepository:
      example:
        owner: owner
        path: path
        name: name
        id: id
        source: source
        prNumber: 0
        branch: branch
        cloneTarget: null
        sha: sha
        url: url
      properties:
        branch:
          type: string
        cloneTarget:
          $ref: '#/components/schemas/CloneTarget'
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        path:
          type: string
        prNumber:
          type: integer
        sha:
          type: string
        source:
          type: string
        url:
          type: string
      required:
      - branch
      - id
      - name
      - owner
      - sha
      - source
      - url
      type: object
    GitStatus:
      example:
        behind: 1
        fileStatus:
        - extra: extra
          name: name
          staging: null
          worktree: null
        - extra: extra
          name: name
          staging: null
          worktree: null
        ahead: 6
        branchPublished: true
        currentBranch: currentBranch
      properties:
        ahead:
          type: integer
        behind:
          type: integer
        branchPublished:
          type: boolean
        currentBranch:
          type: string
        fileStatus:
          items:
            $ref: '#/components/schemas/FileStatus'
          type: array
      required:
      - currentBranch
      - fileStatus
      type: object
    GitUser:
      example:
        name: name
        id: id
        email: email
        username: username
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
        username:
          type: string
      required:
      - email
      - id
      - name
      - username
      type: object
    InstallProviderRequest:
      example:
        downloadUrls:
          key: downloadUrls
        name: name
      properties:
        downloadUrls:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
      required:
      - downloadUrls
      - name
      type: object
    Job:
      example:
        createdAt: createdAt
        resourceId: resourceId
        action: null
        id: id
        state: null
        error: error
        resourceType: null
        updatedAt: updatedAt
      properties:
        action:
          $ref: '#/components/schemas/models.JobAction'
        createdAt:
          type: string
        error:
          type: string
        id:
          type: string
        resourceId:
          type: string
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        state:
          $ref: '#/components/schemas/JobState'
        updatedAt:
          type: string
      required:
      - action
      - createdAt
      - id
      - resourceId
      - resourceType
      - state
      - updatedAt
      type: object
    JobState:
      enum:
      - pending
      - running
      - error
      - success
      type: string
      x-enum-varnames:
      - JobStatePending
      - JobStateRunning
      - JobStateError
      - JobStateSuccess
    LogFileConfig:
      example:
        localTime: true
        path: path
        compress: true
        maxAge: 5
        maxBackups: 2
        maxSize: 7
      properties:
        compress:
          type: boolean
        localTime:
          type: boolean
        maxAge:
          type: integer
        maxBackups:
          type: integer
        maxSize:
          type: integer
        path:
          type: string
      required:
      - maxAge
      - maxBackups
      - maxSize
      - path
      type: object
    NetworkKey:
      example:
        key: key
      properties:
        key:
          type: string
      required:
      - key
      type: object
    PrebuildConfig:
      example:
        commitInterval: 0
        id: id
        branch: branch
        retention: 6
        triggerFiles:
        - triggerFiles
        - triggerFiles
      properties:
        branch:
          type: string
        commitInterval:
          type: integer
        id:
          type: string
        retention:
          type: integer
        triggerFiles:
          items:
            type: string
          type: array
      required:
      - branch
      - id
      - retention
      - triggerFiles
      type: object
    PrebuildDTO:
      example:
        commitInterval: 0
        id: id
        branch: branch
        retention: 6
        triggerFiles:
        - triggerFiles
        - triggerFiles
        workspaceTemplateName: workspaceTemplateName
      properties:
        branch:
          type: string
        commitInterval:
          type: integer
        id:
          type: string
        retention:
          type: integer
        triggerFiles:
          items:
            type: string
          type: array
        workspaceTemplateName:
          type: string
      required:
      - branch
      - id
      - retention
      - workspaceTemplateName
      type: object
    Provider:
      example:
        name: name
        label: label
        version: version
      properties:
        label:
          type: string
        name:
          type: string
        version:
          type: string
      required:
      - name
      - version
      type: object
    RepositoryUrl:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
    ResourceState:
      example:
        name: null
        error: error
        updatedAt: updatedAt
      properties:
        error:
          type: string
        name:
          $ref: '#/components/schemas/models.ResourceStateName'
        updatedAt:
          type: string
      required:
      - name
      - updatedAt
      type: object
    ResourceType:
      enum:
      - workspace
      - target
      - build
      type: string
      x-enum-varnames:
      - ResourceTypeWorkspace
      - ResourceTypeTarget
      - ResourceTypeBuild
    Sample:
      example:
        name: name
        description: description
        gitUrl: gitUrl
      properties:
        description:
          type: string
        gitUrl:
          type: string
        name:
          type: string
      required:
      - description
      - gitUrl
      - name
      type: object
    ServerConfig:
      example:
        registryUrl: registryUrl
        localBuilderRegistryPort: 5
        localBuilderRegistryImage: localBuilderRegistryImage
        builderRegistryServer: builderRegistryServer
        builderImage: builderImage
        defaultWorkspaceImage: defaultWorkspaceImage
        apiPort: 0
        headscalePort: 1
        buildImageNamespace: buildImageNamespace
        serverDownloadUrl: serverDownloadUrl
        binariesPath: binariesPath
        logFile:
          localTime: true
          path: path
          compress: true
          maxAge: 5
          maxBackups: 2
          maxSize: 7
        samplesIndexUrl: samplesIndexUrl
        providersDir: providersDir
        defaultWorkspaceUser: defaultWorkspaceUser
        id: id
        frps:
          protocol: protocol
          port: 6
          domain: domain
      properties:
        apiPort:
          type: integer
        binariesPath:
          type: string
        buildImageNamespace:
          type: string
        builderImage:
          type: string
        builderRegistryServer:
          type: string
        defaultWorkspaceImage:
          type: string
        defaultWorkspaceUser:
          type: string
        frps:
          $ref: '#/components/schemas/FRPSConfig'
        headscalePort:
          type: integer
        id:
          type: string
        localBuilderRegistryImage:
          type: string
        localBuilderRegistryPort:
          type: integer
        logFile:
          $ref: '#/components/schemas/LogFileConfig'
        providersDir:
          type: string
        registryUrl:
          type: string
        samplesIndexUrl:
          type: string
        serverDownloadUrl:
          type: string
      required:
      - apiPort
      - binariesPath
      - builderImage
      - builderRegistryServer
      - defaultWorkspaceImage
      - defaultWorkspaceUser
      - headscalePort
      - id
      - localBuilderRegistryImage
      - localBuilderRegistryPort
      - logFile
      - providersDir
      - registryUrl
      - serverDownloadUrl
      type: object
    SetGitProviderConfig:
      example:
        providerId: providerId
        baseApiUrl: baseApiUrl
        alias: alias
        signingKey: signingKey
        id: id
        signingMethod: null
        token: token
        username: username
      properties:
        alias:
          type: string
        baseApiUrl:
          type: string
        id:
          type: string
        providerId:
          type: string
        signingKey:
          type: string
        signingMethod:
          $ref: '#/components/schemas/SigningMethod'
        token:
          type: string
        username:
          type: string
      required:
      - providerId
      - token
      type: object
    SetTargetMetadata:
      example:
        uptime: 0
      properties:
        uptime:
          type: integer
      required:
      - uptime
      type: object
    SetWorkspaceMetadata:
      example:
        gitStatus:
          behind: 1
          fileStatus:
          - extra: extra
            name: name
            staging: null
            worktree: null
          - extra: extra
            name: name
            staging: null
            worktree: null
          ahead: 6
          branchPublished: true
          currentBranch: currentBranch
        uptime: 0
      properties:
        gitStatus:
          $ref: '#/components/schemas/GitStatus'
        uptime:
          type: integer
      required:
      - uptime
      type: object
    SigningMethod:
      enum:
      - ssh
      - gpg
      type: string
      x-enum-varnames:
      - SigningMethodSSH
      - SigningMethodGPG
    Status:
      enum:
      - Unmodified
      - Untracked
      - Modified
      - Added
      - Deleted
      - Renamed
      - Copied
      - Updated but unmerged
      type: string
      x-enum-varnames:
      - Unmodified
      - Untracked
      - Modified
      - Added
      - Deleted
      - Renamed
      - Copied
      - UpdatedButUnmerged
    Target:
      example:
        default: true
        metadata:
          targetId: targetId
          updatedAt: updatedAt
          uptime: 0
        targetConfig:
          deleted: true
          name: name
          options: options
          id: id
          providerInfo:
            agentlessTarget: true
            name: name
            label: label
            version: version
        lastJob:
          createdAt: createdAt
          resourceId: resourceId
          action: null
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        envVars:
          key: envVars
        name: name
        targetConfigId: targetConfigId
        id: id
        workspaces:
        - null
        - null
      properties:
        default:
          type: boolean
        envVars:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        lastJob:
          $ref: '#/components/schemas/Job'
        metadata:
          $ref: '#/components/schemas/TargetMetadata'
        name:
          type: string
        targetConfig:
          $ref: '#/components/schemas/TargetConfig'
        targetConfigId:
          type: string
        workspaces:
          items:
            $ref: '#/components/schemas/Workspace'
          type: array
      required:
      - default
      - envVars
      - id
      - name
      - targetConfig
      - targetConfigId
      - workspaces
      type: object
    TargetConfig:
      example:
        deleted: true
        name: name
        options: options
        id: id
        providerInfo:
          agentlessTarget: true
          name: name
          label: label
          version: version
      properties:
        deleted:
          type: boolean
        id:
          type: string
        name:
          type: string
        options:
          description: JSON encoded map of options
          type: string
        providerInfo:
          $ref: '#/components/schemas/TargetProviderInfo'
      required:
      - deleted
      - id
      - name
      - options
      - providerInfo
      type: object
    TargetConfigManifest:
      additionalProperties:
        $ref: '#/components/schemas/TargetConfigProperty'
      type: object
    TargetConfigProperty:
      properties:
        defaultValue:
          description: |-
            DefaultValue is converted into the appropriate type based on the Type
            If the property is a FilePath, the DefaultValue is a path to a directory
          type: string
        description:
          description: Brief description of the property
          type: string
        disabledPredicate:
          description: |-
            A regex string matched with the name of the target config to determine if the property should be disabled
            If the regex matches the target config name, the property will be disabled
            E.g. "^local$" will disable the property for the local target
          type: string
        inputMasked:
          type: boolean
        options:
          description: Options is only used if the Type is TargetConfigPropertyTypeOption
          items:
            type: string
          type: array
        suggestions:
          description: Suggestions is an optional list of auto-complete values to
            assist the user while filling the field
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/provider.TargetConfigPropertyType'
      type: object
    TargetDTO:
      example:
        default: true
        metadata:
          targetId: targetId
          updatedAt: updatedAt
          uptime: 0
        targetConfig:
          deleted: true
          name: name
          options: options
          id: id
          providerInfo:
            agentlessTarget: true
            name: name
            label: label
            version: version
        lastJob:
          createdAt: createdAt
          resourceId: resourceId
          action: null
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        envVars:
          key: envVars
        name: name
        targetConfigId: targetConfigId
        id: id
        state:
          name: null
          error: error
          updatedAt: updatedAt
        workspaces:
        - buildConfig:
            cachedBuild:
              image: image
              user: user
            devcontainer:
              filePath: filePath
          gitProviderConfigId: gitProviderConfigId
          image: image
          metadata:
            gitStatus:
              behind: 1
              fileStatus:
              - extra: extra
                name: name
                staging: null
                worktree: null
              - extra: extra
                name: name
                staging: null
                worktree: null
              ahead: 6
              branchPublished: true
              currentBranch: currentBranch
            updatedAt: updatedAt
            uptime: 5
            workspaceId: workspaceId
          targetId: targetId
          lastJob:
            createdAt: createdAt
            resourceId: resourceId
            action: null
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          envVars:
            key: envVars
          name: name
          id: id
          repository:
            owner: owner
            path: path
            name: name
            id: id
            source: source
            prNumber: 0
            branch: branch
            cloneTarget: null
            sha: sha
            url: url
          user: user
          target:
            default: true
            metadata:
              targetId: targetId
              updatedAt: updatedAt
              uptime: 0
            targetConfig:
              deleted: true
              name: name
              options: options
              id: id
              providerInfo:
                agentlessTarget: true
                name: name
                label: label
                version: version
            lastJob:
              createdAt: createdAt
              resourceId: resourceId
              action: null
              id: id
              state: null
              error: error
              resourceType: null
              updatedAt: updatedAt
            envVars:
              key: envVars
            name: name
            targetConfigId: targetConfigId
            id: id
            workspaces:
            - null
            - null
        - buildConfig:
            cachedBuild:
              image: image
              user: user
            devcontainer:
              filePath: filePath
          gitProviderConfigId: gitProviderConfigId
          image: image
          metadata:
            gitStatus:
              behind: 1
              fileStatus:
              - extra: extra
                name: name
                staging: null
                worktree: null
              - extra: extra
                name: name
                staging: null
                worktree: null
              ahead: 6
              branchPublished: true
              currentBranch: currentBranch
            updatedAt: updatedAt
            uptime: 5
            workspaceId: workspaceId
          targetId: targetId
          lastJob:
            createdAt: createdAt
            resourceId: resourceId
            action: null
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          envVars:
            key: envVars
          name: name
          id: id
          repository:
            owner: owner
            path: path
            name: name
            id: id
            source: source
            prNumber: 0
            branch: branch
            cloneTarget: null
            sha: sha
            url: url
          user: user
          target:
            default: true
            metadata:
              targetId: targetId
              updatedAt: updatedAt
              uptime: 0
            targetConfig:
              deleted: true
              name: name
              options: options
              id: id
              providerInfo:
                agentlessTarget: true
                name: name
                label: label
                version: version
            lastJob:
              createdAt: createdAt
              resourceId: resourceId
              action: null
              id: id
              state: null
              error: error
              resourceType: null
              updatedAt: updatedAt
            envVars:
              key: envVars
            name: name
            targetConfigId: targetConfigId
            id: id
            workspaces:
            - null
            - null
        info:
          providerMetadata: providerMetadata
          name: name
      properties:
        default:
          type: boolean
        envVars:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        info:
          $ref: '#/components/schemas/TargetInfo'
        lastJob:
          $ref: '#/components/schemas/Job'
        metadata:
          $ref: '#/components/schemas/TargetMetadata'
        name:
          type: string
        state:
          $ref: '#/components/schemas/ResourceState'
        targetConfig:
          $ref: '#/components/schemas/TargetConfig'
        targetConfigId:
          type: string
        workspaces:
          items:
            $ref: '#/components/schemas/Workspace'
          type: array
      required:
      - default
      - envVars
      - id
      - name
      - state
      - targetConfig
      - targetConfigId
      - workspaces
      type: object
    TargetInfo:
      example:
        providerMetadata: providerMetadata
        name: name
      properties:
        name:
          type: string
        providerMetadata:
          type: string
      required:
      - name
      type: object
    TargetMetadata:
      example:
        targetId: targetId
        updatedAt: updatedAt
        uptime: 0
      properties:
        targetId:
          type: string
        updatedAt:
          type: string
        uptime:
          type: integer
      required:
      - targetId
      - updatedAt
      - uptime
      type: object
    TargetProviderInfo:
      example:
        agentlessTarget: true
        name: name
        label: label
        version: version
      properties:
        agentlessTarget:
          type: boolean
        label:
          type: string
        name:
          type: string
        version:
          type: string
      required:
      - name
      - version
      type: object
    Workspace:
      example:
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        gitProviderConfigId: gitProviderConfigId
        image: image
        metadata:
          gitStatus:
            behind: 1
            fileStatus:
            - extra: extra
              name: name
              staging: null
              worktree: null
            - extra: extra
              name: name
              staging: null
              worktree: null
            ahead: 6
            branchPublished: true
            currentBranch: currentBranch
          updatedAt: updatedAt
          uptime: 5
          workspaceId: workspaceId
        targetId: targetId
        lastJob:
          createdAt: createdAt
          resourceId: resourceId
          action: null
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        envVars:
          key: envVars
        name: name
        id: id
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
        user: user
        target:
          default: true
          metadata:
            targetId: targetId
            updatedAt: updatedAt
            uptime: 0
          targetConfig:
            deleted: true
            name: name
            options: options
            id: id
            providerInfo:
              agentlessTarget: true
              name: name
              label: label
              version: version
          lastJob:
            createdAt: createdAt
            resourceId: resourceId
            action: null
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          envVars:
            key: envVars
          name: name
          targetConfigId: targetConfigId
          id: id
          workspaces:
          - null
          - null
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        id:
          type: string
        image:
          type: string
        lastJob:
          $ref: '#/components/schemas/Job'
        metadata:
          $ref: '#/components/schemas/WorkspaceMetadata'
        name:
          type: string
        repository:
          $ref: '#/components/schemas/GitRepository'
        target:
          $ref: '#/components/schemas/Target'
        targetId:
          type: string
        user:
          type: string
      required:
      - envVars
      - id
      - image
      - name
      - repository
      - target
      - targetId
      - user
      type: object
    WorkspaceDTO:
      example:
        gitProviderConfigId: gitProviderConfigId
        image: image
        metadata:
          gitStatus:
            behind: 1
            fileStatus:
            - extra: extra
              name: name
              staging: null
              worktree: null
            - extra: extra
              name: name
              staging: null
              worktree: null
            ahead: 6
            branchPublished: true
            currentBranch: currentBranch
          updatedAt: updatedAt
          uptime: 5
          workspaceId: workspaceId
        targetId: targetId
        envVars:
          key: envVars
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
        target:
          default: true
          metadata:
            targetId: targetId
            updatedAt: updatedAt
            uptime: 0
          targetConfig:
            deleted: true
            name: name
            options: options
            id: id
            providerInfo:
              agentlessTarget: true
              name: name
              label: label
              version: version
          lastJob:
            createdAt: createdAt
            resourceId: resourceId
            action: null
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          envVars:
            key: envVars
          name: name
          targetConfigId: targetConfigId
          id: id
          workspaces:
          - null
          - null
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        lastJob:
          createdAt: createdAt
          resourceId: resourceId
          action: null
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        name: name
        id: id
        state:
          name: null
          error: error
          updatedAt: updatedAt
        user: user
        info:
          providerMetadata: providerMetadata
          targetId: targetId
          isRunning: true
          created: created
          name: name
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        id:
          type: string
        image:
          type: string
        info:
          $ref: '#/components/schemas/WorkspaceInfo'
        lastJob:
          $ref: '#/components/schemas/Job'
        metadata:
          $ref: '#/components/schemas/WorkspaceMetadata'
        name:
          type: string
        repository:
          $ref: '#/components/schemas/GitRepository'
        state:
          $ref: '#/components/schemas/ResourceState'
        target:
          $ref: '#/components/schemas/Target'
        targetId:
          type: string
        user:
          type: string
      required:
      - envVars
      - id
      - image
      - name
      - repository
      - state
      - target
      - targetId
      - user
      type: object
    WorkspaceInfo:
      example:
        providerMetadata: providerMetadata
        targetId: targetId
        isRunning: true
        created: created
        name: name
      properties:
        created:
          type: string
        isRunning:
          type: boolean
        name:
          type: string
        providerMetadata:
          type: string
        targetId:
          type: string
      required:
      - created
      - isRunning
      - name
      - targetId
      type: object
    WorkspaceMetadata:
      example:
        gitStatus:
          behind: 1
          fileStatus:
          - extra: extra
            name: name
            staging: null
            worktree: null
          - extra: extra
            name: name
            staging: null
            worktree: null
          ahead: 6
          branchPublished: true
          currentBranch: currentBranch
        updatedAt: updatedAt
        uptime: 5
        workspaceId: workspaceId
      properties:
        gitStatus:
          $ref: '#/components/schemas/GitStatus'
        updatedAt:
          type: string
        uptime:
          type: integer
        workspaceId:
          type: string
      required:
      - gitStatus
      - updatedAt
      - uptime
      - workspaceId
      type: object
    WorkspaceTemplate:
      example:
        prebuilds:
        - commitInterval: 0
          id: id
          branch: branch
          retention: 6
          triggerFiles:
          - triggerFiles
          - triggerFiles
        - commitInterval: 0
          id: id
          branch: branch
          retention: 6
          triggerFiles:
          - triggerFiles
          - triggerFiles
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        gitProviderConfigId: gitProviderConfigId
        image: image
        default: true
        envVars:
          key: envVars
        name: name
        user: user
        repositoryUrl: repositoryUrl
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        default:
          type: boolean
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        image:
          type: string
        name:
          type: string
        prebuilds:
          items:
            $ref: '#/components/schemas/PrebuildConfig'
          type: array
        repositoryUrl:
          type: string
        user:
          type: string
      required:
      - default
      - envVars
      - image
      - name
      - repositoryUrl
      - user
      type: object
    models.ApiKeyType:
      enum:
      - client
      - workspace
      - target
      type: string
      x-enum-varnames:
      - ApiKeyTypeClient
      - ApiKeyTypeWorkspace
      - ApiKeyTypeTarget
    models.JobAction:
      enum:
      - create
      - start
      - stop
      - restart
      - delete
      - force-delete
      - run
      type: string
      x-enum-varnames:
      - JobActionCreate
      - JobActionStart
      - JobActionStop
      - JobActionRestart
      - JobActionDelete
      - JobActionForceDelete
      - JobActionRun
    models.ResourceStateName:
      enum:
      - undefined
      - pending-run
      - running
      - run-successful
      - pending-create
      - creating
      - pending-start
      - starting
      - started
      - pending-stop
      - stopping
      - stopped
      - pending-restart
      - error
      - unresponsive
      - pending-delete
      - pending-forced-delete
      - deleting
      - deleted
      type: string
      x-enum-varnames:
      - ResourceStateNameUndefined
      - ResourceStateNamePendingRun
      - ResourceStateNameRunning
      - ResourceStateNameRunSuccessful
      - ResourceStateNamePendingCreate
      - ResourceStateNameCreating
      - ResourceStateNamePendingStart
      - ResourceStateNameStarting
      - ResourceStateNameStarted
      - ResourceStateNamePendingStop
      - ResourceStateNameStopping
      - ResourceStateNameStopped
      - ResourceStateNamePendingRestart
      - ResourceStateNameError
      - ResourceStateNameUnresponsive
      - ResourceStateNamePendingDelete
      - ResourceStateNamePendingForcedDelete
      - ResourceStateNameDeleting
      - ResourceStateNameDeleted
    provider.TargetConfigPropertyType:
      enum:
      - string
      - option
      - boolean
      - int
      - float
      - file-path
      type: string
      x-enum-varnames:
      - TargetConfigPropertyTypeString
      - TargetConfigPropertyTypeOption
      - TargetConfigPropertyTypeBoolean
      - TargetConfigPropertyTypeInt
      - TargetConfigPropertyTypeFloat
      - TargetConfigPropertyTypeFilePath
  securitySchemes:
    Bearer:
      description: '"Type ''Bearer TOKEN'' to correctly set the API Key"'
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
