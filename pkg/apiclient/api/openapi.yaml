openapi: 3.0.1
info:
  contact: {}
  description: Daytona Server API
  title: Daytona Server API
  version: v0.0.0-dev
servers:
- url: http://localhost:3986/
security:
- Bearer: []
paths:
  /apikey:
    get:
      description: List API keys
      operationId: ListClientApiKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiKeyViewDTO'
                type: array
          description: OK
      summary: List API keys
      tags:
      - apiKey
  /apikey/{apiKeyName}:
    delete:
      description: Delete API key
      operationId: DeleteApiKey
      parameters:
      - description: API key name
        in: path
        name: apiKeyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Delete API key
      tags:
      - apiKey
    post:
      description: Create an API key
      operationId: CreateApiKey
      parameters:
      - description: API key name
        in: path
        name: apiKeyName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Create an API key
      tags:
      - apiKey
  /build:
    delete:
      description: Delete ALL builds
      operationId: DeleteAllBuilds
      parameters:
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete ALL builds
      tags:
      - build
    get:
      description: List builds
      operationId: ListBuilds
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildDTO'
                type: array
          description: OK
      summary: List builds
      tags:
      - build
    post:
      description: Create a build
      operationId: CreateBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBuildDTO'
        description: Create Build DTO
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: string
          description: Created
      summary: Create a build
      tags:
      - build
      x-codegen-request-body-name: createBuildDto
  /build/prebuild/{prebuildId}:
    delete:
      description: Delete builds
      operationId: DeleteBuildsFromPrebuild
      parameters:
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete builds
      tags:
      - build
  /build/successful/{repoUrl}:
    get:
      description: List successful builds for Git repository
      operationId: ListSuccessfulBuilds
      parameters:
      - description: Repository URL
        in: path
        name: repoUrl
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BuildDTO'
                type: array
          description: OK
      summary: List successful builds for Git repository
      tags:
      - build
  /build/{buildId}:
    delete:
      description: Delete build
      operationId: DeleteBuild
      parameters:
      - description: Build ID
        in: path
        name: buildId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete build
      tags:
      - build
    get:
      description: Find build
      operationId: FindBuild
      parameters:
      - description: Build ID
        in: path
        name: buildId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuildDTO'
          description: OK
      summary: Find build
      tags:
      - build
  /container-registry/{server}:
    get:
      description: Find container registry
      operationId: FindContainerRegistry
      parameters:
      - description: Container registry server
        in: path
        name: server
        required: true
        schema:
          type: string
      - description: Workspace ID or Name
        in: query
        name: workspaceId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: OK
      summary: Find container registry
      tags:
      - container registry
  /env:
    get:
      description: List environment variables
      operationId: ListEnvironmentVariables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnvironmentVariable'
                type: array
          description: OK
      summary: List environment variables
      tags:
      - envVar
    put:
      description: Save environment variable
      operationId: SaveEnvironmentVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariable'
        description: Environment Variable
        required: true
      responses:
        "201":
          content: {}
          description: Created
      summary: Save environment variable
      tags:
      - envVar
      x-codegen-request-body-name: environmentVariable
  /env/{key}:
    delete:
      description: Delete environment variable
      operationId: DeleteEnvironmentVariable
      parameters:
      - description: Environment Variable Key
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete environment variable
      tags:
      - envVar
  /gitprovider:
    get:
      description: List Git providers
      operationId: ListGitProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitProvider'
                type: array
          description: OK
      summary: List Git providers
      tags:
      - gitProvider
    put:
      description: Save Git provider
      operationId: SaveGitProvider
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SetGitProviderConfig'
        description: Git provider
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Save Git provider
      tags:
      - gitProvider
      x-codegen-request-body-name: gitProviderConfig
  /gitprovider/context:
    post:
      description: Get Git context
      operationId: GetGitContext
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GetRepositoryContext'
        description: Get repository context
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepository'
          description: OK
      summary: Get Git context
      tags:
      - gitProvider
      x-codegen-request-body-name: repository
  /gitprovider/context/url:
    post:
      description: Get URL from Git repository
      operationId: GetUrlFromRepository
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitRepository'
        description: Git repository
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryUrl'
          description: OK
      summary: Get URL from Git repository
      tags:
      - gitProvider
      x-codegen-request-body-name: repository
  /gitprovider/for-url/{url}:
    get:
      description: List Git providers for url
      operationId: ListGitProvidersForUrl
      parameters:
      - description: Url
        in: path
        name: url
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitProvider'
                type: array
          description: OK
      summary: List Git providers for url
      tags:
      - gitProvider
  /gitprovider/id-for-url/{url}:
    get:
      description: Find Git provider ID
      operationId: FindGitProviderIdForUrl
      parameters:
      - description: Url
        in: path
        name: url
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: Find Git provider ID
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}:
    delete:
      description: Delete Git provider
      operationId: DeleteGitProvider
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Delete Git provider
      tags:
      - gitProvider
    get:
      description: Find Git provider
      operationId: FindGitProvider
      parameters:
      - description: ID
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GitProvider'
          description: OK
      summary: Find Git provider
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/namespaces:
    get:
      description: Get Git namespaces
      operationId: GetNamespaces
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitNamespace'
                type: array
          description: OK
      summary: Get Git namespaces
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/user:
    get:
      description: Get Git context
      operationId: GetGitUser
      parameters:
      - description: Git Provider Id
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitUser'
          description: OK
      summary: Get Git context
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/repositories:
    get:
      description: Get Git repositories
      operationId: GetRepositories
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitRepository'
                type: array
          description: OK
      summary: Get Git repositories
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/branches:
    get:
      description: Get Git repository branches
      operationId: GetRepoBranches
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
      - description: Repository
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitBranch'
                type: array
          description: OK
      summary: Get Git repository branches
      tags:
      - gitProvider
  /gitprovider/{gitProviderId}/{namespaceId}/{repositoryId}/pull-requests:
    get:
      description: Get Git repository PRs
      operationId: GetRepoPRs
      parameters:
      - description: Git provider
        in: path
        name: gitProviderId
        required: true
        schema:
          type: string
      - description: Namespace
        in: path
        name: namespaceId
        required: true
        schema:
          type: string
      - description: Repository
        in: path
        name: repositoryId
        required: true
        schema:
          type: string
      - description: Page number
        in: query
        name: page
        schema:
          type: integer
      - description: Number of items per page
        in: query
        name: per_page
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitPullRequest'
                type: array
          description: OK
      summary: Get Git repository PRs
      tags:
      - gitProvider
  /health:
    get:
      description: Health check
      operationId: HealthCheck
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: OK
      summary: Health check
  /job:
    get:
      description: List jobs
      operationId: ListJobs
      parameters:
      - description: Job States
        explode: true
        in: query
        name: states
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Job Actions
        explode: true
        in: query
        name: actions
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Resource ID
        in: query
        name: resourceId
        schema:
          type: string
      - description: Resource Type
        in: query
        name: resourceType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                type: array
          description: OK
      summary: List jobs
      tags:
      - job
  /runner:
    get:
      description: List runners
      operationId: ListRunners
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RunnerDTO'
                type: array
          description: OK
      summary: List runners
      tags:
      - runner
    post:
      description: Create a runner
      operationId: CreateRunner
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateRunnerDTO'
        description: Runner
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRunnerResultDTO'
          description: OK
      summary: Create a runner
      tags:
      - runner
      x-codegen-request-body-name: runner
  /runner/provider:
    get:
      description: List providers
      operationId: ListProviders
      parameters:
      - description: Runner ID
        in: query
        name: runnerId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProviderInfo'
                type: array
          description: OK
      summary: List providers
      tags:
      - provider
  /runner/provider/for-install:
    get:
      description: List providers available for installation
      operationId: ListProvidersForInstall
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProviderDTO'
                type: array
          description: OK
      summary: List providers available for installation
      tags:
      - provider
  /runner/{runnerId}:
    delete:
      description: Delete runner
      operationId: DeleteRunner
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Delete runner
      tags:
      - runner
    get:
      description: Find a runner
      operationId: FindRunner
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunnerDTO'
          description: OK
      summary: Find a runner
      tags:
      - runner
  /runner/{runnerId}/jobs:
    get:
      description: List runner jobs
      operationId: ListRunnerJobs
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Job'
                type: array
          description: OK
      summary: List runner jobs
      tags:
      - runner
  /runner/{runnerId}/jobs/{jobId}/state:
    post:
      description: Update job state
      operationId: UpdateJobState
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      - description: Job ID
        in: path
        name: jobId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateJobState'
        description: Update job state
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Update job state
      tags:
      - runner
      x-codegen-request-body-name: updateJobState
  /runner/{runnerId}/metadata:
    post:
      description: Update runner metadata
      operationId: UpdateRunnerMetadata
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateRunnerMetadataDTO'
        description: Runner Metadata
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Update runner metadata
      tags:
      - runner
      x-codegen-request-body-name: runnerMetadata
  /runner/{runnerId}/provider:
    get:
      description: Get runner providers
      operationId: GetRunnerProviders
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProviderInfo'
                type: array
          description: OK
      summary: Get runner providers
      tags:
      - provider
  /runner/{runnerId}/provider/{providerName}/install:
    post:
      description: Install provider
      operationId: InstallProvider
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      - description: Provider name
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: Provider version - defaults to 'latest'
        in: query
        name: providerVersion
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Install provider
      tags:
      - provider
  /runner/{runnerId}/provider/{providerName}/uninstall:
    post:
      description: Uninstall provider
      operationId: UninstallProvider
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      - description: Provider name
        in: path
        name: providerName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Uninstall provider
      tags:
      - provider
  /runner/{runnerId}/provider/{providerName}/update:
    post:
      description: Update provider
      operationId: UpdateProvider
      parameters:
      - description: Runner ID
        in: path
        name: runnerId
        required: true
        schema:
          type: string
      - description: Provider name
        in: path
        name: providerName
        required: true
        schema:
          type: string
      - description: Provider version - defaults to 'latest'
        in: query
        name: providerVersion
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Update provider
      tags:
      - provider
  /sample:
    get:
      description: List samples
      operationId: ListSamples
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Sample'
                type: array
          description: OK
      summary: List samples
      tags:
      - sample
  /server/config:
    get:
      description: Get the server configuration
      operationId: GetConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          description: OK
      summary: Get the server configuration
      tags:
      - server
    put:
      description: Save the server configuration
      operationId: SaveConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerConfig'
        description: Server configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfig'
          description: OK
      summary: Save the server configuration
      tags:
      - server
      x-codegen-request-body-name: config
  /server/logs:
    get:
      description: Get server log files
      operationId: GetServerLogFiles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Get server log files
      tags:
      - server
  /server/network-key:
    post:
      description: Create a new authentication key
      operationId: CreateNetworkKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkKey'
          description: OK
      summary: Create a new authentication key
      tags:
      - server
  /target:
    get:
      description: List targets
      operationId: ListTargets
      parameters:
      - description: Show target config options
        in: query
        name: showOptions
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TargetDTO'
                type: array
          description: OK
      summary: List targets
      tags:
      - target
    post:
      description: Create a target
      operationId: CreateTarget
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateTargetDTO'
        description: Create target
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
          description: OK
      summary: Create a target
      tags:
      - target
      x-codegen-request-body-name: target
  /target-config:
    get:
      description: List target configs
      operationId: ListTargetConfigs
      parameters:
      - description: Show target config options
        in: query
        name: showOptions
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TargetConfig'
                type: array
          description: OK
      summary: List target configs
      tags:
      - target-config
    post:
      description: Create a target config
      operationId: CreateTargetConfig
      parameters:
      - description: Show target config options
        in: query
        name: showOptions
        schema:
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateTargetConfigDTO'
        description: Target config to create
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TargetConfig'
          description: OK
      summary: Create a target config
      tags:
      - target-config
      x-codegen-request-body-name: targetConfig
  /target-config/{configId}:
    delete:
      description: Delete a target config
      operationId: DeleteTargetConfig
      parameters:
      - description: Target Config Id
        in: path
        name: configId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a target config
      tags:
      - target-config
  /target/{targetId}:
    delete:
      description: Delete target
      operationId: DeleteTarget
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: OK
      summary: Delete target
      tags:
      - target
    get:
      description: Find target
      operationId: FindTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      - description: Show target config options
        in: query
        name: showOptions
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetDTO'
          description: OK
      summary: Find target
      tags:
      - target
  /target/{targetId}/handle-successful-creation:
    post:
      description: Handles successful creation of the target
      operationId: HandleSuccessfulCreation
      parameters:
      - description: Target ID or name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Handles successful creation of the target
      tags:
      - target
  /target/{targetId}/metadata:
    post:
      description: Update target metadata
      operationId: UpdateTargetMetadata
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateTargetMetadataDTO'
        description: Target Metadata
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Update target metadata
      tags:
      - target
      x-codegen-request-body-name: targetMetadata
  /target/{targetId}/provider-metadata:
    post:
      description: Update target provider metadata
      operationId: UpdateTargetProviderMetadata
      parameters:
      - description: Target ID
        in: path
        name: targetId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateTargetProviderMetadataDTO'
        description: Provider metadata
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Update target provider metadata
      tags:
      - target
      x-codegen-request-body-name: metadata
  /target/{targetId}/restart:
    post:
      description: Restart target
      operationId: RestartTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Restart target
      tags:
      - target
  /target/{targetId}/set-default:
    patch:
      description: Set target to be used by default
      operationId: SetDefaultTarget
      parameters:
      - description: Target ID or name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Set target to be used by default
      tags:
      - target
  /target/{targetId}/start:
    post:
      description: Start target
      operationId: StartTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Start target
      tags:
      - target
  /target/{targetId}/state:
    get:
      description: Get target state
      operationId: GetTargetState
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceState'
          description: OK
      summary: Get target state
      tags:
      - target
  /target/{targetId}/stop:
    post:
      description: Stop target
      operationId: StopTarget
      parameters:
      - description: Target ID or Name
        in: path
        name: targetId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Stop target
      tags:
      - target
  /workspace:
    get:
      description: List workspaces
      operationId: ListWorkspaces
      parameters:
      - description: JSON encoded labels
        in: query
        name: labels
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkspaceDTO'
                type: array
          description: OK
      summary: List workspaces
      tags:
      - workspace
    post:
      description: Create a workspace
      operationId: CreateWorkspace
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateWorkspaceDTO'
        description: Create workspace
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDTO'
          description: OK
      summary: Create a workspace
      tags:
      - workspace
      x-codegen-request-body-name: workspace
  /workspace-template:
    get:
      description: List workspace templates
      operationId: ListWorkspaceTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkspaceTemplate'
                type: array
          description: OK
      summary: List workspace templates
      tags:
      - workspace-template
    put:
      description: Set workspace template data
      operationId: SaveWorkspaceTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceTemplateDTO'
        description: Workspace template
        required: true
      responses:
        "201":
          content: {}
          description: Created
      summary: Set workspace template data
      tags:
      - workspace-template
      x-codegen-request-body-name: workspaceTemplate
  /workspace-template/default/{gitUrl}:
    get:
      description: Get default workspace templates by git url
      operationId: GetDefaultWorkspaceTemplate
      parameters:
      - description: Git URL
        in: path
        name: gitUrl
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceTemplate'
          description: OK
      summary: Get default workspace templates by git url
      tags:
      - workspace-template
  /workspace-template/prebuild:
    get:
      description: List prebuilds
      operationId: ListPrebuilds
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PrebuildDTO'
                type: array
          description: OK
      summary: List prebuilds
      tags:
      - prebuild
  /workspace-template/prebuild/process-git-event:
    post:
      description: ProcessGitEvent
      operationId: ProcessGitEvent
      requestBody:
        content:
          '*/*':
            schema:
              type: object
        description: Webhook event
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: ProcessGitEvent
      tags:
      - prebuild
      x-codegen-request-body-name: body
  /workspace-template/{templateName}:
    delete:
      description: Delete workspace template data
      operationId: DeleteWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete workspace template data
      tags:
      - workspace-template
    get:
      description: Find a workspace template
      operationId: FindWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTemplate'
          description: OK
      summary: Find a workspace template
      tags:
      - workspace-template
  /workspace-template/{templateName}/prebuild:
    get:
      description: List prebuilds for workspace template
      operationId: ListPrebuildsForWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/PrebuildDTO'
                type: array
          description: OK
      summary: List prebuilds for workspace template
      tags:
      - prebuild
    put:
      description: Save prebuild
      operationId: SavePrebuild
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrebuildDTO'
        description: Prebuild
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: string
          description: Created
      summary: Save prebuild
      tags:
      - prebuild
      x-codegen-request-body-name: prebuild
  /workspace-template/{templateName}/prebuild/{prebuildId}:
    delete:
      description: Delete prebuild
      operationId: DeletePrebuild
      parameters:
      - description: Workspace template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete prebuild
      tags:
      - prebuild
    get:
      description: Find prebuild
      operationId: FindPrebuild
      parameters:
      - description: Workspace template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      - description: Prebuild ID
        in: path
        name: prebuildId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PrebuildDTO'
          description: OK
      summary: Find prebuild
      tags:
      - prebuild
  /workspace-template/{templateName}/set-default:
    patch:
      description: Set workspace template to default
      operationId: SetDefaultWorkspaceTemplate
      parameters:
      - description: Template name
        in: path
        name: templateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Set workspace template to default
      tags:
      - workspace-template
  /workspace/{workspaceId}:
    delete:
      description: Delete workspace
      operationId: DeleteWorkspace
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Force
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: OK
      summary: Delete workspace
      tags:
      - workspace
    get:
      description: Find workspace
      operationId: FindWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDTO'
          description: OK
      summary: Find workspace
      tags:
      - workspace
  /workspace/{workspaceId}/labels:
    post:
      description: Update workspace labels
      operationId: UpdateWorkspaceLabels
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              additionalProperties:
                type: string
              type: object
        description: Labels
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDTO'
          description: OK
      summary: Update workspace labels
      tags:
      - workspace
      x-codegen-request-body-name: labels
  /workspace/{workspaceId}/metadata:
    post:
      description: Update workspace metadata
      operationId: UpdateWorkspaceMetadata
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceMetadataDTO'
        description: Workspace Metadata
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Update workspace metadata
      tags:
      - workspace
      x-codegen-request-body-name: workspaceMetadata
  /workspace/{workspaceId}/provider-metadata:
    post:
      description: Update workspace provider metadata
      operationId: UpdateWorkspaceProviderMetadata
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceProviderMetadataDTO'
        description: Provider metadata
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Update workspace provider metadata
      tags:
      - workspace
      x-codegen-request-body-name: metadata
  /workspace/{workspaceId}/restart:
    post:
      description: Restart workspace
      operationId: RestartWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Restart workspace
      tags:
      - workspace
  /workspace/{workspaceId}/start:
    post:
      description: Start workspace
      operationId: StartWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Start workspace
      tags:
      - workspace
  /workspace/{workspaceId}/state:
    get:
      description: Get workspace state
      operationId: GetWorkspaceState
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceState'
          description: OK
      summary: Get workspace state
      tags:
      - workspace
  /workspace/{workspaceId}/stop:
    post:
      description: Stop workspace
      operationId: StopWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Stop workspace
      tags:
      - workspace
  /workspace/{workspaceId}/toolbox/files:
    delete:
      description: Delete file inside a workspace
      operationId: FsDeleteFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete file
      tags:
      - workspace toolbox
    get:
      description: List files inside a workspace
      operationId: FsListFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileInfo'
                type: array
          description: OK
      summary: List files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/download:
    get:
      description: Download file from a workspace
      operationId: FsDownloadFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: response contains the file
      summary: Download file
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/find:
    get:
      description: Search for text/pattern inside a workspace files
      operationId: FsFindInFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Pattern
        in: query
        name: pattern
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Match'
                type: array
          description: OK
      summary: Search for text/pattern in files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/folder:
    post:
      description: Create folder inside a workspace
      operationId: FsCreateFolder
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Mode
        in: query
        name: mode
        required: true
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: Created
      summary: Create folder
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/info:
    get:
      description: Get file info inside a workspace
      operationId: FsGetFileDetails
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: OK
      summary: Get file info
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/move:
    post:
      description: Create folder inside a workspace
      operationId: FsMoveFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Source path
        in: query
        name: source
        required: true
        schema:
          type: string
      - description: Destination path
        in: query
        name: destination
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Create folder
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/permissions:
    post:
      description: Set file owner/group/permissions inside a workspace
      operationId: FsSetFilePermissions
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Owner
        in: query
        name: owner
        schema:
          type: string
      - description: Group
        in: query
        name: group
        schema:
          type: string
      - description: Mode
        in: query
        name: mode
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      summary: Set file owner/group/permissions
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/replace:
    post:
      description: Repleace text/pattern in mutilple files inside a workspace
      operationId: FsReplaceInFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReplaceRequest'
        description: ReplaceParams
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReplaceResult'
                type: array
          description: OK
      summary: Repleace text/pattern in files
      tags:
      - workspace toolbox
      x-codegen-request-body-name: replace
  /workspace/{workspaceId}/toolbox/files/search:
    get:
      description: Search for files inside a workspace
      operationId: FsSearchFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: Pattern
        in: query
        name: pattern
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFilesResponse'
          description: OK
      summary: Search for files
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/files/upload:
    post:
      description: Upload file inside a workspace
      operationId: FsUploadFile
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path
        in: query
        name: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FsUploadFile_request'
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Upload file
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/add:
    post:
      description: Add files to git commit
      operationId: GitAddFiles
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitAddRequest'
        description: GitAddRequest
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Add files
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/git/branches:
    get:
      description: Get branch list from git repository inside a workspace
      operationId: GitBranchList
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path to git repository
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBranchResponse'
          description: OK
      summary: Get branch list
      tags:
      - workspace toolbox
    post:
      description: Create branch on git repository inside a workspace
      operationId: GitCreateBranch
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitBranchRequest'
        description: GitBranchRequest
        required: true
      responses:
        "201":
          content: {}
          description: Created
      summary: Create branch
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/git/clone:
    post:
      description: Clone git repository inside a workspace
      operationId: GitCloneRepository
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitCloneRequest'
        description: GitCloneRequest
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Clone git repository
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/git/commit:
    post:
      description: Commit changes to git repository inside a workspace
      operationId: GitCommitChanges
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitCommitRequest'
        description: GitCommitRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitCommitResponse'
          description: OK
      summary: Commit changes
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/git/history:
    get:
      description: Get commit history from git repository inside a workspace
      operationId: GitCommitHistory
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path to git repository
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GitCommitInfo'
                type: array
          description: OK
      summary: Get commit history
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/git/pull:
    post:
      description: Pull changes from remote to git repository inside a workspace
      operationId: GitPullChanges
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitRepoRequest'
        description: Git pull request
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Pull changes
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/git/push:
    post:
      description: Push changes to remote from git repository inside a workspace
      operationId: GitPushChanges
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GitRepoRequest'
        description: Git push request
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Push changes
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/git/status:
    get:
      description: Get status from git repository inside a workspace
      operationId: GitGitStatus
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Path to git repository
        in: query
        name: path
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitStatus'
          description: OK
      summary: Get git status
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/completions:
    post:
      description: The Completion request is sent from the client to the server to
        compute completion items at a given cursor position.
      operationId: LspCompletions
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LspCompletionParams'
        description: LspCompletionParams
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionList'
          description: OK
      summary: Get Lsp Completions
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/lsp/did-close:
    post:
      description: The document close notification is sent from the client to the
        server when the document got closed in the client.
      operationId: LspDidClose
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LspDocumentRequest'
        description: LspDocumentRequest
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Call Lsp DidClose
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/lsp/did-open:
    post:
      description: The document open notification is sent from the client to the server
        to signal newly opened text documents.
      operationId: LspDidOpen
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LspDocumentRequest'
        description: LspDocumentRequest
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Call Lsp DidOpen
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/lsp/document-symbols:
    get:
      description: The document symbol request is sent from the client to the server.
      operationId: LspDocumentSymbols
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Language ID
        in: query
        name: languageId
        required: true
        schema:
          type: string
      - description: Path to project
        in: query
        name: pathToProject
        required: true
        schema:
          type: string
      - description: Document Uri
        in: query
        name: uri
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LspSymbol'
                type: array
          description: OK
      summary: Call Lsp DocumentSymbols
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/lsp/start:
    post:
      description: Start Lsp server process inside a workspace
      operationId: LspStart
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LspServerRequest'
        description: LspServerRequest
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Start Lsp server
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/lsp/stop:
    post:
      description: Stop Lsp server process inside a workspace
      operationId: LspStop
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/LspServerRequest'
        description: LspServerRequest
        required: true
      responses:
        "200":
          content: {}
          description: OK
      summary: Stop Lsp server
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/lsp/workspace-symbols:
    get:
      description: The workspace symbol request is sent from the client to the server
        to list project-wide symbols matching the query string.
      operationId: LspWorkspaceSymbols
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Language ID
        in: query
        name: languageId
        required: true
        schema:
          type: string
      - description: Path to project
        in: query
        name: pathToProject
        required: true
        schema:
          type: string
      - description: Symbol Query
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LspSymbol'
                type: array
          description: OK
      summary: Call Lsp WorkspaceSymbols
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/execute:
    post:
      description: Execute command synchronously inside a workspace
      operationId: ProcessExecuteCommand
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ExecuteRequest'
        description: Execute command request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteResponse'
          description: OK
      summary: Execute command
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/process/session:
    get:
      description: List sessions inside workspace project
      operationId: ListSessions
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                type: array
          description: OK
      summary: List sessions
      tags:
      - workspace toolbox
    post:
      description: Create exec session inside workspace project
      operationId: CreateSession
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        description: Create session request
        required: true
      responses:
        "201":
          content: {}
          description: Created
      summary: Create exec session
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/process/session/{sessionId}:
    delete:
      description: Delete a session inside workspace project
      operationId: DeleteSession
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Session ID
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete session
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/session/{sessionId}/command/{commandId}/logs:
    get:
      description: |-
        Get logs of a command inside a session inside workspace project
        Connect with websocket to get a stream of the logs
      operationId: GetSessionCommandLogs
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Session ID
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: Command ID
        in: path
        name: commandId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: command logs
      summary: Get session command logs
      tags:
      - workspace toolbox
  /workspace/{workspaceId}/toolbox/process/session/{sessionId}/exec:
    post:
      description: Execute command inside a session inside workspace project
      operationId: SessionExecuteCommand
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      - description: Session ID
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SessionExecuteRequest'
        description: Execute command request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionExecuteResponse'
          description: OK
      summary: Execute command in session
      tags:
      - workspace toolbox
      x-codegen-request-body-name: params
  /workspace/{workspaceId}/toolbox/workspace-dir:
    get:
      description: Get workspace directory
      operationId: GetWorkspaceDir
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDirResponse'
          description: OK
      summary: Get workspace dir
      tags:
      - workspace toolbox
components:
  schemas:
    ApiKeyViewDTO:
      example:
        current: true
        name: name
        type: null
      properties:
        current:
          type: boolean
        name:
          type: string
        type:
          $ref: '#/components/schemas/models.ApiKeyType'
      required:
      - current
      - name
      - type
      type: object
    BuildConfig:
      example:
        cachedBuild:
          image: image
          user: user
        devcontainer:
          filePath: filePath
      properties:
        cachedBuild:
          $ref: '#/components/schemas/CachedBuild'
        devcontainer:
          $ref: '#/components/schemas/DevcontainerConfig'
      type: object
    BuildDTO:
      example:
        image: image
        containerConfig:
          image: image
          user: user
        envVars:
          key: envVars
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        createdAt: createdAt
        prebuildId: prebuildId
        lastJobId: lastJobId
        lastJob:
          createdAt: createdAt
          metadata: metadata
          resourceId: resourceId
          action: null
          runnerId: runnerId
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        id: id
        state:
          name: null
          error: error
          updatedAt: updatedAt
        user: user
        updatedAt: updatedAt
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        containerConfig:
          $ref: '#/components/schemas/ContainerConfig'
        createdAt:
          type: string
        envVars:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        image:
          type: string
        lastJob:
          $ref: '#/components/schemas/Job'
        lastJobId:
          type: string
        prebuildId:
          type: string
        repository:
          $ref: '#/components/schemas/GitRepository'
        state:
          $ref: '#/components/schemas/ResourceState'
        updatedAt:
          type: string
        user:
          type: string
      required:
      - containerConfig
      - createdAt
      - envVars
      - id
      - repository
      - state
      - updatedAt
      type: object
    CachedBuild:
      example:
        image: image
        user: user
      properties:
        image:
          type: string
        user:
          type: string
      required:
      - image
      - user
      type: object
    CloneTarget:
      enum:
      - branch
      - commit
      type: string
      x-enum-varnames:
      - CloneTargetBranch
      - CloneTargetCommit
    Command:
      example:
        exitCode: 0
        id: id
        command: command
      properties:
        command:
          type: string
        exitCode:
          type: integer
        id:
          type: string
      required:
      - command
      - id
      type: object
    CompletionContext:
      example:
        triggerCharacter: triggerCharacter
        triggerKind: 0
      properties:
        triggerCharacter:
          type: string
        triggerKind:
          type: integer
      required:
      - triggerKind
      type: object
    CompletionItem:
      example:
        insertText: insertText
        kind: 0
        sortText: sortText
        documentation: "{}"
        detail: detail
        filterText: filterText
        label: label
      properties:
        detail:
          type: string
        documentation:
          type: object
        filterText:
          type: string
        insertText:
          type: string
        kind:
          type: integer
        label:
          type: string
        sortText:
          type: string
      required:
      - label
      type: object
    CompletionList:
      example:
        items:
        - insertText: insertText
          kind: 0
          sortText: sortText
          documentation: "{}"
          detail: detail
          filterText: filterText
          label: label
        - insertText: insertText
          kind: 0
          sortText: sortText
          documentation: "{}"
          detail: detail
          filterText: filterText
          label: label
        isIncomplete: true
      properties:
        isIncomplete:
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/CompletionItem'
          type: array
      required:
      - isIncomplete
      - items
      type: object
    ContainerConfig:
      example:
        image: image
        user: user
      properties:
        image:
          type: string
        user:
          type: string
      required:
      - image
      - user
      type: object
    ContainerRegistry:
      example:
        server: server
        password: password
        username: username
      properties:
        password:
          type: string
        server:
          type: string
        username:
          type: string
      required:
      - password
      - server
      - username
      type: object
    CreateBuildDTO:
      example:
        prebuildId: prebuildId
        envVars:
          key: envVars
        branch: branch
        workspaceTemplateName: workspaceTemplateName
      properties:
        branch:
          type: string
        envVars:
          additionalProperties:
            type: string
          type: object
        prebuildId:
          type: string
        workspaceTemplateName:
          type: string
      required:
      - branch
      - envVars
      - workspaceTemplateName
      type: object
    CreatePrebuildDTO:
      example:
        commitInterval: 0
        id: id
        branch: branch
        retention: 6
        triggerFiles:
        - triggerFiles
        - triggerFiles
      properties:
        branch:
          type: string
        commitInterval:
          type: integer
        id:
          type: string
        retention:
          type: integer
        triggerFiles:
          items:
            type: string
          type: array
      required:
      - retention
      type: object
    CreateRunnerDTO:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    CreateRunnerResultDTO:
      example:
        metadata:
          runningJobs: 0
          runnerId: runnerId
          providers:
          - runnerName: runnerName
            targetConfigManifest:
              key:
                defaultValue: defaultValue
                options:
                - options
                - options
                description: description
                suggestions:
                - suggestions
                - suggestions
                type: null
                disabledPredicate: disabledPredicate
                inputMasked: true
            agentlessTarget: true
            name: name
            runnerId: runnerId
            label: label
            version: version
          - runnerName: runnerName
            targetConfigManifest:
              key:
                defaultValue: defaultValue
                options:
                - options
                - options
                description: description
                suggestions:
                - suggestions
                - suggestions
                type: null
                disabledPredicate: disabledPredicate
                inputMasked: true
            agentlessTarget: true
            name: name
            runnerId: runnerId
            label: label
            version: version
          updatedAt: updatedAt
          uptime: 6
        apiKey: apiKey
        name: name
        id: id
      properties:
        apiKey:
          type: string
        id:
          type: string
        metadata:
          $ref: '#/components/schemas/RunnerMetadata'
        name:
          type: string
      required:
      - apiKey
      - id
      - name
      type: object
    CreateSessionRequest:
      example:
        sessionId: sessionId
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      type: object
    CreateTargetConfigDTO:
      example:
        name: name
        options: options
        providerInfo:
          runnerName: runnerName
          targetConfigManifest:
            key:
              defaultValue: defaultValue
              options:
              - options
              - options
              description: description
              suggestions:
              - suggestions
              - suggestions
              type: null
              disabledPredicate: disabledPredicate
              inputMasked: true
          agentlessTarget: true
          name: name
          runnerId: runnerId
          label: label
          version: version
      properties:
        name:
          type: string
        options:
          type: string
        providerInfo:
          $ref: '#/components/schemas/ProviderInfo'
      required:
      - name
      - options
      - providerInfo
      type: object
    CreateTargetDTO:
      example:
        name: name
        targetConfigId: targetConfigId
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        targetConfigId:
          type: string
      required:
      - id
      - name
      - targetConfigId
      type: object
    CreateWorkspaceDTO:
      example:
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        gitProviderConfigId: gitProviderConfigId
        image: image
        targetId: targetId
        envVars:
          key: envVars
        name: name
        id: id
        source:
          repository:
            owner: owner
            path: path
            name: name
            id: id
            source: source
            prNumber: 0
            branch: branch
            cloneTarget: null
            sha: sha
            url: url
        user: user
        labels:
          key: labels
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        id:
          type: string
        image:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        source:
          $ref: '#/components/schemas/CreateWorkspaceSourceDTO'
        targetId:
          type: string
        user:
          type: string
      required:
      - envVars
      - id
      - labels
      - name
      - source
      - targetId
      type: object
    CreateWorkspaceSourceDTO:
      example:
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
      properties:
        repository:
          $ref: '#/components/schemas/GitRepository'
      required:
      - repository
      type: object
    CreateWorkspaceTemplateDTO:
      example:
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        gitProviderConfigId: gitProviderConfigId
        image: image
        envVars:
          key: envVars
        name: name
        user: user
        repositoryUrl: repositoryUrl
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        image:
          type: string
        name:
          type: string
        repositoryUrl:
          type: string
        user:
          type: string
      required:
      - envVars
      - name
      - repositoryUrl
      type: object
    DevcontainerConfig:
      example:
        filePath: filePath
      properties:
        filePath:
          type: string
      required:
      - filePath
      type: object
    EnvironmentVariable:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    ExecuteRequest:
      example:
        command: command
        timeout: 0
      properties:
        command:
          type: string
        timeout:
          description: "Timeout in seconds, defaults to 10 seconds"
          type: integer
      required:
      - command
      type: object
    ExecuteResponse:
      example:
        result: result
        code: 0
      properties:
        code:
          type: integer
        result:
          type: string
      required:
      - code
      - result
      type: object
    FRPSConfig:
      example:
        protocol: protocol
        port: 6
        domain: domain
      properties:
        domain:
          type: string
        port:
          type: integer
        protocol:
          type: string
      required:
      - domain
      - port
      - protocol
      type: object
    FileInfo:
      example:
        mode: mode
        owner: owner
        size: 0
        modTime: modTime
        permissions: permissions
        name: name
        group: group
        isDir: true
      properties:
        group:
          type: string
        isDir:
          type: boolean
        modTime:
          type: string
        mode:
          type: string
        name:
          type: string
        owner:
          type: string
        permissions:
          type: string
        size:
          type: integer
      required:
      - group
      - isDir
      - modTime
      - mode
      - name
      - owner
      - permissions
      - size
      type: object
    FileStatus:
      example:
        extra: extra
        name: name
        staging: null
        worktree: null
      properties:
        extra:
          type: string
        name:
          type: string
        staging:
          $ref: '#/components/schemas/Status'
        worktree:
          $ref: '#/components/schemas/Status'
      required:
      - extra
      - name
      - staging
      - worktree
      type: object
    GetRepositoryContext:
      example:
        owner: owner
        path: path
        name: name
        id: id
        source: source
        prNumber: 0
        branch: branch
        sha: sha
        url: url
      properties:
        branch:
          type: string
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        path:
          type: string
        prNumber:
          type: integer
        sha:
          type: string
        source:
          type: string
        url:
          type: string
      required:
      - url
      type: object
    GitAddRequest:
      example:
        path: path
        files:
        - files
        - files
      properties:
        files:
          description: files to add (use . for all files)
          items:
            type: string
          type: array
        path:
          type: string
      required:
      - files
      - path
      type: object
    GitBranch:
      example:
        name: name
        sha: sha
      properties:
        name:
          type: string
        sha:
          type: string
      required:
      - name
      - sha
      type: object
    GitBranchRequest:
      example:
        path: path
        name: name
      properties:
        name:
          type: string
        path:
          type: string
      required:
      - name
      - path
      type: object
    GitCloneRequest:
      example:
        path: path
        password: password
        branch: branch
        commit_id: commit_id
        url: url
        username: username
      properties:
        branch:
          type: string
        commit_id:
          type: string
        password:
          type: string
        path:
          type: string
        url:
          type: string
        username:
          type: string
      required:
      - path
      - url
      type: object
    GitCommitInfo:
      example:
        author: author
        message: message
        email: email
        hash: hash
        timestamp: timestamp
      properties:
        author:
          type: string
        email:
          type: string
        hash:
          type: string
        message:
          type: string
        timestamp:
          type: string
      required:
      - author
      - email
      - hash
      - message
      - timestamp
      type: object
    GitCommitRequest:
      example:
        path: path
        author: author
        message: message
        email: email
      properties:
        author:
          type: string
        email:
          type: string
        message:
          type: string
        path:
          type: string
      required:
      - author
      - email
      - message
      - path
      type: object
    GitCommitResponse:
      example:
        hash: hash
      properties:
        hash:
          type: string
      required:
      - hash
      type: object
    GitNamespace:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    GitProvider:
      example:
        providerId: providerId
        baseApiUrl: baseApiUrl
        alias: alias
        signingKey: signingKey
        id: id
        signingMethod: null
        token: token
        username: username
      properties:
        alias:
          type: string
        baseApiUrl:
          type: string
        id:
          type: string
        providerId:
          type: string
        signingKey:
          type: string
        signingMethod:
          $ref: '#/components/schemas/SigningMethod'
        token:
          type: string
        username:
          type: string
      required:
      - alias
      - id
      - providerId
      - token
      - username
      type: object
    GitPullRequest:
      example:
        sourceRepoUrl: sourceRepoUrl
        sourceRepoId: sourceRepoId
        name: name
        sourceRepoOwner: sourceRepoOwner
        branch: branch
        sha: sha
        sourceRepoName: sourceRepoName
      properties:
        branch:
          type: string
        name:
          type: string
        sha:
          type: string
        sourceRepoId:
          type: string
        sourceRepoName:
          type: string
        sourceRepoOwner:
          type: string
        sourceRepoUrl:
          type: string
      required:
      - branch
      - name
      - sha
      - sourceRepoId
      - sourceRepoName
      - sourceRepoOwner
      - sourceRepoUrl
      type: object
    GitRepoRequest:
      example:
        path: path
        password: password
        username: username
      properties:
        password:
          type: string
        path:
          type: string
        username:
          type: string
      required:
      - path
      type: object
    GitRepository:
      example:
        owner: owner
        path: path
        name: name
        id: id
        source: source
        prNumber: 0
        branch: branch
        cloneTarget: null
        sha: sha
        url: url
      properties:
        branch:
          type: string
        cloneTarget:
          $ref: '#/components/schemas/CloneTarget'
        id:
          type: string
        name:
          type: string
        owner:
          type: string
        path:
          type: string
        prNumber:
          type: integer
        sha:
          type: string
        source:
          type: string
        url:
          type: string
      required:
      - branch
      - id
      - name
      - owner
      - sha
      - source
      - url
      type: object
    GitStatus:
      example:
        behind: 1
        fileStatus:
        - extra: extra
          name: name
          staging: null
          worktree: null
        - extra: extra
          name: name
          staging: null
          worktree: null
        ahead: 6
        branchPublished: true
        currentBranch: currentBranch
      properties:
        ahead:
          type: integer
        behind:
          type: integer
        branchPublished:
          type: boolean
        currentBranch:
          type: string
        fileStatus:
          items:
            $ref: '#/components/schemas/FileStatus'
          type: array
      required:
      - currentBranch
      - fileStatus
      type: object
    GitUser:
      example:
        name: name
        id: id
        email: email
        username: username
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
        username:
          type: string
      required:
      - email
      - id
      - name
      - username
      type: object
    Job:
      example:
        createdAt: createdAt
        metadata: metadata
        resourceId: resourceId
        action: null
        runnerId: runnerId
        id: id
        state: null
        error: error
        resourceType: null
        updatedAt: updatedAt
      properties:
        action:
          $ref: '#/components/schemas/models.JobAction'
        createdAt:
          type: string
        error:
          type: string
        id:
          type: string
        metadata:
          description: JSON encoded metadata
          type: string
        resourceId:
          type: string
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        runnerId:
          type: string
        state:
          $ref: '#/components/schemas/JobState'
        updatedAt:
          type: string
      required:
      - action
      - createdAt
      - id
      - resourceId
      - resourceType
      - state
      - updatedAt
      type: object
    JobState:
      enum:
      - pending
      - running
      - error
      - success
      type: string
      x-enum-varnames:
      - JobStatePending
      - JobStateRunning
      - JobStateError
      - JobStateSuccess
    ListBranchResponse:
      example:
        branches:
        - branches
        - branches
      properties:
        branches:
          items:
            type: string
          type: array
      required:
      - branches
      type: object
    LogFileConfig:
      example:
        localTime: true
        path: path
        compress: true
        maxAge: 5
        maxBackups: 2
        maxSize: 7
      properties:
        compress:
          type: boolean
        localTime:
          type: boolean
        maxAge:
          type: integer
        maxBackups:
          type: integer
        maxSize:
          type: integer
        path:
          type: string
      required:
      - maxAge
      - maxBackups
      - maxSize
      - path
      type: object
    LspCompletionParams:
      example:
        pathToProject: pathToProject
        context:
          triggerCharacter: triggerCharacter
          triggerKind: 0
        languageId: languageId
        position:
          character: 6
          line: 1
        uri: uri
      properties:
        context:
          $ref: '#/components/schemas/CompletionContext'
        languageId:
          type: string
        pathToProject:
          type: string
        position:
          $ref: '#/components/schemas/Position'
        uri:
          type: string
      required:
      - languageId
      - pathToProject
      - position
      - uri
      type: object
    LspDocumentRequest:
      example:
        pathToProject: pathToProject
        languageId: languageId
        uri: uri
      properties:
        languageId:
          type: string
        pathToProject:
          type: string
        uri:
          type: string
      required:
      - languageId
      - pathToProject
      - uri
      type: object
    LspLocation:
      example:
        range:
          start:
            character: 6
            line: 1
          end:
            character: 6
            line: 1
        uri: uri
      properties:
        range:
          $ref: '#/components/schemas/LspRange'
        uri:
          type: string
      required:
      - range
      - uri
      type: object
    LspPosition:
      example:
        character: 6
        line: 1
      properties:
        character:
          type: integer
        line:
          type: integer
      required:
      - character
      - line
      type: object
    LspRange:
      example:
        start:
          character: 6
          line: 1
        end:
          character: 6
          line: 1
      properties:
        end:
          $ref: '#/components/schemas/LspPosition'
        start:
          $ref: '#/components/schemas/LspPosition'
      required:
      - end
      - start
      type: object
    LspServerRequest:
      example:
        pathToProject: pathToProject
        languageId: languageId
      properties:
        languageId:
          type: string
        pathToProject:
          type: string
      required:
      - languageId
      - pathToProject
      type: object
    LspSymbol:
      example:
        kind: 0
        name: name
        location:
          range:
            start:
              character: 6
              line: 1
            end:
              character: 6
              line: 1
          uri: uri
      properties:
        kind:
          type: integer
        location:
          $ref: '#/components/schemas/LspLocation'
        name:
          type: string
      required:
      - kind
      - location
      - name
      type: object
    Match:
      example:
        file: file
        line: 0
        content: content
      properties:
        content:
          type: string
        file:
          type: string
        line:
          type: integer
      required:
      - content
      - file
      - line
      type: object
    NetworkKey:
      example:
        key: key
      properties:
        key:
          type: string
      required:
      - key
      type: object
    Position:
      example:
        character: 6
        line: 1
      properties:
        character:
          type: integer
        line:
          type: integer
      required:
      - character
      - line
      type: object
    PrebuildConfig:
      example:
        commitInterval: 0
        id: id
        branch: branch
        retention: 6
        triggerFiles:
        - triggerFiles
        - triggerFiles
      properties:
        branch:
          type: string
        commitInterval:
          type: integer
        id:
          type: string
        retention:
          type: integer
        triggerFiles:
          items:
            type: string
          type: array
      required:
      - branch
      - id
      - retention
      - triggerFiles
      type: object
    PrebuildDTO:
      example:
        commitInterval: 0
        id: id
        branch: branch
        retention: 6
        triggerFiles:
        - triggerFiles
        - triggerFiles
        workspaceTemplateName: workspaceTemplateName
      properties:
        branch:
          type: string
        commitInterval:
          type: integer
        id:
          type: string
        retention:
          type: integer
        triggerFiles:
          items:
            type: string
          type: array
        workspaceTemplateName:
          type: string
      required:
      - branch
      - id
      - retention
      - workspaceTemplateName
      type: object
    ProviderDTO:
      example:
        name: name
        label: label
        version: version
        latest: true
      properties:
        label:
          type: string
        latest:
          type: boolean
        name:
          type: string
        version:
          type: string
      required:
      - latest
      - name
      - version
      type: object
    ProviderInfo:
      example:
        runnerName: runnerName
        targetConfigManifest:
          key:
            defaultValue: defaultValue
            options:
            - options
            - options
            description: description
            suggestions:
            - suggestions
            - suggestions
            type: null
            disabledPredicate: disabledPredicate
            inputMasked: true
        agentlessTarget: true
        name: name
        runnerId: runnerId
        label: label
        version: version
      properties:
        agentlessTarget:
          type: boolean
        label:
          type: string
        name:
          type: string
        runnerId:
          type: string
        runnerName:
          type: string
        targetConfigManifest:
          additionalProperties:
            $ref: '#/components/schemas/TargetConfigProperty'
          type: object
        version:
          type: string
      required:
      - name
      - runnerId
      - runnerName
      - targetConfigManifest
      - version
      type: object
    ReplaceRequest:
      example:
        newValue: newValue
        pattern: pattern
        files:
        - files
        - files
      properties:
        files:
          items:
            type: string
          type: array
        newValue:
          type: string
        pattern:
          type: string
      required:
      - files
      - newValue
      - pattern
      type: object
    ReplaceResult:
      example:
        file: file
        success: true
        error: error
      properties:
        error:
          type: string
        file:
          type: string
        success:
          type: boolean
      type: object
    RepositoryUrl:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
    ResourceState:
      example:
        name: null
        error: error
        updatedAt: updatedAt
      properties:
        error:
          type: string
        name:
          $ref: '#/components/schemas/models.ResourceStateName'
        updatedAt:
          type: string
      required:
      - name
      - updatedAt
      type: object
    ResourceType:
      enum:
      - workspace
      - target
      - build
      - runner
      type: string
      x-enum-varnames:
      - ResourceTypeWorkspace
      - ResourceTypeTarget
      - ResourceTypeBuild
      - ResourceTypeRunner
    RunnerDTO:
      example:
        metadata:
          runningJobs: 0
          runnerId: runnerId
          providers:
          - runnerName: runnerName
            targetConfigManifest:
              key:
                defaultValue: defaultValue
                options:
                - options
                - options
                description: description
                suggestions:
                - suggestions
                - suggestions
                type: null
                disabledPredicate: disabledPredicate
                inputMasked: true
            agentlessTarget: true
            name: name
            runnerId: runnerId
            label: label
            version: version
          - runnerName: runnerName
            targetConfigManifest:
              key:
                defaultValue: defaultValue
                options:
                - options
                - options
                description: description
                suggestions:
                - suggestions
                - suggestions
                type: null
                disabledPredicate: disabledPredicate
                inputMasked: true
            agentlessTarget: true
            name: name
            runnerId: runnerId
            label: label
            version: version
          updatedAt: updatedAt
          uptime: 6
        name: name
        id: id
        state:
          name: null
          error: error
          updatedAt: updatedAt
      properties:
        id:
          type: string
        metadata:
          $ref: '#/components/schemas/RunnerMetadata'
        name:
          type: string
        state:
          $ref: '#/components/schemas/ResourceState'
      required:
      - id
      - name
      - state
      type: object
    RunnerMetadata:
      example:
        runningJobs: 0
        runnerId: runnerId
        providers:
        - runnerName: runnerName
          targetConfigManifest:
            key:
              defaultValue: defaultValue
              options:
              - options
              - options
              description: description
              suggestions:
              - suggestions
              - suggestions
              type: null
              disabledPredicate: disabledPredicate
              inputMasked: true
          agentlessTarget: true
          name: name
          runnerId: runnerId
          label: label
          version: version
        - runnerName: runnerName
          targetConfigManifest:
            key:
              defaultValue: defaultValue
              options:
              - options
              - options
              description: description
              suggestions:
              - suggestions
              - suggestions
              type: null
              disabledPredicate: disabledPredicate
              inputMasked: true
          agentlessTarget: true
          name: name
          runnerId: runnerId
          label: label
          version: version
        updatedAt: updatedAt
        uptime: 6
      properties:
        providers:
          items:
            $ref: '#/components/schemas/ProviderInfo'
          type: array
        runnerId:
          type: string
        runningJobs:
          type: integer
        updatedAt:
          type: string
        uptime:
          type: integer
      required:
      - providers
      - runnerId
      - updatedAt
      - uptime
      type: object
    Sample:
      example:
        name: name
        description: description
        gitUrl: gitUrl
      properties:
        description:
          type: string
        gitUrl:
          type: string
        name:
          type: string
      required:
      - description
      - gitUrl
      - name
      type: object
    SearchFilesResponse:
      example:
        files:
        - files
        - files
      properties:
        files:
          items:
            type: string
          type: array
      required:
      - files
      type: object
    ServerConfig:
      example:
        registryUrl: registryUrl
        localBuilderRegistryPort: 5
        localBuilderRegistryImage: localBuilderRegistryImage
        builderRegistryServer: builderRegistryServer
        builderImage: builderImage
        defaultWorkspaceImage: defaultWorkspaceImage
        apiPort: 0
        headscalePort: 1
        localRunnerDisabled: true
        buildImageNamespace: buildImageNamespace
        serverDownloadUrl: serverDownloadUrl
        binariesPath: binariesPath
        logFile:
          localTime: true
          path: path
          compress: true
          maxAge: 5
          maxBackups: 2
          maxSize: 7
        samplesIndexUrl: samplesIndexUrl
        defaultWorkspaceUser: defaultWorkspaceUser
        id: id
        frps:
          protocol: protocol
          port: 6
          domain: domain
      properties:
        apiPort:
          type: integer
        binariesPath:
          type: string
        buildImageNamespace:
          type: string
        builderImage:
          type: string
        builderRegistryServer:
          type: string
        defaultWorkspaceImage:
          type: string
        defaultWorkspaceUser:
          type: string
        frps:
          $ref: '#/components/schemas/FRPSConfig'
        headscalePort:
          type: integer
        id:
          type: string
        localBuilderRegistryImage:
          type: string
        localBuilderRegistryPort:
          type: integer
        localRunnerDisabled:
          type: boolean
        logFile:
          $ref: '#/components/schemas/LogFileConfig'
        registryUrl:
          type: string
        samplesIndexUrl:
          type: string
        serverDownloadUrl:
          type: string
      required:
      - apiPort
      - binariesPath
      - builderImage
      - builderRegistryServer
      - defaultWorkspaceImage
      - defaultWorkspaceUser
      - headscalePort
      - id
      - localBuilderRegistryImage
      - localBuilderRegistryPort
      - logFile
      - registryUrl
      - serverDownloadUrl
      type: object
    Session:
      example:
        sessionId: sessionId
        commands:
        - exitCode: 0
          id: id
          command: command
        - exitCode: 0
          id: id
          command: command
      properties:
        commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
        sessionId:
          type: string
      required:
      - commands
      - sessionId
      type: object
    SessionExecuteRequest:
      example:
        async: true
        command: command
      properties:
        async:
          type: boolean
        command:
          type: string
      required:
      - command
      type: object
    SessionExecuteResponse:
      example:
        output: output
        cmdId: cmdId
        exitCode: 0
      properties:
        cmdId:
          type: string
        exitCode:
          type: integer
        output:
          type: string
      type: object
    SetGitProviderConfig:
      example:
        providerId: providerId
        baseApiUrl: baseApiUrl
        alias: alias
        signingKey: signingKey
        id: id
        signingMethod: null
        token: token
        username: username
      properties:
        alias:
          type: string
        baseApiUrl:
          type: string
        id:
          type: string
        providerId:
          type: string
        signingKey:
          type: string
        signingMethod:
          $ref: '#/components/schemas/SigningMethod'
        token:
          type: string
        username:
          type: string
      required:
      - providerId
      - token
      type: object
    SigningMethod:
      enum:
      - ssh
      - gpg
      type: string
      x-enum-varnames:
      - SigningMethodSSH
      - SigningMethodGPG
    Status:
      enum:
      - Unmodified
      - Untracked
      - Modified
      - Added
      - Deleted
      - Renamed
      - Copied
      - Updated but unmerged
      type: string
      x-enum-varnames:
      - Unmodified
      - Untracked
      - Modified
      - Added
      - Deleted
      - Renamed
      - Copied
      - UpdatedButUnmerged
    Target:
      example:
        default: true
        metadata:
          targetId: targetId
          updatedAt: updatedAt
          uptime: 0
        targetConfig:
          deleted: true
          name: name
          options: options
          id: id
          providerInfo:
            runnerName: runnerName
            targetConfigManifest:
              key:
                defaultValue: defaultValue
                options:
                - options
                - options
                description: description
                suggestions:
                - suggestions
                - suggestions
                type: null
                disabledPredicate: disabledPredicate
                inputMasked: true
            agentlessTarget: true
            name: name
            runnerId: runnerId
            label: label
            version: version
        providerMetadata: providerMetadata
        lastJobId: lastJobId
        lastJob:
          createdAt: createdAt
          metadata: metadata
          resourceId: resourceId
          action: null
          runnerId: runnerId
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        envVars:
          key: envVars
        name: name
        targetConfigId: targetConfigId
        id: id
        workspaces:
        - null
        - null
      properties:
        default:
          type: boolean
        envVars:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        lastJob:
          $ref: '#/components/schemas/Job'
        lastJobId:
          type: string
        metadata:
          $ref: '#/components/schemas/TargetMetadata'
        name:
          type: string
        providerMetadata:
          type: string
        targetConfig:
          $ref: '#/components/schemas/TargetConfig'
        targetConfigId:
          type: string
        workspaces:
          items:
            $ref: '#/components/schemas/Workspace'
          type: array
      required:
      - default
      - envVars
      - id
      - name
      - targetConfig
      - targetConfigId
      - workspaces
      type: object
    TargetConfig:
      example:
        deleted: true
        name: name
        options: options
        id: id
        providerInfo:
          runnerName: runnerName
          targetConfigManifest:
            key:
              defaultValue: defaultValue
              options:
              - options
              - options
              description: description
              suggestions:
              - suggestions
              - suggestions
              type: null
              disabledPredicate: disabledPredicate
              inputMasked: true
          agentlessTarget: true
          name: name
          runnerId: runnerId
          label: label
          version: version
      properties:
        deleted:
          type: boolean
        id:
          type: string
        name:
          type: string
        options:
          description: JSON encoded map of options
          type: string
        providerInfo:
          $ref: '#/components/schemas/ProviderInfo'
      required:
      - deleted
      - id
      - name
      - options
      - providerInfo
      type: object
    TargetConfigManifest:
      additionalProperties:
        $ref: '#/components/schemas/TargetConfigProperty'
      type: object
    TargetConfigProperty:
      example:
        defaultValue: defaultValue
        options:
        - options
        - options
        description: description
        suggestions:
        - suggestions
        - suggestions
        type: null
        disabledPredicate: disabledPredicate
        inputMasked: true
      properties:
        defaultValue:
          description: |-
            DefaultValue is converted into the appropriate type based on the Type
            If the property is a FilePath, the DefaultValue is a path to a directory
          type: string
        description:
          description: Brief description of the property
          type: string
        disabledPredicate:
          description: |-
            A regex string matched with the name of the target config to determine if the property should be disabled
            If the regex matches the target config name, the property will be disabled
            E.g. "^local$" will disable the property for the local target
          type: string
        inputMasked:
          type: boolean
        options:
          description: Options is only used if the Type is TargetConfigPropertyTypeOption
          items:
            type: string
          type: array
        suggestions:
          description: Suggestions is an optional list of auto-complete values to
            assist the user while filling the field
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/models.TargetConfigPropertyType'
      type: object
    TargetDTO:
      example:
        default: true
        metadata:
          targetId: targetId
          updatedAt: updatedAt
          uptime: 0
        targetConfig:
          deleted: true
          name: name
          options: options
          id: id
          providerInfo:
            runnerName: runnerName
            targetConfigManifest:
              key:
                defaultValue: defaultValue
                options:
                - options
                - options
                description: description
                suggestions:
                - suggestions
                - suggestions
                type: null
                disabledPredicate: disabledPredicate
                inputMasked: true
            agentlessTarget: true
            name: name
            runnerId: runnerId
            label: label
            version: version
        providerMetadata: providerMetadata
        lastJobId: lastJobId
        lastJob:
          createdAt: createdAt
          metadata: metadata
          resourceId: resourceId
          action: null
          runnerId: runnerId
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        envVars:
          key: envVars
        name: name
        targetConfigId: targetConfigId
        id: id
        state:
          name: null
          error: error
          updatedAt: updatedAt
        workspaces:
        - gitProviderConfigId: gitProviderConfigId
          image: image
          metadata:
            gitStatus:
              behind: 1
              fileStatus:
              - extra: extra
                name: name
                staging: null
                worktree: null
              - extra: extra
                name: name
                staging: null
                worktree: null
              ahead: 6
              branchPublished: true
              currentBranch: currentBranch
            updatedAt: updatedAt
            uptime: 5
            workspaceId: workspaceId
          providerMetadata: providerMetadata
          apiKey: apiKey
          targetId: targetId
          envVars:
            key: envVars
          repository:
            owner: owner
            path: path
            name: name
            id: id
            source: source
            prNumber: 0
            branch: branch
            cloneTarget: null
            sha: sha
            url: url
          labels:
            key: labels
          target:
            default: true
            metadata:
              targetId: targetId
              updatedAt: updatedAt
              uptime: 0
            targetConfig:
              deleted: true
              name: name
              options: options
              id: id
              providerInfo:
                runnerName: runnerName
                targetConfigManifest:
                  key:
                    defaultValue: defaultValue
                    options:
                    - options
                    - options
                    description: description
                    suggestions:
                    - suggestions
                    - suggestions
                    type: null
                    disabledPredicate: disabledPredicate
                    inputMasked: true
                agentlessTarget: true
                name: name
                runnerId: runnerId
                label: label
                version: version
            providerMetadata: providerMetadata
            lastJobId: lastJobId
            lastJob:
              createdAt: createdAt
              metadata: metadata
              resourceId: resourceId
              action: null
              runnerId: runnerId
              id: id
              state: null
              error: error
              resourceType: null
              updatedAt: updatedAt
            envVars:
              key: envVars
            name: name
            targetConfigId: targetConfigId
            id: id
            workspaces:
            - null
            - null
          buildConfig:
            cachedBuild:
              image: image
              user: user
            devcontainer:
              filePath: filePath
          lastJobId: lastJobId
          lastJob:
            createdAt: createdAt
            metadata: metadata
            resourceId: resourceId
            action: null
            runnerId: runnerId
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          name: name
          id: id
          user: user
        - gitProviderConfigId: gitProviderConfigId
          image: image
          metadata:
            gitStatus:
              behind: 1
              fileStatus:
              - extra: extra
                name: name
                staging: null
                worktree: null
              - extra: extra
                name: name
                staging: null
                worktree: null
              ahead: 6
              branchPublished: true
              currentBranch: currentBranch
            updatedAt: updatedAt
            uptime: 5
            workspaceId: workspaceId
          providerMetadata: providerMetadata
          apiKey: apiKey
          targetId: targetId
          envVars:
            key: envVars
          repository:
            owner: owner
            path: path
            name: name
            id: id
            source: source
            prNumber: 0
            branch: branch
            cloneTarget: null
            sha: sha
            url: url
          labels:
            key: labels
          target:
            default: true
            metadata:
              targetId: targetId
              updatedAt: updatedAt
              uptime: 0
            targetConfig:
              deleted: true
              name: name
              options: options
              id: id
              providerInfo:
                runnerName: runnerName
                targetConfigManifest:
                  key:
                    defaultValue: defaultValue
                    options:
                    - options
                    - options
                    description: description
                    suggestions:
                    - suggestions
                    - suggestions
                    type: null
                    disabledPredicate: disabledPredicate
                    inputMasked: true
                agentlessTarget: true
                name: name
                runnerId: runnerId
                label: label
                version: version
            providerMetadata: providerMetadata
            lastJobId: lastJobId
            lastJob:
              createdAt: createdAt
              metadata: metadata
              resourceId: resourceId
              action: null
              runnerId: runnerId
              id: id
              state: null
              error: error
              resourceType: null
              updatedAt: updatedAt
            envVars:
              key: envVars
            name: name
            targetConfigId: targetConfigId
            id: id
            workspaces:
            - null
            - null
          buildConfig:
            cachedBuild:
              image: image
              user: user
            devcontainer:
              filePath: filePath
          lastJobId: lastJobId
          lastJob:
            createdAt: createdAt
            metadata: metadata
            resourceId: resourceId
            action: null
            runnerId: runnerId
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          name: name
          id: id
          user: user
      properties:
        default:
          type: boolean
        envVars:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
        lastJob:
          $ref: '#/components/schemas/Job'
        lastJobId:
          type: string
        metadata:
          $ref: '#/components/schemas/TargetMetadata'
        name:
          type: string
        providerMetadata:
          type: string
        state:
          $ref: '#/components/schemas/ResourceState'
        targetConfig:
          $ref: '#/components/schemas/TargetConfig'
        targetConfigId:
          type: string
        workspaces:
          items:
            $ref: '#/components/schemas/Workspace'
          type: array
      required:
      - default
      - envVars
      - id
      - name
      - state
      - targetConfig
      - targetConfigId
      - workspaces
      type: object
    TargetMetadata:
      example:
        targetId: targetId
        updatedAt: updatedAt
        uptime: 0
      properties:
        targetId:
          type: string
        updatedAt:
          type: string
        uptime:
          type: integer
      required:
      - targetId
      - updatedAt
      - uptime
      type: object
    UpdateJobState:
      example:
        errorMessage: errorMessage
        state: null
      properties:
        errorMessage:
          type: string
        state:
          $ref: '#/components/schemas/JobState'
      required:
      - state
      type: object
    UpdateRunnerMetadataDTO:
      example:
        runningJobs: 0
        providers:
        - runnerName: runnerName
          targetConfigManifest:
            key:
              defaultValue: defaultValue
              options:
              - options
              - options
              description: description
              suggestions:
              - suggestions
              - suggestions
              type: null
              disabledPredicate: disabledPredicate
              inputMasked: true
          agentlessTarget: true
          name: name
          runnerId: runnerId
          label: label
          version: version
        - runnerName: runnerName
          targetConfigManifest:
            key:
              defaultValue: defaultValue
              options:
              - options
              - options
              description: description
              suggestions:
              - suggestions
              - suggestions
              type: null
              disabledPredicate: disabledPredicate
              inputMasked: true
          agentlessTarget: true
          name: name
          runnerId: runnerId
          label: label
          version: version
        uptime: 6
      properties:
        providers:
          items:
            $ref: '#/components/schemas/ProviderInfo'
          type: array
        runningJobs:
          type: integer
        uptime:
          type: integer
      required:
      - providers
      - uptime
      type: object
    UpdateTargetMetadataDTO:
      example:
        uptime: 0
      properties:
        uptime:
          type: integer
      required:
      - uptime
      type: object
    UpdateTargetProviderMetadataDTO:
      example:
        metadata: metadata
      properties:
        metadata:
          type: string
      required:
      - metadata
      type: object
    UpdateWorkspaceMetadataDTO:
      example:
        gitStatus:
          behind: 1
          fileStatus:
          - extra: extra
            name: name
            staging: null
            worktree: null
          - extra: extra
            name: name
            staging: null
            worktree: null
          ahead: 6
          branchPublished: true
          currentBranch: currentBranch
        uptime: 0
      properties:
        gitStatus:
          $ref: '#/components/schemas/GitStatus'
        uptime:
          type: integer
      required:
      - uptime
      type: object
    UpdateWorkspaceProviderMetadataDTO:
      example:
        metadata: metadata
      properties:
        metadata:
          type: string
      required:
      - metadata
      type: object
    Workspace:
      example:
        gitProviderConfigId: gitProviderConfigId
        image: image
        metadata:
          gitStatus:
            behind: 1
            fileStatus:
            - extra: extra
              name: name
              staging: null
              worktree: null
            - extra: extra
              name: name
              staging: null
              worktree: null
            ahead: 6
            branchPublished: true
            currentBranch: currentBranch
          updatedAt: updatedAt
          uptime: 5
          workspaceId: workspaceId
        providerMetadata: providerMetadata
        apiKey: apiKey
        targetId: targetId
        envVars:
          key: envVars
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
        labels:
          key: labels
        target:
          default: true
          metadata:
            targetId: targetId
            updatedAt: updatedAt
            uptime: 0
          targetConfig:
            deleted: true
            name: name
            options: options
            id: id
            providerInfo:
              runnerName: runnerName
              targetConfigManifest:
                key:
                  defaultValue: defaultValue
                  options:
                  - options
                  - options
                  description: description
                  suggestions:
                  - suggestions
                  - suggestions
                  type: null
                  disabledPredicate: disabledPredicate
                  inputMasked: true
              agentlessTarget: true
              name: name
              runnerId: runnerId
              label: label
              version: version
          providerMetadata: providerMetadata
          lastJobId: lastJobId
          lastJob:
            createdAt: createdAt
            metadata: metadata
            resourceId: resourceId
            action: null
            runnerId: runnerId
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          envVars:
            key: envVars
          name: name
          targetConfigId: targetConfigId
          id: id
          workspaces:
          - null
          - null
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        lastJobId: lastJobId
        lastJob:
          createdAt: createdAt
          metadata: metadata
          resourceId: resourceId
          action: null
          runnerId: runnerId
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        name: name
        id: id
        user: user
      properties:
        apiKey:
          type: string
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        id:
          type: string
        image:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        lastJob:
          $ref: '#/components/schemas/Job'
        lastJobId:
          type: string
        metadata:
          $ref: '#/components/schemas/WorkspaceMetadata'
        name:
          type: string
        providerMetadata:
          type: string
        repository:
          $ref: '#/components/schemas/GitRepository'
        target:
          $ref: '#/components/schemas/Target'
        targetId:
          type: string
        user:
          type: string
      required:
      - apiKey
      - envVars
      - id
      - image
      - labels
      - name
      - repository
      - target
      - targetId
      - user
      type: object
    WorkspaceDTO:
      example:
        gitProviderConfigId: gitProviderConfigId
        image: image
        metadata:
          gitStatus:
            behind: 1
            fileStatus:
            - extra: extra
              name: name
              staging: null
              worktree: null
            - extra: extra
              name: name
              staging: null
              worktree: null
            ahead: 6
            branchPublished: true
            currentBranch: currentBranch
          updatedAt: updatedAt
          uptime: 5
          workspaceId: workspaceId
        providerMetadata: providerMetadata
        apiKey: apiKey
        targetId: targetId
        envVars:
          key: envVars
        repository:
          owner: owner
          path: path
          name: name
          id: id
          source: source
          prNumber: 0
          branch: branch
          cloneTarget: null
          sha: sha
          url: url
        labels:
          key: labels
        target:
          default: true
          metadata:
            targetId: targetId
            updatedAt: updatedAt
            uptime: 0
          targetConfig:
            deleted: true
            name: name
            options: options
            id: id
            providerInfo:
              runnerName: runnerName
              targetConfigManifest:
                key:
                  defaultValue: defaultValue
                  options:
                  - options
                  - options
                  description: description
                  suggestions:
                  - suggestions
                  - suggestions
                  type: null
                  disabledPredicate: disabledPredicate
                  inputMasked: true
              agentlessTarget: true
              name: name
              runnerId: runnerId
              label: label
              version: version
          providerMetadata: providerMetadata
          lastJobId: lastJobId
          lastJob:
            createdAt: createdAt
            metadata: metadata
            resourceId: resourceId
            action: null
            runnerId: runnerId
            id: id
            state: null
            error: error
            resourceType: null
            updatedAt: updatedAt
          envVars:
            key: envVars
          name: name
          targetConfigId: targetConfigId
          id: id
          workspaces:
          - null
          - null
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        lastJobId: lastJobId
        lastJob:
          createdAt: createdAt
          metadata: metadata
          resourceId: resourceId
          action: null
          runnerId: runnerId
          id: id
          state: null
          error: error
          resourceType: null
          updatedAt: updatedAt
        name: name
        id: id
        state:
          name: null
          error: error
          updatedAt: updatedAt
        user: user
      properties:
        apiKey:
          type: string
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        id:
          type: string
        image:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        lastJob:
          $ref: '#/components/schemas/Job'
        lastJobId:
          type: string
        metadata:
          $ref: '#/components/schemas/WorkspaceMetadata'
        name:
          type: string
        providerMetadata:
          type: string
        repository:
          $ref: '#/components/schemas/GitRepository'
        state:
          $ref: '#/components/schemas/ResourceState'
        target:
          $ref: '#/components/schemas/Target'
        targetId:
          type: string
        user:
          type: string
      required:
      - apiKey
      - envVars
      - id
      - image
      - labels
      - name
      - repository
      - state
      - target
      - targetId
      - user
      type: object
    WorkspaceDirResponse:
      example:
        dir: dir
      properties:
        dir:
          type: string
      type: object
    WorkspaceMetadata:
      example:
        gitStatus:
          behind: 1
          fileStatus:
          - extra: extra
            name: name
            staging: null
            worktree: null
          - extra: extra
            name: name
            staging: null
            worktree: null
          ahead: 6
          branchPublished: true
          currentBranch: currentBranch
        updatedAt: updatedAt
        uptime: 5
        workspaceId: workspaceId
      properties:
        gitStatus:
          $ref: '#/components/schemas/GitStatus'
        updatedAt:
          type: string
        uptime:
          type: integer
        workspaceId:
          type: string
      required:
      - updatedAt
      - uptime
      - workspaceId
      type: object
    WorkspaceTemplate:
      example:
        prebuilds:
        - commitInterval: 0
          id: id
          branch: branch
          retention: 6
          triggerFiles:
          - triggerFiles
          - triggerFiles
        - commitInterval: 0
          id: id
          branch: branch
          retention: 6
          triggerFiles:
          - triggerFiles
          - triggerFiles
        buildConfig:
          cachedBuild:
            image: image
            user: user
          devcontainer:
            filePath: filePath
        gitProviderConfigId: gitProviderConfigId
        image: image
        default: true
        envVars:
          key: envVars
        name: name
        user: user
        labels:
          key: labels
        repositoryUrl: repositoryUrl
      properties:
        buildConfig:
          $ref: '#/components/schemas/BuildConfig'
        default:
          type: boolean
        envVars:
          additionalProperties:
            type: string
          type: object
        gitProviderConfigId:
          type: string
        image:
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        prebuilds:
          items:
            $ref: '#/components/schemas/PrebuildConfig'
          type: array
        repositoryUrl:
          type: string
        user:
          type: string
      required:
      - default
      - envVars
      - image
      - labels
      - name
      - repositoryUrl
      - user
      type: object
    models.ApiKeyType:
      enum:
      - client
      - workspace
      - target
      - runner
      type: string
      x-enum-varnames:
      - ApiKeyTypeClient
      - ApiKeyTypeWorkspace
      - ApiKeyTypeTarget
      - ApiKeyTypeRunner
    models.JobAction:
      enum:
      - create
      - start
      - stop
      - restart
      - delete
      - force-delete
      - run
      - install-provider
      - uninstall-provider
      - update-provider
      type: string
      x-enum-varnames:
      - JobActionCreate
      - JobActionStart
      - JobActionStop
      - JobActionRestart
      - JobActionDelete
      - JobActionForceDelete
      - JobActionRun
      - JobActionInstallProvider
      - JobActionUninstallProvider
      - JobActionUpdateProvider
    models.ResourceStateName:
      enum:
      - undefined
      - pending-run
      - running
      - run-successful
      - pending-create
      - creating
      - pending-start
      - starting
      - started
      - pending-stop
      - stopping
      - stopped
      - pending-restart
      - error
      - unresponsive
      - pending-delete
      - pending-forced-delete
      - deleting
      - deleted
      type: string
      x-enum-varnames:
      - ResourceStateNameUndefined
      - ResourceStateNamePendingRun
      - ResourceStateNameRunning
      - ResourceStateNameRunSuccessful
      - ResourceStateNamePendingCreate
      - ResourceStateNameCreating
      - ResourceStateNamePendingStart
      - ResourceStateNameStarting
      - ResourceStateNameStarted
      - ResourceStateNamePendingStop
      - ResourceStateNameStopping
      - ResourceStateNameStopped
      - ResourceStateNamePendingRestart
      - ResourceStateNameError
      - ResourceStateNameUnresponsive
      - ResourceStateNamePendingDelete
      - ResourceStateNamePendingForcedDelete
      - ResourceStateNameDeleting
      - ResourceStateNameDeleted
    models.TargetConfigPropertyType:
      enum:
      - string
      - option
      - boolean
      - int
      - float
      - file-path
      type: string
      x-enum-varnames:
      - TargetConfigPropertyTypeString
      - TargetConfigPropertyTypeOption
      - TargetConfigPropertyTypeBoolean
      - TargetConfigPropertyTypeInt
      - TargetConfigPropertyTypeFloat
      - TargetConfigPropertyTypeFilePath
    FsUploadFile_request:
      properties:
        file:
          description: File
          format: binary
          type: string
      required:
      - file
      type: object
  securitySchemes:
    Bearer:
      description: '"Type ''Bearer TOKEN'' to correctly set the API Key"'
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
