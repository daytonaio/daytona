/*
Daytona Server API

Daytona Server API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the ProjectBuildDevcontainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectBuildDevcontainer{}

// ProjectBuildDevcontainer struct for ProjectBuildDevcontainer
type ProjectBuildDevcontainer struct {
	DevContainerFilePath *string `json:"devContainerFilePath,omitempty"`
}

// NewProjectBuildDevcontainer instantiates a new ProjectBuildDevcontainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectBuildDevcontainer() *ProjectBuildDevcontainer {
	this := ProjectBuildDevcontainer{}
	return &this
}

// NewProjectBuildDevcontainerWithDefaults instantiates a new ProjectBuildDevcontainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectBuildDevcontainerWithDefaults() *ProjectBuildDevcontainer {
	this := ProjectBuildDevcontainer{}
	return &this
}

// GetDevContainerFilePath returns the DevContainerFilePath field value if set, zero value otherwise.
func (o *ProjectBuildDevcontainer) GetDevContainerFilePath() string {
	if o == nil || IsNil(o.DevContainerFilePath) {
		var ret string
		return ret
	}
	return *o.DevContainerFilePath
}

// GetDevContainerFilePathOk returns a tuple with the DevContainerFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBuildDevcontainer) GetDevContainerFilePathOk() (*string, bool) {
	if o == nil || IsNil(o.DevContainerFilePath) {
		return nil, false
	}
	return o.DevContainerFilePath, true
}

// HasDevContainerFilePath returns a boolean if a field has been set.
func (o *ProjectBuildDevcontainer) HasDevContainerFilePath() bool {
	if o != nil && !IsNil(o.DevContainerFilePath) {
		return true
	}

	return false
}

// SetDevContainerFilePath gets a reference to the given string and assigns it to the DevContainerFilePath field.
func (o *ProjectBuildDevcontainer) SetDevContainerFilePath(v string) {
	o.DevContainerFilePath = &v
}

func (o ProjectBuildDevcontainer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectBuildDevcontainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DevContainerFilePath) {
		toSerialize["devContainerFilePath"] = o.DevContainerFilePath
	}
	return toSerialize, nil
}

type NullableProjectBuildDevcontainer struct {
	value *ProjectBuildDevcontainer
	isSet bool
}

func (v NullableProjectBuildDevcontainer) Get() *ProjectBuildDevcontainer {
	return v.value
}

func (v *NullableProjectBuildDevcontainer) Set(val *ProjectBuildDevcontainer) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectBuildDevcontainer) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectBuildDevcontainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectBuildDevcontainer(val *ProjectBuildDevcontainer) *NullableProjectBuildDevcontainer {
	return &NullableProjectBuildDevcontainer{value: val, isSet: true}
}

func (v NullableProjectBuildDevcontainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectBuildDevcontainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
