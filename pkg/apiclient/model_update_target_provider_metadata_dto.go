/*
Daytona Server API

Daytona Server API

API version: v0.0.0-dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateTargetProviderMetadataDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTargetProviderMetadataDTO{}

// UpdateTargetProviderMetadataDTO struct for UpdateTargetProviderMetadataDTO
type UpdateTargetProviderMetadataDTO struct {
	Metadata string `json:"metadata"`
}

type _UpdateTargetProviderMetadataDTO UpdateTargetProviderMetadataDTO

// NewUpdateTargetProviderMetadataDTO instantiates a new UpdateTargetProviderMetadataDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTargetProviderMetadataDTO(metadata string) *UpdateTargetProviderMetadataDTO {
	this := UpdateTargetProviderMetadataDTO{}
	this.Metadata = metadata
	return &this
}

// NewUpdateTargetProviderMetadataDTOWithDefaults instantiates a new UpdateTargetProviderMetadataDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTargetProviderMetadataDTOWithDefaults() *UpdateTargetProviderMetadataDTO {
	this := UpdateTargetProviderMetadataDTO{}
	return &this
}

// GetMetadata returns the Metadata field value
func (o *UpdateTargetProviderMetadataDTO) GetMetadata() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *UpdateTargetProviderMetadataDTO) GetMetadataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *UpdateTargetProviderMetadataDTO) SetMetadata(v string) {
	o.Metadata = v
}

func (o UpdateTargetProviderMetadataDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTargetProviderMetadataDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metadata"] = o.Metadata
	return toSerialize, nil
}

func (o *UpdateTargetProviderMetadataDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateTargetProviderMetadataDTO := _UpdateTargetProviderMetadataDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateTargetProviderMetadataDTO)

	if err != nil {
		return err
	}

	*o = UpdateTargetProviderMetadataDTO(varUpdateTargetProviderMetadataDTO)

	return err
}

type NullableUpdateTargetProviderMetadataDTO struct {
	value *UpdateTargetProviderMetadataDTO
	isSet bool
}

func (v NullableUpdateTargetProviderMetadataDTO) Get() *UpdateTargetProviderMetadataDTO {
	return v.value
}

func (v *NullableUpdateTargetProviderMetadataDTO) Set(val *UpdateTargetProviderMetadataDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTargetProviderMetadataDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTargetProviderMetadataDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTargetProviderMetadataDTO(val *UpdateTargetProviderMetadataDTO) *NullableUpdateTargetProviderMetadataDTO {
	return &NullableUpdateTargetProviderMetadataDTO{value: val, isSet: true}
}

func (v NullableUpdateTargetProviderMetadataDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTargetProviderMetadataDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
