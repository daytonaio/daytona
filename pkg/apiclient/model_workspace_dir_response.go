/*
Daytona Server API

Daytona Server API

API version: v0.0.0-dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the WorkspaceDirResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkspaceDirResponse{}

// WorkspaceDirResponse struct for WorkspaceDirResponse
type WorkspaceDirResponse struct {
	Dir *string `json:"dir,omitempty"`
}

// NewWorkspaceDirResponse instantiates a new WorkspaceDirResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceDirResponse() *WorkspaceDirResponse {
	this := WorkspaceDirResponse{}
	return &this
}

// NewWorkspaceDirResponseWithDefaults instantiates a new WorkspaceDirResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceDirResponseWithDefaults() *WorkspaceDirResponse {
	this := WorkspaceDirResponse{}
	return &this
}

// GetDir returns the Dir field value if set, zero value otherwise.
func (o *WorkspaceDirResponse) GetDir() string {
	if o == nil || IsNil(o.Dir) {
		var ret string
		return ret
	}
	return *o.Dir
}

// GetDirOk returns a tuple with the Dir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceDirResponse) GetDirOk() (*string, bool) {
	if o == nil || IsNil(o.Dir) {
		return nil, false
	}
	return o.Dir, true
}

// HasDir returns a boolean if a field has been set.
func (o *WorkspaceDirResponse) HasDir() bool {
	if o != nil && !IsNil(o.Dir) {
		return true
	}

	return false
}

// SetDir gets a reference to the given string and assigns it to the Dir field.
func (o *WorkspaceDirResponse) SetDir(v string) {
	o.Dir = &v
}

func (o WorkspaceDirResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkspaceDirResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dir) {
		toSerialize["dir"] = o.Dir
	}
	return toSerialize, nil
}

type NullableWorkspaceDirResponse struct {
	value *WorkspaceDirResponse
	isSet bool
}

func (v NullableWorkspaceDirResponse) Get() *WorkspaceDirResponse {
	return v.value
}

func (v *NullableWorkspaceDirResponse) Set(val *WorkspaceDirResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceDirResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceDirResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceDirResponse(val *WorkspaceDirResponse) *NullableWorkspaceDirResponse {
	return &NullableWorkspaceDirResponse{value: val, isSet: true}
}

func (v NullableWorkspaceDirResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceDirResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
