basePath: /
definitions:
  CreateWorkspace:
    properties:
      name:
        type: string
      repositories:
        items:
          $ref: '#/definitions/Repository'
        type: array
      target:
        type: string
    type: object
  FRPSConfig:
    properties:
      domain:
        type: string
      port:
        type: integer
      protocol:
        type: string
    type: object
  GitProvider:
    properties:
      id:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  InstallProviderRequest:
    properties:
      downloadUrls:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
    type: object
  NetworkKey:
    properties:
      key:
        type: string
    type: object
  Project:
    properties:
      info:
        $ref: '#/definitions/ProjectInfo'
      name:
        type: string
      repository:
        $ref: '#/definitions/Repository'
      target:
        type: string
      workspaceId:
        type: string
    type: object
  ProjectInfo:
    properties:
      created:
        type: string
      finished:
        type: string
      isRunning:
        type: boolean
      name:
        type: string
      providerMetadata:
        type: string
      started:
        type: string
      workspaceId:
        type: string
    type: object
  Provider:
    properties:
      name:
        type: string
      version:
        type: string
    type: object
  ProviderTarget:
    properties:
      name:
        type: string
      options:
        description: JSON encoded map of options
        type: string
      providerInfo:
        $ref: '#/definitions/provider.ProviderInfo'
    type: object
  ProviderTargetManifest:
    additionalProperties:
      $ref: '#/definitions/provider.ProviderTargetProperty'
    type: object
  Repository:
    properties:
      branch:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: string
      path:
        type: string
      prNumber:
        type: integer
      sha:
        type: string
      source:
        type: string
      url:
        type: string
    type: object
  ServerConfig:
    properties:
      apiPort:
        type: integer
      frps:
        $ref: '#/definitions/FRPSConfig'
      gitProviders:
        items:
          $ref: '#/definitions/GitProvider'
        type: array
      headscalePort:
        type: integer
      id:
        type: string
      providersDir:
        type: string
      registryUrl:
        type: string
      serverDownloadUrl:
        type: string
      targetsFilePath:
        type: string
    type: object
  Workspace:
    properties:
      id:
        type: string
      info:
        $ref: '#/definitions/WorkspaceInfo'
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/Project'
        type: array
      target:
        type: string
    type: object
  WorkspaceInfo:
    properties:
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/ProjectInfo'
        type: array
      providerMetadata:
        type: string
    type: object
  provider.ProviderInfo:
    properties:
      name:
        type: string
      version:
        type: string
    type: object
  provider.ProviderTargetProperty:
    properties:
      defaultValue:
        description: |-
          DefaultValue is converted into the appropriate type based on the Type
          If the property is a FilePath, the DefaultValue is a path to a directory
        type: string
      disabledPredicate:
        description: |-
          A regex string matched with the name of the target to determine if the property should be disabled
          If the regex matches the target name, the property will be disabled
          E.g. "^local$" will disable the property for the local target
        type: string
      inputMasked:
        type: boolean
      options:
        description: Options is only used if the Type is ProviderTargetPropertyTypeOption
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/provider.ProviderTargetPropertyType'
    type: object
  provider.ProviderTargetPropertyType:
    enum:
    - string
    - option
    - boolean
    - int
    - float
    - file-path
    type: string
    x-enum-varnames:
    - ProviderTargetPropertyTypeString
    - ProviderTargetPropertyTypeOption
    - ProviderTargetPropertyTypeBoolean
    - ProviderTargetPropertyTypeInt
    - ProviderTargetPropertyTypeFloat
    - ProviderTargetPropertyTypeFilePath
host: localhost:3000
info:
  contact: {}
  description: Daytona Server API
  title: Daytona Server API
  version: 0.1.0
paths:
  /provider:
    get:
      description: List providers
      operationId: ListProviders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Provider'
            type: array
      summary: List providers
      tags:
      - provider
  /provider/{provider}/target-manifest:
    get:
      description: Get provider target manifest
      operationId: GetTargetManifest
      parameters:
      - description: Provider name
        in: path
        name: provider
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProviderTargetManifest'
      summary: Get provider target manifest
      tags:
      - provider
  /provider/{provider}/uninstall:
    post:
      consumes:
      - application/json
      description: Uninstall a provider
      operationId: UninstallProvider
      parameters:
      - description: Provider to uninstall
        in: path
        name: provider
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Uninstall a provider
      tags:
      - provider
  /provider/install:
    post:
      consumes:
      - application/json
      description: Install a provider
      operationId: InstallProvider
      parameters:
      - description: Provider to install
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/InstallProviderRequest'
      responses:
        "200":
          description: OK
      summary: Install a provider
      tags:
      - provider
  /server/config:
    get:
      description: Get the server configuration
      operationId: GetConfig
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServerConfig'
      summary: Get the server configuration
      tags:
      - server
    post:
      consumes:
      - application/json
      description: Set the server configuration
      operationId: SetConfig
      parameters:
      - description: Server configuration
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/ServerConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ServerConfig'
      summary: Set the server configuration
      tags:
      - server
  /server/get-git-context/{gitUrl}:
    get:
      description: Get Git context
      operationId: GetGitContext
      parameters:
      - description: Git URL
        in: path
        name: gitUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Repository'
      summary: Get Git context
      tags:
      - server
  /server/network-key:
    post:
      description: Generate a new authentication key
      operationId: GenerateNetworkKey
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/NetworkKey'
      summary: Generate a new authentication key
      tags:
      - server
  /target:
    get:
      description: List targets
      operationId: ListTargets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProviderTarget'
            type: array
      summary: List targets
      tags:
      - target
    put:
      description: Set a target
      operationId: SetTarget
      parameters:
      - description: Target to set
        in: body
        name: target
        required: true
        schema:
          $ref: '#/definitions/ProviderTarget'
      responses:
        "201":
          description: Created
      summary: Set a target
      tags:
      - target
  /target/{target}:
    delete:
      description: Remove a target
      operationId: RemoveTarget
      parameters:
      - description: Target name
        in: path
        name: target
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Remove a target
      tags:
      - target
  /workspace:
    get:
      description: List workspaces
      operationId: ListWorkspaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Workspace'
            type: array
      summary: List workspaces
      tags:
      - workspace
    post:
      description: Create a workspace
      operationId: CreateWorkspace
      parameters:
      - description: Create workspace
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/CreateWorkspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Workspace'
      summary: Create a workspace
      tags:
      - workspace
  /workspace/{workspaceId}:
    delete:
      description: Remove workspace
      operationId: RemoveWorkspace
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Remove workspace
      tags:
      - workspace
    get:
      description: Get workspace info
      operationId: GetWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Workspace'
      summary: Get workspace info
      tags:
      - workspace
  /workspace/{workspaceId}/{projectId}/start:
    post:
      description: Start project
      operationId: StartProject
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Start project
      tags:
      - workspace
  /workspace/{workspaceId}/{projectId}/stop:
    post:
      description: Stop project
      operationId: StopProject
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Stop project
      tags:
      - workspace
  /workspace/{workspaceId}/start:
    post:
      description: Start workspace
      operationId: StartWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Start workspace
      tags:
      - workspace
  /workspace/{workspaceId}/stop:
    post:
      description: Stop workspace
      operationId: StopWorkspace
      parameters:
      - description: Workspace ID or Name
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Stop workspace
      tags:
      - workspace
schemes:
- http
swagger: "2.0"
