/*
Daytona Server API

Daytona Server API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package serverapiclient

import (
	"encoding/json"
)

// checks if the CreateWorkspaceRequestProject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWorkspaceRequestProject{}

// CreateWorkspaceRequestProject struct for CreateWorkspaceRequestProject
type CreateWorkspaceRequestProject struct {
	EnvVars *map[string]string                   `json:"envVars,omitempty"`
	Id      *string                              `json:"id,omitempty"`
	Image   *string                              `json:"image,omitempty"`
	Name    *string                              `json:"name,omitempty"`
	Source  *CreateWorkspaceRequestProjectSource `json:"source,omitempty"`
}

// NewCreateWorkspaceRequestProject instantiates a new CreateWorkspaceRequestProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWorkspaceRequestProject() *CreateWorkspaceRequestProject {
	this := CreateWorkspaceRequestProject{}
	return &this
}

// NewCreateWorkspaceRequestProjectWithDefaults instantiates a new CreateWorkspaceRequestProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWorkspaceRequestProjectWithDefaults() *CreateWorkspaceRequestProject {
	this := CreateWorkspaceRequestProject{}
	return &this
}

// GetEnvVars returns the EnvVars field value if set, zero value otherwise.
func (o *CreateWorkspaceRequestProject) GetEnvVars() map[string]string {
	if o == nil || IsNil(o.EnvVars) {
		var ret map[string]string
		return ret
	}
	return *o.EnvVars
}

// GetEnvVarsOk returns a tuple with the EnvVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceRequestProject) GetEnvVarsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.EnvVars) {
		return nil, false
	}
	return o.EnvVars, true
}

// HasEnvVars returns a boolean if a field has been set.
func (o *CreateWorkspaceRequestProject) HasEnvVars() bool {
	if o != nil && !IsNil(o.EnvVars) {
		return true
	}

	return false
}

// SetEnvVars gets a reference to the given map[string]string and assigns it to the EnvVars field.
func (o *CreateWorkspaceRequestProject) SetEnvVars(v map[string]string) {
	o.EnvVars = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateWorkspaceRequestProject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceRequestProject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateWorkspaceRequestProject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateWorkspaceRequestProject) SetId(v string) {
	o.Id = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CreateWorkspaceRequestProject) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceRequestProject) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CreateWorkspaceRequestProject) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *CreateWorkspaceRequestProject) SetImage(v string) {
	o.Image = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateWorkspaceRequestProject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceRequestProject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateWorkspaceRequestProject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateWorkspaceRequestProject) SetName(v string) {
	o.Name = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CreateWorkspaceRequestProject) GetSource() CreateWorkspaceRequestProjectSource {
	if o == nil || IsNil(o.Source) {
		var ret CreateWorkspaceRequestProjectSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWorkspaceRequestProject) GetSourceOk() (*CreateWorkspaceRequestProjectSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CreateWorkspaceRequestProject) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given CreateWorkspaceRequestProjectSource and assigns it to the Source field.
func (o *CreateWorkspaceRequestProject) SetSource(v CreateWorkspaceRequestProjectSource) {
	o.Source = &v
}

func (o CreateWorkspaceRequestProject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWorkspaceRequestProject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvVars) {
		toSerialize["envVars"] = o.EnvVars
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

type NullableCreateWorkspaceRequestProject struct {
	value *CreateWorkspaceRequestProject
	isSet bool
}

func (v NullableCreateWorkspaceRequestProject) Get() *CreateWorkspaceRequestProject {
	return v.value
}

func (v *NullableCreateWorkspaceRequestProject) Set(val *CreateWorkspaceRequestProject) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWorkspaceRequestProject) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWorkspaceRequestProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWorkspaceRequestProject(val *CreateWorkspaceRequestProject) *NullableCreateWorkspaceRequestProject {
	return &NullableCreateWorkspaceRequestProject{value: val, isSet: true}
}

func (v NullableCreateWorkspaceRequestProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWorkspaceRequestProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
